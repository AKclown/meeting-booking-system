var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.538,1,2.659]],["body/controllers/AppController.html",[0,2.693,1,4.654,2,2.266,3,0.254,4,0.225,5,0.197,6,4.799,7,0.302,8,0.017,9,1.041,10,4.266,11,4.799,12,0.254,13,0.236,14,3.149,15,3.149,16,0.015,17,0.015]],["title/modules/AppModule.html",[18,1.217,19,2.659]],["body/modules/AppModule.html",[1,3.752,2,1.851,3,0.144,4,0.128,5,0.112,7,0.344,8,0.018,9,0.59,10,3.896,11,2.718,12,0.144,13,0.134,16,0.01,17,0.01,18,1.717,19,5.271,20,1.497,21,1.497,22,1.677,23,1.677,24,1.497,25,2.836,26,1.677,27,2.718,28,2.718,29,2.718,30,4.187,31,4.187,32,4.187,33,4.187,34,4.187,35,4.187,36,2.418,37,1.677,38,1.677,39,3.153,40,3.199,41,3.153,42,2.218,43,1.582,44,3.153,45,1.399,46,3.153,47,2.572,48,3.153,49,1.763,50,2.218,51,3.153,52,3.153,53,3.153,54,3.463,55,1.905,56,5.333,57,1.905,58,2.748,59,3.153,60,3.199,61,3.153,62,2.418,63,2.047,64,3.153,65,2.159,66,1.783,67,1.783,68,3.153,69,2.159,70,3.153,71,3.153,72,3.153,73,3.153,74,2.171,75,3.153,76,3.153,77,3.153,78,2.432,79,0.928,80,0.268,81,3.153,82,1.905,83,3.153,84,2.432,85,3.153,86,1.015,87,3.153,88,2.047,89,3.153,90,2.718,91,3.153,92,1.783,93,3.153,94,3.153,95,3.153,96,2.218,97,3.153,98,2.718,99,3.153,100,3.153,101,3.153,102,1.349,103,3.92,104,4.547]],["title/injectables/AppService.html",[10,2.284,105,0.973]],["body/injectables/AppService.html",[3,0.265,4,0.235,5,0.205,7,0.265,8,0.017,9,1.084,10,4.094,12,0.265,13,0.246,16,0.015,17,0.015,105,1.744,106,2.752,107,4.997]],["title/entities/Booking.html",[69,1.794,108,1.702]],["body/entities/Booking.html",[3,0.156,4,0.139,5,0.121,7,0.255,8,0.018,12,0.22,13,0.145,16,0.011,17,0.011,45,2.095,65,2.877,66,1.935,67,1.935,69,2.289,80,0.601,92,1.935,108,2.17,109,2.639,110,0.251,111,0.633,112,2.65,113,3.926,114,1.797,115,4.811,116,2.8,117,3.926,118,2.968,119,3.623,120,3.697,121,1.201,122,2.95,123,0.781,124,3.421,125,4.155,126,3.421,127,1.036,128,3.623,129,3.421,130,0.668,131,3.718,132,3.13,133,4.513,134,3.661,135,3.421,136,4.82,137,3.421,138,3.421,139,3.926,140,3.391,141,3.421,142,2.95,143,3.421,144,3.421,145,4.147,146,3.718,147,5.58,148,3.718,149,1.625,150,1.393,151,2.407,152,3.421,153,2.95,154,2.95,155,2.95,156,2.95,157,3.13]],["title/controllers/BookingController.html",[0,1.538,158,2.659]],["body/controllers/BookingController.html",[0,0.885,2,0.885,3,0.099,4,0.088,5,0.077,7,0.267,8,0.017,9,0.407,12,0.099,13,0.092,14,1.229,15,1.229,16,0.008,17,0.008,69,1.032,79,1.548,80,0.645,86,1.8,110,0.159,114,2.307,118,2.569,121,0.894,123,0.581,127,1.628,130,1.025,139,1.529,158,2.414,159,1.874,160,1.411,161,1.157,162,2.431,163,2.959,164,2.762,165,2.959,166,2.959,167,2.959,168,1.874,169,4.164,170,3.132,171,4.164,172,2.424,173,2.173,174,2.173,175,1.619,176,1.712,177,1.619,178,1.772,179,2.497,180,1.411,181,3.536,182,3.932,183,4.819,184,4.819,185,4.819,186,1.676,187,3.178,188,4.424,189,4.819,190,1.874,191,2.173,192,2.173,193,1.874,194,2.173,195,2.173,196,1.874,197,2.173,198,2.173,199,1.874,200,2.173,201,2.173,202,1.676,203,1.156,204,1.874,205,5.259,206,2.229,207,2.57,208,1.874,209,1.411,210,1.411,211,1.676,212,3.932,213,1.676,214,4.534,215,3.939,216,3.63,217,2.229,218,0.512,219,2.805,220,1.529,221,2.414,222,2.173,223,1.529,224,2.173,225,3.31,226,1.676,227,1.676,228,1.468,229,1.676,230,1.676,231,1.676,232,1.676,233,1.874,234,2.173,235,2.173,236,2.173,237,2.173,238,1.944,239,2.173,240,3.137,241,2.959,242,2.173,243,2.173,244,2.173,245,2.959,246,2.173,247,2.173,248,2.173,249,3.666,250,2.173,251,2.173,252,2.173,253,2.173,254,2.173,255,2.173]],["title/classes/BookingListVo.html",[13,0.16,221,2.659]],["body/classes/BookingListVo.html",[3,0.232,4,0.206,5,0.18,7,0.286,8,0.017,12,0.232,13,0.215,16,0.014,17,0.014,80,0.577,110,0.372,111,0.822,121,1.064,123,0.692,127,1.346,172,2.55,218,1.196,221,4.404,256,1.43,257,5.849,258,3.574,259,5.849,260,4.1,261,5.397,262,3.574,263,4.38,264,2.18,265,4.38,266,4.404,267,5.081]],["title/modules/BookingModule.html",[18,1.217,30,2.454]],["body/modules/BookingModule.html",[2,2.497,3,0.225,4,0.199,5,0.174,7,0.329,8,0.017,9,0.92,12,0.225,13,0.208,16,0.014,17,0.014,18,2.153,20,2.335,21,2.335,22,2.616,23,2.616,24,2.335,25,3.556,26,2.616,30,4.771,36,3.263,37,2.616,38,2.616,40,3.46,42,3.46,43,2.468,69,2.335,158,4.704,207,4.439,208,4.24,211,3.793,268,4.24,269,4.24,270,4.918,271,4.918,272,4.918]],["title/injectables/BookingService.html",[105,0.973,207,2.284]],["body/injectables/BookingService.html",[3,0.087,4,0.077,5,0.068,7,0.264,8,0.018,9,0.357,12,0.087,13,0.081,16,0.007,17,0.007,43,0.958,45,0.952,65,0.906,66,1.079,67,1.079,69,2.839,74,1.825,79,1.552,80,0.492,86,1.586,102,1.668,105,0.796,106,0.906,110,0.14,111,0.406,114,2.128,116,0.958,118,2.074,120,2.385,121,0.662,123,0.661,127,1.542,130,0.829,139,1.342,149,0.906,150,0.777,151,1.342,161,1.042,162,2.434,163,2.666,164,2.532,165,2.666,166,2.666,167,2.666,168,2.666,175,1.516,176,1.299,177,1.516,178,1.778,179,2.34,180,1.239,181,2.709,182,3.154,183,3.866,184,4.248,185,4.248,187,2.356,193,2.666,196,2.666,199,2.666,207,1.869,211,1.472,228,2.827,238,2.368,241,1.645,245,1.645,249,1.645,259,2.666,260,1.869,273,1.645,274,2.557,275,2.984,276,4.548,277,2.806,278,2.911,279,1.908,280,1.908,281,1.908,282,1.908,283,1.908,284,1.908,285,1.908,286,3.361,287,1.908,288,2.666,289,1.908,290,1.472,291,2.666,292,1.472,293,1.908,294,2.117,295,3.361,296,3.092,297,1.342,298,3.361,299,1.342,300,3.361,301,3.092,302,2.175,303,3.361,304,1.645,305,3.092,306,1.908,307,1.908,308,1.908,309,1.908,310,4.484,311,4.927,312,5.417,313,4.484,314,3.092,315,1.908,316,1.908,317,1.908,318,1.908,319,3.092,320,1.908,321,1.908,322,1.908,323,1.908,324,3.092,325,1.908,326,1.908,327,1.908,328,1.908,329,1.908,330,1.645,331,3.899,332,1.908,333,1.908,334,1.908,335,1.908,336,1.908,337,1.908,338,1.908,339,1.472,340,1.472,341,1.472,342,1.472,343,1.645,344,1.908,345,1.472,346,1.908,347,1.472,348,3.899,349,3.092,350,1.908,351,1.95,352,1.908,353,1.908,354,1.908,355,1.645,356,1.239,357,1.908,358,1.908,359,1.645,360,1.472,361,1.472,362,1.908,363,1.472]],["title/classes/BookingVo.html",[13,0.16,266,2.659]],["body/classes/BookingVo.html",[3,0.182,4,0.161,5,0.141,7,0.276,8,0.017,12,0.182,13,0.169,16,0.012,17,0.012,45,2.137,65,2.871,66,2.256,67,2.256,80,0.622,110,0.292,111,0.703,112,2.871,113,4.254,114,1.947,115,5.213,116,3.035,117,4.254,118,3.216,119,3.927,120,3.835,121,1.241,123,0.807,127,1.151,130,0.896,150,1.623,151,2.805,218,0.939,256,1.122,264,2.378,266,3.768,364,3.438,365,3.988,366,3.988,367,3.988,368,3.988,369,3.988,370,3.988,371,3.988,372,3.988,373,3.988]],["title/classes/CreateMeetingRoomDto.html",[13,0.16,374,2.284]],["body/classes/CreateMeetingRoomDto.html",[3,0.17,4,0.151,5,0.132,7,0.234,8,0.018,12,0.17,13,0.217,16,0.011,17,0.011,62,3.618,80,0.561,96,3.596,110,0.273,111,0.671,121,1.119,123,0.728,127,1.099,130,0.984,132,3.319,150,2.769,170,2.629,176,1.437,218,0.876,256,1.048,264,2.094,374,3.089,375,5.865,376,2.872,377,3.791,378,3.791,379,3.791,380,5.678,381,3.723,382,5.112,383,3.546,384,3.723,385,6.803,386,4.847,387,3.723,388,3.723,389,3.723,390,4.111,391,3.21,392,2.106]],["title/classes/CustomExceptionFilter.html",[13,0.16,393,2.915]],["body/classes/CustomExceptionFilter.html",[3,0.209,4,0.186,5,0.162,7,0.268,8,0.018,9,0.857,12,0.209,13,0.194,16,0.013,17,0.013,80,0.39,82,3.911,110,0.336,123,0.507,130,0.635,161,1.977,175,1.411,176,1.128,177,1.411,178,1.545,256,1.29,294,1.977,383,2.786,393,4.526,394,5.059,395,3.952,396,2.945,397,4.992,398,3.248,399,4.526,400,5.883,401,5.263,402,4.584,403,3.952,404,3.952,405,4.203,406,2.064,407,4.584,408,3.535,409,3.535,410,5.868,411,4.584,412,3.952,413,4.584,414,3.535,415,2.77,416,3.535,417,2.176,418,4.584,419,3.535,420,3.535]],["title/controllers/EmailController.html",[0,1.538,421,2.659]],["body/controllers/EmailController.html",[0,1.194,2,1.194,3,0.134,4,0.119,5,0.104,7,0.275,8,0.018,9,0.549,12,0.134,13,0.124,14,1.659,15,1.659,16,0.01,17,0.01,74,2.297,79,1.506,80,0.61,102,1.846,110,0.215,118,2.722,121,0.87,123,0.566,130,1.017,160,1.905,161,1.454,162,2.402,170,3.116,172,2.568,175,1.575,176,1.48,177,1.575,178,1.724,179,2.43,188,3.664,203,1.56,206,1.905,212,3.035,215,3.323,216,3.664,217,2.801,218,0.69,219,2.165,220,2.064,238,2.325,240,3.323,274,1.255,275,2.895,277,2.722,292,2.263,294,1.724,297,3.6,312,4.412,351,1.085,359,4.412,360,3.947,361,3.947,415,4.113,421,3.035,422,2.529,423,4.314,424,4.314,425,4.314,426,2.933,427,3.328,428,6.182,429,3.41,430,4.314,431,2.933,432,2.801,433,2.933,434,2.933,435,2.529,436,2.933,437,2.933,438,2.933,439,2.933,440,2.933,441,2.529,442,1.659,443,2.933,444,2.607,445,2.933,446,2.933,447,5.117,448,5.117,449,2.933,450,2.933,451,2.933,452,2.933,453,2.933,454,2.933,455,2.933,456,2.933]],["title/modules/EmailModule.html",[18,1.217,31,2.454]],["body/modules/EmailModule.html",[2,2.492,3,0.224,4,0.199,5,0.174,7,0.305,8,0.017,9,0.917,12,0.224,13,0.208,16,0.014,17,0.014,18,2.15,20,2.328,21,2.328,22,2.608,23,2.608,24,2.328,25,3.551,26,3.551,31,4.836,36,3.257,37,2.608,38,2.608,275,4.37,421,4.698,441,4.227,457,4.227,458,4.227,459,4.227,460,4.903,461,4.723,462,4.903]],["title/injectables/EmailService.html",[105,0.973,275,2.138]],["body/injectables/EmailService.html",[3,0.202,4,0.179,5,0.156,7,0.291,8,0.018,9,0.826,12,0.202,13,0.187,14,2.498,16,0.013,17,0.013,45,1.359,54,4.639,55,2.668,74,1.797,80,0.488,82,2.668,84,3.406,105,1.475,106,2.097,110,0.323,111,0.752,123,0.703,161,1.93,162,2.244,175,1.763,176,1.565,177,1.763,178,1.488,238,1.633,275,3.24,360,4.418,361,4.418,428,3.807,463,3.807,464,7.144,465,6.358,466,3.807,467,4.416,468,5.728,469,4.416,470,4.416,471,5.728,472,3.807,473,4.416,474,4.416,475,4.416,476,4.416,477,4.416,478,5.728,479,4.416,480,4.416,481,4.416]],["title/injectables/FormatResponseInterceptor.html",[105,0.973,482,2.915]],["body/injectables/FormatResponseInterceptor.html",[3,0.214,4,0.19,5,0.166,7,0.299,8,0.017,9,0.876,12,0.214,13,0.199,16,0.013,17,0.013,79,1.751,80,0.399,105,1.532,106,2.225,110,0.343,123,0.518,161,2.005,175,1.442,176,1.153,177,1.442,178,1.579,294,1.579,383,2.225,396,2.351,405,4.246,406,2.11,409,3.614,415,2.831,417,2.225,482,4.59,483,5.13,484,4.039,485,5.13,486,5.13,487,3.891,488,5.638,489,5.931,490,4.685,491,3.296,492,5.638,493,5.13,494,4.685,495,3.614,496,4.039,497,4.039,498,4.685,499,4.039]],["title/injectables/InvokeRecordInterceptor.html",[105,0.973,500,2.915]],["body/injectables/InvokeRecordInterceptor.html",[3,0.18,4,0.159,5,0.139,7,0.274,8,0.018,9,0.735,12,0.18,13,0.167,15,3.396,16,0.012,17,0.012,45,1.21,79,1.157,80,0.335,105,1.366,106,1.867,110,0.288,111,0.697,123,0.586,134,2.376,161,1.788,175,1.21,176,0.968,177,1.21,178,1.325,228,2.269,274,2.568,294,2.262,396,1.973,405,3.445,406,1.77,409,3.033,485,4.574,486,4.574,487,3.636,488,5.176,489,5.541,491,2.766,492,5.176,493,4.574,495,3.033,496,3.39,497,3.39,500,4.092,501,5.176,502,3.39,503,5.541,504,3.932,505,2.553,506,5.305,507,3.932,508,3.932,509,3.193,510,3.932,511,3.932,512,2.553,513,6.004,514,3.932,515,3.932,516,6.004,517,6.004,518,5.176,519,6.004,520,3.932,521,3.932,522,3.932,523,3.932,524,3.932,525,5.305,526,4.574,527,3.932,528,3.932,529,3.932,530,3.932]],["title/interfaces/JwtUserData.html",[531,2.284,532,2.454]],["body/interfaces/JwtUserData.html",[3,0.165,4,0.147,5,0.128,7,0.298,8,0.018,9,0.677,12,0.165,13,0.153,16,0.011,17,0.011,18,1.165,45,1.114,49,2.407,50,2.546,57,2.187,58,2.187,74,2.04,79,1.475,80,0.555,86,2.099,102,1.548,105,1.291,110,0.265,111,0.658,127,1.237,130,0.992,162,1.277,219,2.516,228,2.145,238,1.338,274,2.145,294,2.197,351,2.41,396,1.816,398,1.816,406,2.257,417,1.719,487,2.836,509,3.302,512,2.35,531,3.029,532,3.735,533,2.792,534,2.546,535,3.096,536,3.467,537,3.688,538,3.527,539,3.255,540,4.046,541,4.046,542,2.187,543,2.792,544,2.546,545,2.546,546,2.546,547,2.546,548,2.792,549,2.792,550,2.35,551,2.546,552,2.546,553,3.867,554,2.792,555,2.836,556,2.187,557,2.546,558,2.792,559,2.792,560,2.35,561,2.792,562,2.792,563,2.792,564,2.792,565,2.792,566,2.35,567,2.546]],["title/guards/LoginGuard.html",[58,2.284,568,2.915]],["body/guards/LoginGuard.html",[3,0.17,4,0.15,5,0.132,7,0.301,8,0.018,9,0.695,12,0.17,13,0.157,16,0.011,17,0.011,18,1.196,45,1.143,49,1.979,50,2.614,57,2.245,58,3.084,74,2.078,79,1.502,80,0.316,86,1.643,102,1.589,105,1.314,110,0.272,111,0.488,123,0.411,127,0.799,130,0.808,161,1.72,162,2.058,175,1.143,176,0.915,177,1.143,178,1.252,219,2.562,228,2.184,238,1.374,274,2.686,294,2.217,351,1.887,396,1.864,398,1.864,406,2.298,417,1.764,487,3.551,491,2.614,509,3.339,512,2.412,531,3.084,532,3.314,534,2.614,535,2.424,536,2.715,537,2.887,538,4.416,539,3.314,540,4.416,541,4.416,542,2.245,543,2.866,544,2.614,545,2.614,546,3.591,547,3.591,548,2.866,549,2.866,550,2.412,551,2.614,552,2.614,553,3.937,554,2.866,555,2.887,556,2.245,557,2.614,558,2.866,559,2.866,560,2.412,561,2.866,562,2.866,563,2.866,564,2.866,565,2.866,566,2.412,567,2.614,569,2.866,570,3.715]],["title/classes/LoginUserDto.html",[13,0.16,571,2.454]],["body/classes/LoginUserDto.html",[3,0.227,4,0.202,5,0.176,7,0.282,8,0.017,12,0.227,13,0.262,16,0.014,17,0.014,80,0.526,86,2.164,88,4.365,110,0.364,111,0.811,121,1.05,123,0.683,130,0.974,218,1.171,256,1.4,264,2.225,383,2.934,390,4.062,392,2.815,571,4.013,572,5.795,573,3.838,574,4.347,575,4.976,576,4.29]],["title/classes/LoginUserVo.html",[13,0.16,577,2.284]],["body/classes/LoginUserVo.html",[3,0.192,4,0.17,5,0.149,7,0.254,8,0.017,12,0.254,13,0.235,16,0.012,17,0.012,49,2.408,80,0.562,86,1.354,110,0.308,111,0.729,112,1.997,114,1.354,121,1.055,123,0.686,127,1.193,130,1.033,218,0.99,256,1.184,264,2.385,351,1.555,356,2.731,429,4.26,442,3.988,444,2.542,535,1.997,536,2.237,577,3.353,578,5.093,579,3.244,580,4.369,581,4.369,582,4.206,583,4.206,584,4.206,585,2.959,586,2.731,587,2.111,588,3.626,589,2.379,590,2.959,591,2.542,592,2.542,593,2.951]],["title/entities/MeetingRoom.html",[65,1.794,108,1.702]],["body/entities/MeetingRoom.html",[3,0.15,4,0.133,5,0.116,7,0.214,8,0.018,12,0.15,13,0.139,16,0.01,17,0.01,65,2.222,66,4.015,80,0.596,92,1.856,108,2.107,110,0.24,111,0.614,112,2.59,114,2.024,119,3.541,120,3.162,121,1.189,123,0.773,127,1.278,128,3.039,130,0.953,132,3.039,133,4.751,134,3.949,145,4.367,146,3.609,148,3.609,149,1.558,150,2.889,157,3.861,170,2.456,176,1.343,218,0.772,225,2.647,264,2.185,377,3.541,378,3.541,379,3.541,386,5.041,593,2.489,594,2.829,595,4.702,596,4.679,597,3.281,598,3.281,599,3.281,600,5.946,601,3.281,602,3.281,603,3.281,604,3.281,605,3.281,606,3.281,607,3.281,608,3.281,609,3.281]],["title/controllers/MeetingRoomController.html",[0,1.538,610,2.659]],["body/controllers/MeetingRoomController.html",[0,0.851,2,0.851,3,0.095,4,0.085,5,0.074,7,0.282,8,0.018,9,0.391,12,0.095,13,0.089,14,1.182,15,1.182,16,0.007,17,0.007,62,2.513,63,3.743,79,1.518,80,0.639,110,0.153,114,2.035,116,2.08,118,2.923,121,0.934,123,0.607,127,1.556,130,0.993,150,2.346,160,1.357,161,1.121,162,2.477,164,2.691,169,2.868,170,3.107,171,2.868,172,2.758,175,1.588,176,1.728,177,1.588,178,1.852,179,2.45,180,1.357,181,3.483,186,1.612,187,3.118,188,4.103,189,4.074,190,1.802,202,1.612,203,1.112,204,1.802,206,2.16,209,1.357,210,1.357,212,3.866,213,3.197,214,3.573,215,3.568,216,3.885,217,2.16,218,0.492,219,2.758,220,1.47,223,1.47,225,2.918,226,1.612,227,1.612,228,1.423,229,1.612,230,1.612,231,1.612,232,1.612,238,1.908,240,3.068,278,3.068,345,3.197,347,2.566,374,3.118,377,3.568,378,3.568,379,3.068,417,1.58,610,2.341,611,1.802,612,2.341,613,2.868,614,2.341,615,1.802,616,2.868,617,2.09,618,2.868,619,2.09,620,2.09,621,4.074,622,1.802,623,2.09,624,2.09,625,1.802,626,2.09,627,2.09,628,2.868,629,2.09,630,2.09,631,2.09,632,1.802,633,3.35,634,2.09,635,2.09,636,2.09,637,1.802,638,1.802,639,2.09,640,2.505,641,1.802,642,1.802,643,2.566,644,1.47,645,2.16,646,2.868,647,1.802,648,2.341,649,2.09,650,2.09,651,2.09,652,2.09,653,2.09,654,2.09,655,2.09,656,2.566,657,2.09,658,2.09,659,2.09,660,2.09,661,2.09,662,2.09,663,2.09,664,2.09,665,2.09,666,2.09,667,2.09,668,2.09]],["title/classes/MeetingRoomListVo.html",[13,0.16,648,2.659]],["body/classes/MeetingRoomListVo.html",[3,0.227,4,0.202,5,0.176,7,0.282,8,0.017,12,0.227,13,0.211,16,0.014,17,0.014,62,2.646,80,0.572,110,0.364,111,0.811,116,3.373,121,1.05,123,0.683,127,1.329,150,2.736,172,2.497,218,1.171,256,1.4,258,3.5,260,4.062,261,5.328,262,3.5,263,4.29,264,2.164,265,4.29,645,4.013,647,4.29,648,4.347,669,5.185,670,5.185]],["title/modules/MeetingRoomModule.html",[18,1.217,32,2.454]],["body/modules/MeetingRoomModule.html",[2,2.474,3,0.221,4,0.196,5,0.172,7,0.328,8,0.017,9,0.907,12,0.221,13,0.205,16,0.014,17,0.014,18,2.139,20,2.302,21,2.302,22,2.578,23,2.578,24,2.302,25,3.533,26,2.578,32,4.753,36,3.233,37,2.578,38,2.578,40,3.41,42,3.41,43,2.432,62,3.233,63,3.147,65,2.302,67,2.742,150,1.973,610,4.673,640,4.423,641,4.179,671,4.179,672,4.179,673,4.847,674,4.847,675,4.179,676,4.847]],["title/injectables/MeetingRoomService.html",[105,0.973,640,2.284]],["body/injectables/MeetingRoomService.html",[3,0.113,4,0.1,5,0.087,7,0.269,8,0.018,9,0.462,12,0.113,13,0.105,16,0.008,17,0.008,43,1.239,62,2.016,63,4.111,65,2.913,67,1.397,79,1.643,80,0.502,96,1.737,105,0.976,106,1.173,110,0.181,111,0.498,114,1.798,116,1.902,121,0.42,123,0.678,127,1.52,130,0.9,149,1.173,150,2.577,161,1.277,162,2.55,164,2.996,175,1.718,176,1.631,177,1.718,178,1.986,179,2.651,180,1.604,181,3.127,187,2.788,228,2.388,238,2.179,260,2.291,274,1.974,278,3.36,290,3.558,294,1.986,297,1.737,300,2.129,303,3.268,339,1.905,340,1.905,341,1.905,342,1.905,345,2.924,363,1.905,374,3.127,377,3.36,378,3.36,379,3.36,555,2.144,612,2.667,613,3.268,614,2.667,615,3.268,621,3.268,622,3.268,625,3.268,632,3.268,633,3.36,640,2.291,642,2.129,643,2.924,644,1.737,675,2.129,677,2.129,678,4.545,679,2.469,680,2.469,681,2.469,682,2.469,683,2.469,684,2.469,685,3.791,686,2.469,687,2.129,688,2.469,689,2.469,690,2.469,691,2.469,692,2.469,693,2.469,694,2.469,695,2.469,696,3.791,697,2.469,698,2.469,699,2.469,700,2.469,701,2.469,702,2.469,703,2.469,704,2.469,705,2.469,706,2.469,707,2.469,708,2.469,709,2.469,710,3.791,711,2.469,712,4.613,713,3.791,714,2.469,715,2.469,716,2.469,717,2.469,718,2.469,719,2.469,720,2.469,721,3.791,722,2.469,723,3.791,724,2.469,725,2.469,726,2.469]],["title/classes/MeetingRoomUsedCountVo.html",[13,0.16,727,2.659]],["body/classes/MeetingRoomUsedCountVo.html",[3,0.223,4,0.198,5,0.173,7,0.223,8,0.017,12,0.223,13,0.207,16,0.014,17,0.014,80,0.568,110,0.358,111,0.803,116,3.506,121,1.133,123,0.737,127,1.314,130,0.968,182,4.691,218,1.151,256,1.376,264,2.291,727,4.3,728,6.023,729,5.389,730,3.771,731,5.749,732,5.749,733,4.215,734,4.215,735,4.215]],["title/classes/MeetingRoomVo.html",[13,0.16,645,2.454]],["body/classes/MeetingRoomVo.html",[3,0.179,4,0.158,5,0.139,7,0.179,8,0.017,12,0.179,13,0.166,16,0.012,17,0.012,80,0.619,110,0.287,111,0.694,112,2.844,114,1.929,119,3.889,120,3.412,121,1.236,123,0.804,127,1.379,130,0.995,150,2.994,170,2.697,176,1.475,218,0.921,256,1.101,264,2.374,377,3.889,378,3.889,379,3.889,593,2.813,595,5.164,645,3.434,669,5.673,736,3.374,737,3.913,738,3.913,739,3.913,740,3.913,741,3.913,742,3.913,743,3.913,744,3.913,745,3.913]],["title/entities/Permission.html",[49,1.465,108,1.702]],["body/entities/Permission.html",[3,0.209,4,0.186,5,0.162,7,0.268,8,0.017,12,0.209,13,0.194,16,0.013,17,0.013,49,2.275,80,0.551,92,2.593,108,2.642,110,0.336,111,0.77,114,2.084,121,1.1,123,0.715,127,1.262,128,3.81,130,0.946,131,4.526,132,4.431,133,4.431,140,4.801,145,4.203,149,2.176,157,3.81,170,2.914,218,1.079,264,2.1,391,5.059,415,3.911,746,3.952,747,5.868,748,4.584,749,4.584,750,4.584,751,4.584]],["title/guards/PermissionGuard.html",[60,2.659,568,2.915]],["body/guards/PermissionGuard.html",[3,0.198,4,0.176,5,0.154,7,0.288,8,0.018,9,0.811,12,0.198,13,0.184,16,0.013,17,0.013,49,1.681,57,2.62,60,3.983,74,2.565,79,1.855,80,0.369,102,1.855,105,1.457,110,0.318,111,0.569,123,0.479,161,1.908,162,2.224,175,1.335,176,1.067,177,1.335,178,1.461,228,1.855,274,2.422,294,2.124,396,2.176,406,1.953,487,3.78,491,3.05,509,3.352,512,2.816,535,2.059,538,4.701,539,3.676,540,4.701,544,3.05,546,3.983,547,3.983,551,3.05,552,3.05,555,2.453,560,2.816,569,3.345,752,3.738,753,4.336,754,4.336,755,5.661,756,4.336,757,4.336,758,3.738,759,4.336,760,4.336,761,4.336]],["title/modules/RedisModule.html",[18,1.217,33,2.454]],["body/modules/RedisModule.html",[3,0.203,4,0.18,5,0.158,7,0.308,8,0.018,9,0.833,12,0.203,13,0.189,16,0.013,17,0.013,18,2.055,20,2.113,21,2.113,22,2.367,23,2.367,24,2.113,25,3.395,26,3.395,33,4.731,36,3.062,37,2.367,38,2.367,54,4.145,55,2.689,78,3.433,79,1.31,82,2.689,84,3.433,90,3.837,102,1.904,103,3.837,162,1.57,238,1.646,277,4.055,294,1.5,302,3.131,461,4.441,762,3.837,763,3.837,764,3.837,765,4.45,766,4.45,767,5.758,768,3.433,769,4.45,770,5.758,771,4.45,772,4.45,773,4.45,774,4.45,775,4.45]],["title/injectables/RedisService.html",[105,0.973,277,2.01]],["body/injectables/RedisService.html",[3,0.196,4,0.174,5,0.152,7,0.257,8,0.017,9,0.803,12,0.196,13,0.182,16,0.012,17,0.012,79,1.263,80,0.534,102,1.836,105,1.448,106,2.038,110,0.314,111,0.738,121,0.729,123,0.693,127,1.524,130,1.027,161,1.895,162,2.502,175,1.731,176,1.384,177,1.731,178,1.895,179,2.038,238,2.319,274,2.683,277,2.991,505,4.322,768,3.311,776,3.7,777,6.272,778,5.623,779,5.623,780,4.292,781,5.623,782,5.623,783,6.909,784,4.292,785,3.7,786,6.272,787,5.623,788,4.292,789,4.292,790,4.292,791,4.292]],["title/classes/RegisterUserDto.html",[13,0.16,792,2.454]],["body/classes/RegisterUserDto.html",[3,0.184,4,0.163,5,0.143,7,0.247,8,0.018,12,0.184,13,0.229,16,0.012,17,0.012,45,2.144,80,0.576,86,1.959,88,3.95,110,0.296,111,0.709,121,1.15,123,0.748,130,1.025,218,0.95,256,1.136,264,2.277,299,4.57,351,2.249,383,3.379,390,3.925,392,2.283,432,3.95,574,4.28,587,3.053,792,3.505,793,6.007,794,3.479,795,4.035,796,4.692,797,4.035,798,4.035,799,4.654,800,3.479,801,4.035,802,4.035,803,4.654]],["title/interfaces/Request.html",[509,2.01,531,2.284]],["body/interfaces/Request.html",[3,0.176,4,0.156,5,0.136,7,0.304,8,0.018,9,0.72,12,0.176,13,0.163,16,0.012,17,0.012,18,1.24,45,1.961,49,2.028,50,2.709,57,2.327,58,2.327,74,2.129,79,1.539,80,0.328,86,1.684,102,1.647,105,1.347,110,0.282,111,0.687,127,0.828,130,0.823,162,1.359,219,2.625,228,2.238,238,1.424,274,2.238,294,2.245,351,1.934,396,1.933,398,1.933,406,2.355,417,1.829,487,2.959,509,3.544,512,2.501,531,3.161,532,4.138,533,2.97,534,2.709,535,2.484,536,2.782,537,2.959,538,3.68,539,3.397,540,4.179,541,4.179,542,2.327,543,2.97,544,2.709,545,2.709,546,2.709,547,2.709,548,2.97,549,2.97,550,2.501,551,2.709,552,2.709,553,4.035,554,2.97,555,2.959,556,2.327,557,2.709,558,2.97,559,2.97,560,2.501,561,2.97,562,2.97,563,2.97,564,2.97,565,2.97,566,2.501,567,2.709]],["title/entities/Role.html",[47,2.138,108,1.702]],["body/entities/Role.html",[3,0.215,4,0.191,5,0.167,7,0.273,8,0.017,12,0.215,13,0.2,16,0.013,17,0.013,47,3.378,49,2.673,80,0.558,92,2.665,108,2.689,110,0.345,111,0.784,114,2.111,121,1.114,123,0.725,127,1.284,128,4.257,130,0.828,131,3.634,133,3.878,140,4.201,145,3.878,149,2.237,157,3.059,176,1.697,535,3.113,804,4.062,805,4.712,806,4.712,807,4.062,808,5.972,809,4.712,810,5.148,811,5.148,812,4.712]],["title/controllers/StatisticController.html",[0,1.538,813,2.659]],["body/controllers/StatisticController.html",[0,1.393,2,1.393,3,0.156,4,0.139,5,0.121,7,0.292,8,0.018,9,0.64,12,0.156,13,0.145,14,1.935,15,1.935,16,0.011,17,0.011,69,1.625,79,1.418,80,0.631,110,0.251,113,5.142,116,1.717,117,4.89,118,2.563,121,0.819,123,0.533,130,1.057,160,2.222,161,1.624,162,2.338,170,3.291,172,2.419,175,1.483,176,1.631,177,1.483,178,1.624,179,2.289,203,1.82,206,2.222,215,4.147,216,3.623,217,3.13,218,0.805,238,1.782,240,3.13,427,4.673,646,2.95,727,3.926,729,2.639,813,3.391,814,2.95,815,3.421,816,4.811,817,4.811,818,2.95,819,4.82,820,4.82,821,3.421,822,2.95,823,3.926,824,4.82,825,3.421,826,3.372,827,2.95,828,2.639,829,4.82,830,3.421,831,4.82,832,4.82,833,3.421,834,3.421]],["title/modules/StatisticModule.html",[18,1.217,34,2.454]],["body/modules/StatisticModule.html",[2,2.553,3,0.233,4,0.206,5,0.18,7,0.31,8,0.017,9,0.953,12,0.233,13,0.216,16,0.014,17,0.014,18,2.188,20,2.42,21,2.42,22,2.71,23,2.71,24,2.42,25,3.613,26,2.71,34,4.812,36,3.336,37,2.71,38,2.71,813,4.78,826,4.478,827,4.393,835,4.393,836,4.393,837,5.096,838,5.096]],["title/injectables/StatisticService.html",[105,0.973,826,2.284]],["body/injectables/StatisticService.html",[3,0.167,4,0.148,5,0.129,7,0.309,8,0.017,9,0.683,12,0.167,13,0.155,16,0.011,17,0.011,43,1.832,45,1.124,65,1.734,66,2.065,67,2.065,69,1.734,79,1.484,80,0.492,86,1.176,105,1.298,106,1.734,110,0.267,111,0.662,113,4.969,117,4.384,121,0.62,123,0.639,130,1.025,149,1.734,150,1.486,151,2.568,161,1.699,162,2.386,175,1.552,176,1.242,177,1.552,178,1.699,179,2.395,182,2.568,238,1.865,274,2.472,276,5.83,286,4.981,291,4.348,294,1.699,412,5.372,537,2.065,731,3.148,732,3.148,816,4.348,817,4.348,818,4.348,822,4.348,826,3.047,839,3.148,840,3.651,841,3.651,842,3.651,843,3.651,844,5.043,845,5.043,846,5.043,847,3.651,848,3.651,849,3.651,850,3.651,851,3.651,852,3.651,853,5.043,854,3.148,855,5.043,856,6.231,857,6.231,858,3.651,859,5.043,860,3.651,861,3.651,862,3.651,863,3.651,864,3.651,865,3.651,866,3.651]],["title/classes/UnLoginException.html",[13,0.16,867,2.659]],["body/classes/UnLoginException.html",[3,0.213,4,0.189,5,0.165,7,0.271,8,0.017,9,0.874,12,0.271,13,0.252,16,0.013,17,0.013,80,0.506,82,2.823,110,0.342,111,0.78,123,0.657,130,0.983,175,1.438,176,1.15,177,1.438,203,2.485,256,1.315,294,1.575,383,3.444,396,2.345,397,4.582,398,2.345,399,3.604,401,4.582,405,4.241,406,2.104,408,3.604,414,3.604,415,2.823,416,3.604,417,2.219,419,3.604,420,3.604,466,4.028,785,4.028,867,4.594,868,3.604,869,5.121,870,5.94,871,4.028,872,4.028,873,3.287,874,3.604]],["title/classes/UnloginFilter.html",[13,0.16,873,2.659]],["body/classes/UnloginFilter.html",[3,0.212,4,0.188,5,0.165,7,0.27,8,0.017,9,0.869,12,0.27,13,0.251,16,0.013,17,0.013,80,0.396,82,3.936,110,0.34,123,0.514,130,0.82,161,1.995,175,1.43,176,1.144,177,1.43,178,1.566,203,2.471,256,1.308,294,1.566,383,3.093,396,2.971,397,5.024,398,3.269,399,4.566,401,5.29,403,4.006,404,4.006,405,4.23,406,2.092,408,3.584,414,3.584,415,2.808,416,3.584,417,2.206,419,3.584,420,3.584,867,4.825,868,3.584,869,4.006,871,4.006,872,4.006,873,4.164,874,3.584,875,4.647]],["title/classes/UpdateMeetingRoomDto.html",[13,0.16,633,2.454]],["body/classes/UpdateMeetingRoomDto.html",[3,0.227,4,0.201,5,0.176,7,0.321,8,0.017,12,0.227,13,0.261,16,0.014,17,0.014,62,3.57,80,0.422,110,0.363,111,0.81,114,2.326,121,0.843,123,0.548,127,1.326,150,2.511,218,1.452,256,1.396,264,1.898,374,2.998,376,3.827,380,4.277,383,2.356,390,3.727,392,2.806,612,3.49,633,4.005,643,3.827,876,5.318,877,6.168,878,6.168,879,4.961,880,4.961]],["title/classes/UpdateUserDto.html",[13,0.16,881,2.454]],["body/classes/UpdateUserDto.html",[3,0.2,4,0.177,5,0.155,7,0.26,8,0.018,12,0.2,13,0.242,16,0.013,17,0.013,80,0.571,110,0.321,111,0.748,121,1.14,123,0.742,130,1.02,188,3.701,218,1.031,225,3.795,256,1.233,264,2.234,351,2.342,383,3.185,390,3.828,392,2.478,432,4.113,573,3.379,574,4.009,576,3.777,587,3.179,589,3.583,796,4.886,881,3.701,882,5.996,883,4.381,884,4.381,885,5.699,886,4.381]],["title/classes/UpdateUserPasswordDto.html",[13,0.16,887,2.454]],["body/classes/UpdateUserPasswordDto.html",[3,0.189,4,0.167,5,0.146,7,0.251,8,0.018,12,0.189,13,0.233,16,0.012,17,0.012,45,2.101,80,0.558,86,1.983,88,3.998,110,0.303,111,0.72,121,1.114,123,0.725,130,1.007,218,0.973,256,1.163,264,2.237,299,4.614,351,2.277,383,3.452,390,4.124,392,2.338,432,3.998,574,4.614,796,4.749,799,4.73,800,3.564,803,4.73,887,3.562,888,5.884,889,3.564,890,4.134,891,4.134,892,4.134,893,4.134]],["title/entities/User.html",[45,1.163,108,1.702]],["body/entities/User.html",[3,0.135,4,0.12,5,0.105,7,0.235,8,0.018,12,0.135,13,0.125,16,0.01,17,0.01,45,1.336,47,3.205,74,2.567,80,0.605,86,1.656,88,3.34,92,1.674,108,1.955,110,0.217,111,0.57,112,2.442,114,1.943,119,3.34,120,3.014,121,1.208,122,2.551,123,0.786,125,5.764,127,0.934,128,2.82,130,0.986,132,2.82,133,4.565,134,3.424,140,3.055,142,2.551,145,4.43,146,3.349,148,3.349,149,1.405,157,4.618,176,0.728,210,1.921,225,3.205,351,1.902,356,3.34,386,5.157,536,2.736,587,2.581,589,2.909,591,3.108,592,3.108,593,3.014,807,2.551,810,3.743,811,3.743,894,2.551,895,2.959,896,2.959,897,5.666,898,2.959,899,2.959,900,2.959,901,2.959,902,2.959,903,2.959,904,2.959,905,2.959,906,4.342,907,2.959,908,2.959,909,4.342,910,2.959,911,4.342,912,2.959,913,2.082,914,2.959,915,2.959,916,2.959]],["title/classes/UserBookingCountVo.html",[13,0.16,823,2.659]],["body/classes/UserBookingCountVo.html",[3,0.226,4,0.2,5,0.175,7,0.226,8,0.017,12,0.226,13,0.21,16,0.014,17,0.014,69,3.331,80,0.571,86,2.159,110,0.362,111,0.808,121,1.139,123,0.741,127,1.324,130,0.972,218,1.164,256,1.392,264,2.296,537,3.792,730,3.815,733,4.265,734,4.265,735,4.265,823,4.332,854,5.78,917,6.048]],["title/controllers/UserController.html",[0,1.538,918,2.659]],["body/controllers/UserController.html",[0,0.441,2,0.441,3,0.117,4,0.044,5,0.149,7,0.273,8,0.018,9,0.203,12,0.049,13,0.046,14,0.613,15,0.613,16,0.004,17,0.004,45,1.382,54,1.667,55,0.655,74,1.923,79,1.636,80,0.636,86,1.358,96,1.345,102,0.463,110,0.079,111,0.142,114,0.998,118,3.182,121,0.897,123,0.615,127,1.286,130,0.956,160,0.703,161,0.644,162,2.402,164,1.667,170,3.261,172,3.003,175,1.67,176,1.531,177,1.67,178,1.874,179,2.43,180,0.703,181,2.549,186,1.475,187,2.137,188,2.536,202,0.836,203,0.576,206,1.242,209,0.703,210,0.703,212,2.488,213,3.254,215,3.069,216,3.94,217,1.242,218,0.255,219,1.775,220,0.762,223,0.762,225,1.452,226,0.836,227,0.836,228,1.805,229,0.836,230,0.836,231,0.836,232,0.836,233,0.934,238,1.892,240,3.322,274,0.818,278,2.012,290,1.475,294,1.914,302,1.345,351,1.56,398,0.96,406,0.488,417,1.679,427,1.475,429,3.499,435,0.934,442,1.082,444,1.156,499,2.671,518,1.649,535,0.514,536,0.576,537,2.79,539,0.703,541,1.806,542,0.655,545,0.762,555,1.082,556,1.156,557,3.818,566,1.667,567,1.345,571,3.069,577,1.551,580,2.179,581,3.159,586,1.242,587,1.96,612,0.762,614,1.806,616,0.934,618,4.411,628,1.649,637,1.649,638,0.934,644,0.762,656,2.728,792,2.296,828,1.475,874,1.475,881,3.069,887,2.296,918,1.345,919,0.934,920,1.912,921,1.912,922,1.649,923,2.567,924,1.912,925,1.912,926,1.649,927,1.649,928,1.912,929,1.912,930,1.083,931,3.098,932,1.912,933,1.083,934,1.083,935,3.098,936,1.083,937,3.098,938,3.098,939,1.083,940,1.083,941,0.934,942,3.098,943,1.083,944,1.083,945,1.083,946,2.567,947,1.083,948,1.912,949,1.083,950,1.083,951,1.083,952,1.083,953,1.083,954,3.098,955,1.083,956,1.083,957,1.083,958,1.083,959,1.083,960,1.083,961,1.083,962,1.083,963,1.083,964,1.912,965,0.934,966,1.083,967,1.083,968,1.083,969,1.083,970,0.934,971,1.083,972,1.083,973,1.912,974,1.083,975,1.649,976,1.083,977,2.567,978,1.912,979,1.083,980,1.083,981,1.083,982,1.083,983,1.083,984,1.083,985,1.083,986,1.912,987,1.083,988,1.551,989,0.934,990,0.934,991,0.934,992,0.934,993,1.649,994,1.083,995,0.934,996,0.934,997,1.806,998,1.083,999,0.934,1000,0.934,1001,1.083,1002,2.488,1003,1.083,1004,1.083,1005,1.242,1006,1.083,1007,0.934,1008,2.39,1009,0.836,1010,1.083,1011,1.083,1012,1.083,1013,1.083,1014,1.083,1015,1.083,1016,1.083,1017,1.083,1018,4.253,1019,1.912,1020,3.098,1021,1.912,1022,3.098,1023,1.912,1024,1.083,1025,1.083,1026,1.083,1027,1.083,1028,1.912,1029,1.912,1030,1.912,1031,3.098,1032,1.912,1033,1.083,1034,1.083,1035,1.083,1036,1.083,1037,1.083,1038,1.083,1039,1.649,1040,1.083,1041,1.649,1042,1.083,1043,1.649,1044,1.083,1045,0.934,1046,1.083,1047,0.934,1048,1.083,1049,0.934,1050,1.083,1051,1.083,1052,1.083,1053,0.934,1054,1.083,1055,1.083,1056,1.083,1057,1.083,1058,1.083,1059,1.083,1060,1.083,1061,1.083,1062,1.083,1063,1.083,1064,1.083,1065,1.083,1066,1.083,1067,1.083,1068,1.083,1069,1.083,1070,1.083,1071,1.083,1072,1.083,1073,1.083,1074,0.934,1075,1.083,1076,1.083,1077,1.083,1078,1.083,1079,1.083,1080,1.083,1081,1.083,1082,1.083,1083,1.083,1084,1.083,1085,1.083,1086,1.083,1087,1.083,1088,1.083,1089,1.083,1090,1.083,1091,1.912,1092,1.083,1093,1.083,1094,1.649,1095,1.083,1096,0.934,1097,1.083,1098,1.083]],["title/classes/UserDetailVo.html",[13,0.16,997,2.659]],["body/classes/UserDetailVo.html",[3,0.179,4,0.158,5,0.139,7,0.179,8,0.017,12,0.179,13,0.166,16,0.012,17,0.012,80,0.611,86,1.929,110,0.287,111,0.694,112,2.844,114,1.929,120,2.813,121,1.22,123,0.794,127,1.137,130,1.019,218,0.921,225,2.991,256,1.101,264,2.284,351,2.215,429,4.173,444,3.196,586,3.434,587,3.006,589,3.388,590,3.72,591,3.619,592,3.619,593,2.813,997,3.72,1099,5.612,1100,3.374,1101,3.913,1102,5.953,1103,3.913,1104,5.288,1105,3.913,1106,3.913,1107,3.913,1108,3.913,1109,3.913,1110,3.913]],["title/classes/UserInfo.html",[13,0.16,442,2.138]],["body/classes/UserInfo.html",[3,0.155,4,0.138,5,0.12,7,0.219,8,0.018,12,0.219,13,0.203,16,0.011,17,0.011,49,2.343,80,0.621,86,1.791,110,0.249,111,0.63,112,2.641,114,1.791,121,1.229,123,0.8,127,1.299,130,1.027,172,2.408,218,0.8,256,0.957,262,2.392,264,2.337,351,2.056,356,3.611,429,3.996,442,3.417,444,2.9,535,2.641,536,2.958,577,2.055,578,5.632,579,2.623,580,2.392,581,2.392,585,2.392,586,3.116,587,2.791,588,4.138,589,3.146,590,3.376,591,3.361,592,3.361,593,3.213,1102,5.701,1111,3.401,1112,3.401,1113,3.401,1114,3.401,1115,3.401,1116,3.401,1117,3.401,1118,3.401,1119,3.401,1120,3.401,1121,3.401]],["title/classes/UserListVo.html",[13,0.16,1005,2.454]],["body/classes/UserListVo.html",[3,0.217,4,0.192,5,0.168,7,0.217,8,0.017,12,0.217,13,0.254,16,0.013,17,0.013,45,2.128,80,0.56,86,1.53,110,0.348,111,0.788,112,2.256,114,1.53,120,2.527,121,1.02,123,0.664,127,1.415,130,0.988,172,2.385,218,1.118,256,1.337,258,3.343,260,3.977,262,3.343,264,2.368,351,1.757,587,2.385,589,2.688,591,2.871,592,2.871,593,2.527,670,5.077,1005,3.898,1099,5.077,1122,4.751,1123,4.751]],["title/modules/UserModule.html",[18,1.217,35,2.454]],["body/modules/UserModule.html",[2,2.281,3,0.195,4,0.173,5,0.151,7,0.338,8,0.018,9,0.799,12,0.195,13,0.181,16,0.012,17,0.012,18,2.014,20,2.028,21,2.028,22,2.271,23,2.271,24,2.028,25,3.328,26,2.271,35,4.597,36,2.981,37,2.271,38,2.271,40,3.004,42,3.004,43,2.143,45,1.314,47,3.17,49,2.173,54,4.063,55,2.58,74,1.738,78,3.294,79,1.257,102,1.827,363,3.294,461,3.294,542,2.58,585,3.004,918,4.401,988,4.278,989,3.682,1094,3.682,1096,3.682,1124,3.682,1125,3.682,1126,4.27,1127,4.27,1128,3.682,1129,3.682,1130,4.27,1131,4.27,1132,4.27,1133,4.27,1134,4.27,1135,4.27,1136,4.27]],["title/injectables/UserService.html",[105,0.973,988,2.284]],["body/injectables/UserService.html",[3,0.064,4,0.057,5,0.05,7,0.278,8,0.018,9,0.264,12,0.064,13,0.06,16,0.005,17,0.005,43,0.707,45,1.794,47,1.777,49,1.218,74,0.978,79,1.753,80,0.496,86,1.714,102,0.603,105,0.619,106,0.669,110,0.103,111,0.315,112,1.141,114,1.46,121,0.631,123,0.672,127,1.385,130,0.738,134,0.851,149,0.669,161,0.81,162,2.443,175,1.57,176,1.256,177,1.57,178,1.793,179,2.422,181,2.517,187,2.243,203,0.749,210,0.915,223,0.991,228,2.84,238,2.352,260,1.452,274,2.644,277,2.412,278,2.41,288,2.072,292,1.087,294,2.237,295,1.215,298,2.072,302,2.21,330,1.215,339,1.087,340,1.853,341,1.087,342,1.853,343,2.072,347,1.853,351,1.79,355,1.215,356,3.456,398,1.576,400,4.897,432,3.456,444,0.851,503,3.2,505,0.915,535,1.141,536,1.974,537,2.739,550,1.56,555,3.119,556,1.898,566,2.04,571,2.705,577,1.452,585,0.991,586,0.915,587,2.276,589,1.359,590,0.991,591,1.452,592,1.898,593,2.412,614,1.69,644,0.991,656,4.253,670,1.853,678,3.735,687,1.215,792,2.41,828,1.087,881,3.144,887,2.41,913,0.991,922,2.072,926,2.072,927,2.072,941,2.072,965,2.072,970,2.072,975,1.215,988,1.452,990,1.215,991,1.215,992,1.215,993,2.072,995,1.215,996,1.215,999,1.215,1000,1.215,1005,1.56,1018,3.2,1039,2.072,1041,2.708,1043,3.2,1045,1.215,1047,1.215,1049,2.072,1053,1.215,1128,1.215,1129,1.215,1137,1.215,1138,3.141,1139,3.141,1140,3.141,1141,2.403,1142,2.403,1143,3.141,1144,2.403,1145,1.409,1146,2.403,1147,1.409,1148,1.409,1149,1.409,1150,1.409,1151,1.409,1152,2.403,1153,1.409,1154,2.403,1155,1.409,1156,1.409,1157,1.409,1158,2.403,1159,1.409,1160,2.403,1161,1.409,1162,1.409,1163,2.403,1164,1.409,1165,2.403,1166,1.409,1167,1.409,1168,1.409,1169,3.712,1170,3.141,1171,1.409,1172,1.409,1173,1.409,1174,1.409,1175,2.403,1176,1.409,1177,1.409,1178,3.141,1179,1.409,1180,1.409,1181,1.409,1182,1.409,1183,1.409,1184,1.409,1185,1.409,1186,1.409,1187,1.409,1188,1.409,1189,2.403,1190,1.409,1191,1.409,1192,1.409,1193,1.409,1194,2.403,1195,1.409,1196,3.141,1197,1.409,1198,3.141,1199,1.409,1200,2.403,1201,1.409,1202,3.141,1203,1.409,1204,2.403,1205,1.409,1206,1.409,1207,1.409,1208,1.409,1209,1.409,1210,1.409,1211,1.409,1212,1.409,1213,3.141,1214,1.409,1215,2.403,1216,1.409,1217,1.409,1218,1.409,1219,1.409,1220,2.403,1221,2.403,1222,2.403,1223,2.403,1224,2.403,1225,2.403,1226,2.403,1227,2.403,1228,1.409,1229,1.409,1230,1.409,1231,1.409,1232,1.409,1233,1.409,1234,1.409,1235,2.403,1236,1.409,1237,1.409,1238,2.403,1239,1.409,1240,2.403,1241,1.409,1242,1.409,1243,1.409,1244,1.409,1245,1.409,1246,1.409,1247,1.409,1248,1.409,1249,1.409,1250,1.409,1251,1.409]],["title/coverage.html",[1252,3.983]],["body/coverage.html",[0,2.457,1,1.848,5,0.141,6,2.265,8,0.017,10,1.588,13,0.314,16,0.009,17,0.009,24,1.887,45,1.644,47,1.486,49,1.019,58,1.588,60,1.848,62,2.114,63,2.58,65,1.248,66,1.486,69,1.887,80,0.224,105,1.701,107,2.265,108,2.584,109,2.026,116,1.994,150,2.551,158,1.848,159,2.265,207,1.588,209,1.706,219,1.318,221,1.848,228,1.124,257,2.265,258,3.759,266,1.848,273,2.265,275,1.486,277,1.397,364,2.265,374,1.588,375,2.265,376,3.065,393,2.026,394,2.265,395,2.265,421,1.848,422,2.265,442,2.248,463,2.265,482,2.026,483,2.265,484,2.265,500,2.026,501,2.265,502,2.265,509,1.397,531,2.401,532,1.706,534,3.372,568,3.065,571,1.706,572,2.265,573,3.065,577,1.588,578,3.065,579,3.065,594,2.265,610,1.848,611,2.265,633,1.706,640,1.588,645,1.706,648,1.848,669,3.065,677,2.265,727,1.848,728,2.265,729,2.026,730,3.065,736,2.265,746,2.265,752,2.265,758,6.76,776,2.265,792,1.706,793,2.265,794,2.265,804,2.265,813,1.848,814,2.265,823,1.848,826,1.588,839,2.265,867,1.848,868,3.065,873,1.848,876,2.265,881,1.706,882,2.265,887,1.706,888,2.265,889,2.265,894,2.265,913,1.848,917,2.265,918,1.848,919,2.265,988,1.588,997,1.848,1002,1.848,1005,1.706,1008,2.026,1009,2.026,1099,3.697,1100,2.265,1137,2.265,1252,2.026,1253,2.627,1254,2.627,1255,2.627,1256,2.265,1257,4.606,1258,7.15,1259,5.343,1260,4.793,1261,6.608,1262,5.738,1263,4.132,1264,5.343,1265,2.265,1266,6.455,1267,2.265,1268,2.627,1269,2.627,1270,2.265,1271,3.974,1272,3.974,1273,2.627,1274,2.265,1275,2.265,1276,3.974,1277,3.426,1278,2.627,1279,2.627]],["title/dependencies.html",[21,2.159,1280,2.718]],["body/dependencies.html",[8,0.018,9,0.95,13,0.265,16,0.014,17,0.014,21,2.413,43,2.55,55,3.07,57,3.07,98,4.38,149,2.413,218,1.196,392,2.874,406,2.288,472,4.38,495,3.919,542,3.07,768,3.919,1007,4.38,1281,6.785,1282,5.081,1283,5.081,1284,5.081,1285,5.081,1286,5.081,1287,5.081,1288,5.081,1289,5.081,1290,5.081,1291,5.081,1292,5.081,1293,5.081,1294,5.081,1295,5.081,1296,5.081,1297,5.081,1298,5.081,1299,5.081,1300,5.081]],["title/miscellaneous/enumerations.html",[1301,1.905,1302,3.92]],["body/miscellaneous/enumerations.html",[8,0.017,16,0.015,17,0.015,109,4.366,110,0.415,139,4.7,153,4.88,154,4.88,155,4.88,156,4.88,505,4.769,1301,3.42,1302,4.88,1303,5.66]],["title/miscellaneous/functions.html",[1301,1.905,1304,3.92]],["body/miscellaneous/functions.html",[8,0.016,16,0.015,17,0.015,24,3.582,110,0.402,175,2.02,176,1.728,177,2.02,209,4.263,913,4.618,1256,5.659,1267,4.737,1277,4.737,1301,3.32,1304,4.737,1305,5.494,1306,6.564,1307,5.494,1308,5.494,1309,5.494]],["title/index.html",[110,0.231,1310,3.153,1311,3.153]],["body/index.html",[4,0.185,8,0.017,16,0.013,17,0.013,170,2.053,429,3.901,678,3.516,1252,3.516,1312,4.559,1313,4.559,1314,5.847,1315,4.559,1316,4.559,1317,4.559,1318,4.559,1319,4.559,1320,4.559,1321,6.456,1322,4.559,1323,4.559,1324,4.559,1325,7.327,1326,4.559,1327,4.559,1328,4.559,1329,7.205,1330,4.559,1331,4.559,1332,5.847,1333,4.559,1334,4.559,1335,4.559,1336,4.559,1337,5.847,1338,5.847,1339,4.559,1340,4.559,1341,4.559,1342,5.847,1343,5.847,1344,4.559,1345,4.559,1346,4.559,1347,4.559,1348,4.559,1349,3.93,1350,4.559,1351,4.559,1352,4.559,1353,4.559,1354,4.559,1355,4.559,1356,4.559,1357,4.559,1358,4.559,1359,4.559,1360,3.93,1361,4.559,1362,4.559,1363,4.559,1364,4.559,1365,4.559,1366,4.559,1367,3.93]],["title/modules.html",[20,2.452]],["body/modules.html",[8,0.014,16,0.014,17,0.014,19,3.816,20,2.575,30,3.522,31,3.522,32,3.522,33,3.522,34,3.522,35,3.522,1349,6.557,1368,7.605,1369,7.605,1370,7.605]],["title/overview.html",[1371,4.452]],["body/overview.html",[2,1.674,8,0.017,10,3.712,16,0.012,17,0.012,18,1.325,19,5.403,20,1.953,21,1.953,22,2.188,23,2.188,24,1.953,25,2.188,26,2.188,27,3.547,28,3.547,29,3.547,30,4.425,31,4.549,32,4.425,33,4.549,34,4.425,35,4.425,36,2.908,37,2.188,38,2.188,92,2.327,106,1.953,207,3.712,256,1.158,268,3.547,269,3.547,275,4.044,277,3.803,297,2.894,299,2.894,304,4.714,457,3.547,458,3.547,459,3.547,533,3.173,569,3.173,640,3.712,671,3.547,672,3.547,762,3.547,763,3.547,764,3.547,826,3.712,835,3.547,836,3.547,988,3.712,1124,3.547,1125,3.547,1371,3.547,1372,4.114,1373,4.114,1374,4.114]],["title/properties.html",[111,0.597,1280,2.718]],["body/properties.html",[8,0.017,16,0.015,17,0.015,111,0.774,170,2.656,1360,5.085,1367,5.085,1375,5.898,1376,5.898,1377,5.898]],["title/classes/refreshTokenVo.html",[13,0.16,1002,2.659]],["body/classes/refreshTokenVo.html",[3,0.239,4,0.211,5,0.185,7,0.239,8,0.017,12,0.239,13,0.221,16,0.014,17,0.014,80,0.542,110,0.383,111,0.836,121,1.082,123,0.704,130,0.991,218,1.229,256,1.47,264,2.256,580,4.831,581,4.831,1002,4.479,1274,5.921,1275,4.502,1378,5.222,1379,5.222]],["title/miscellaneous/variables.html",[1301,1.905,1380,3.92]],["body/miscellaneous/variables.html",[5,0.237,8,0.018,16,0.013,17,0.013,49,1.69,74,1.774,79,1.672,110,0.319,130,0.787,134,4.046,219,2.851,294,1.914,398,2.187,417,2.697,442,3.213,487,2.465,505,4.348,509,2.318,526,3.758,535,2.697,550,2.83,556,2.634,560,3.688,1008,4.381,1009,3.362,1074,3.758,1257,4.897,1263,3.758,1265,4.897,1270,4.897,1301,2.634,1380,3.758,1381,6.319,1382,4.358,1383,5.68,1384,4.358,1385,4.358,1386,4.358,1387,4.358,1388,4.358,1389,4.358,1390,4.358,1391,5.68,1392,5.68,1393,4.358,1394,4.358,1395,5.68,1396,4.358,1397,5.68,1398,4.358,1399,4.358,1400,4.358]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListVo.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/MeetingRoomVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookingCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/refreshTokenVo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":758,"title":{},"body":{"guards/PermissionGuard.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1376,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1292,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1291,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1258,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1260,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1273,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1272,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1262,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1261,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1266,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1271,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1268,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1269,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":302,"title":{},"body":{"injectables/BookingService.html":{},"modules/RedisModule.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["1.4.11",{"_index":1289,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateMeetingRoomDto.html":{},"injectables/MeetingRoomService.html":{},"controllers/UserController.html":{}}}],["10.0.0",{"_index":1281,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":1287,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1283,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":132,"title":{},"body":{"entities/Booking.html":{},"classes/CreateMeetingRoomDto.html":{},"entities/MeetingRoom.html":{},"entities/Permission.html":{},"entities/User.html":{}}}],["1000",{"_index":311,"title":{},"body":{"injectables/BookingService.html":{}}}],["1024",{"_index":942,"title":{},"body":{"controllers/UserController.html":{}}}],["1097986280@qq.com",{"_index":1183,"title":{},"body":{"injectables/UserService.html":{}}}],["123456",{"_index":1181,"title":{},"body":{"injectables/UserService.html":{}}}],["12345678910",{"_index":590,"title":{},"body":{"classes/LoginUserVo.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"injectables/UserService.html":{}}}],["1376513637@qq.com",{"_index":444,"title":{},"body":{"controllers/EmailController.html":{},"classes/LoginUserVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"injectables/UserService.html":{}}}],["1376513637@qq.com'})@apiresponse({status",{"_index":430,"title":{},"body":{"controllers/EmailController.html":{}}}],["1e9",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":304,"title":{},"body":{"injectables/BookingService.html":{},"overview.html":{}}}],["20",{"_index":140,"title":{},"body":{"entities/Booking.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["21",{"_index":1374,"title":{},"body":{"overview.html":{}}}],["3",{"_index":1077,"title":{},"body":{"controllers/UserController.html":{}}}],["3.1.1",{"_index":1282,"title":{},"body":{"dependencies.html":{}}}],["3.6.5",{"_index":1293,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":363,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{},"modules/UserModule.html":{}}}],["30m",{"_index":1096,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["4.6.11",{"_index":1295,"title":{},"body":{"dependencies.html":{}}}],["456789",{"_index":1191,"title":{},"body":{"injectables/UserService.html":{}}}],["5",{"_index":297,"title":{},"body":{"injectables/BookingService.html":{},"controllers/EmailController.html":{},"injectables/MeetingRoomService.html":{},"overview.html":{}}}],["50",{"_index":386,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{},"entities/MeetingRoom.html":{},"entities/User.html":{}}}],["6",{"_index":299,"title":{},"body":{"injectables/BookingService.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"overview.html":{}}}],["6.9.7",{"_index":1294,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":312,"title":{},"body":{"injectables/BookingService.html":{},"controllers/EmailController.html":{}}}],["7",{"_index":1372,"title":{},"body":{"overview.html":{}}}],["7.1.16",{"_index":1286,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":1098,"title":{},"body":{"controllers/UserController.html":{}}}],["8",{"_index":448,"title":{},"body":{"controllers/EmailController.html":{}}}],["9",{"_index":1373,"title":{},"body":{"overview.html":{}}}],["accesstoken",{"_index":580,"title":{},"body":{"classes/LoginUserVo.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{},"classes/refreshTokenVo.html":{}}}],["addgroupby('b.roomid",{"_index":866,"title":{},"body":{"injectables/StatisticService.html":{}}}],["addgroupby('b.userid",{"_index":858,"title":{},"body":{"injectables/StatisticService.html":{}}}],["address",{"_index":428,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{}}}],["addselect('count(1",{"_index":853,"title":{},"body":{"injectables/StatisticService.html":{}}}],["addselect('m.name",{"_index":861,"title":{},"body":{"injectables/StatisticService.html":{}}}],["addselect('u.username",{"_index":848,"title":{},"body":{"injectables/StatisticService.html":{}}}],["admin",{"_index":353,"title":{},"body":{"injectables/BookingService.html":{}}}],["admin.email",{"_index":357,"title":{},"body":{"injectables/BookingService.html":{}}}],["admin/update",{"_index":1058,"title":{},"body":{"controllers/UserController.html":{}}}],["admin/update'])@requirelogin",{"_index":968,"title":{},"body":{"controllers/UserController.html":{}}}],["admin/update_password",{"_index":973,"title":{},"body":{"controllers/UserController.html":{}}}],["adminlogin",{"_index":920,"title":{},"body":{"controllers/UserController.html":{}}}],["adminlogin(@body",{"_index":1025,"title":{},"body":{"controllers/UserController.html":{}}}],["adminlogin(loginuser",{"_index":930,"title":{},"body":{"controllers/UserController.html":{}}}],["adminrefresh",{"_index":921,"title":{},"body":{"controllers/UserController.html":{}}}],["adminrefresh(@query('refreshtoken",{"_index":1034,"title":{},"body":{"controllers/UserController.html":{}}}],["adminrefresh(refreshtoken",{"_index":936,"title":{},"body":{"controllers/UserController.html":{}}}],["agent",{"_index":515,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["akak",{"_index":1186,"title":{},"body":{"injectables/UserService.html":{}}}],["akclown",{"_index":586,"title":{},"body":{"classes/LoginUserVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"injectables/UserService.html":{}}}],["akclown.jpg",{"_index":588,"title":{},"body":{"classes/LoginUserVo.html":{},"classes/UserInfo.html":{}}}],["akclown.png",{"_index":1104,"title":{},"body":{"classes/UserDetailVo.html":{}}}],["amazing",{"_index":1350,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":212,"title":{},"body":{"controllers/BookingController.html":{},"controllers/EmailController.html":{},"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["apibearerauth()@apibody({type",{"_index":616,"title":{},"body":{"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["apibearerauth()@apiparam({name",{"_index":169,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{}}}],["apibearerauth()@apiquery({name",{"_index":186,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["apibearerauth()@apiresponse({status",{"_index":435,"title":{},"body":{"controllers/EmailController.html":{},"controllers/UserController.html":{}}}],["apibody",{"_index":213,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["apibody({type",{"_index":931,"title":{},"body":{"controllers/UserController.html":{}}}],["apiconsumes",{"_index":1001,"title":{},"body":{"controllers/UserController.html":{}}}],["apiconsumes('multipart/form",{"_index":978,"title":{},"body":{"controllers/UserController.html":{}}}],["apiparam",{"_index":214,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{}}}],["apiproperty",{"_index":264,"title":{},"body":{"classes/BookingListVo.html":{},"classes/BookingVo.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"classes/MeetingRoomListVo.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/MeetingRoomVo.html":{},"entities/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"classes/UserBookingCountVo.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"classes/refreshTokenVo.html":{}}}],["apiproperty()@column({comment",{"_index":596,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["apiproperty()@column({length",{"_index":600,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["apiproperty()@createdatecolumn({comment",{"_index":598,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["apiproperty()@isnotempty({message",{"_index":380,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{},"classes/UpdateMeetingRoomDto.html":{}}}],["apiproperty()@primarygeneratedcolumn({comment",{"_index":603,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["apiproperty()@updatedatecolumn({comment",{"_index":608,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["apiproperty({example",{"_index":1102,"title":{},"body":{"classes/UserDetailVo.html":{},"classes/UserInfo.html":{}}}],["apiproperty({maxlength",{"_index":747,"title":{},"body":{"entities/Permission.html":{}}}],["apiproperty({minlength",{"_index":800,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserPasswordDto.html":{}}}],["apiproperty({required",{"_index":885,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["apiproperty({type",{"_index":262,"title":{},"body":{"classes/BookingListVo.html":{},"classes/MeetingRoomListVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{}}}],["apiquery",{"_index":215,"title":{},"body":{"controllers/BookingController.html":{},"controllers/EmailController.html":{},"controllers/MeetingRoomController.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{}}}],["apiquery({name",{"_index":427,"title":{},"body":{"controllers/EmailController.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{}}}],["apiresponse",{"_index":216,"title":{},"body":{"controllers/BookingController.html":{},"controllers/EmailController.html":{},"controllers/MeetingRoomController.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{}}}],["apiresponse({status",{"_index":819,"title":{},"body":{"controllers/StatisticController.html":{}}}],["apitags",{"_index":217,"title":{},"body":{"controllers/BookingController.html":{},"controllers/EmailController.html":{},"controllers/MeetingRoomController.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{}}}],["app",{"_index":1327,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1320,"title":{},"body":{"index.html":{}}}],["apply",{"_index":163,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["apply(@param('id",{"_index":243,"title":{},"body":{"controllers/BookingController.html":{}}}],["apply(id",{"_index":168,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["applying",{"_index":153,"title":{},"body":{"entities/Booking.html":{},"miscellaneous/enumerations.html":{}}}],["appmodule",{"_index":19,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approved",{"_index":154,"title":{},"body":{"entities/Booking.html":{},"miscellaneous/enumerations.html":{}}}],["approved_rejected",{"_index":155,"title":{},"body":{"entities/Booking.html":{},"miscellaneous/enumerations.html":{}}}],["appservice",{"_index":10,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":401,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["arr",{"_index":1226,"title":{},"body":{"injectables/UserService.html":{}}}],["arr.indexof(permission",{"_index":1224,"title":{},"body":{"injectables/UserService.html":{}}}],["arr.push(permission",{"_index":1225,"title":{},"body":{"injectables/UserService.html":{}}}],["array",{"_index":261,"title":{},"body":{"classes/BookingListVo.html":{},"classes/MeetingRoomListVo.html":{}}}],["async",{"_index":162,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"interfaces/Request.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":477,"title":{},"body":{"injectables/EmailService.html":{}}}],["author",{"_index":1360,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":553,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["authorization.split",{"_index":558,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["authplugin",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":238,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"interfaces/Request.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["b",{"_index":846,"title":{},"body":{"injectables/StatisticService.html":{}}}],["b.roomid",{"_index":864,"title":{},"body":{"injectables/StatisticService.html":{}}}],["b.userid",{"_index":851,"title":{},"body":{"injectables/StatisticService.html":{}}}],["backers",{"_index":1351,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":290,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{},"controllers/UserController.html":{}}}],["bearer",{"_index":937,"title":{},"body":{"controllers/UserController.html":{}}}],["beforeinsert",{"_index":911,"title":{},"body":{"entities/User.html":{}}}],["between",{"_index":291,"title":{},"body":{"injectables/BookingService.html":{},"injectables/StatisticService.html":{}}}],["binary",{"_index":1070,"title":{},"body":{"controllers/UserController.html":{}}}],["body",{"_index":637,"title":{},"body":{"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["booking",{"_index":69,"title":{"entities/Booking.html":{}},"body":{"modules/AppModule.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UserBookingCountVo.html":{},"coverage.html":{}}}],["booking.controller",{"_index":271,"title":{},"body":{"modules/BookingModule.html":{}}}],["booking.service",{"_index":208,"title":{},"body":{"controllers/BookingController.html":{},"modules/BookingModule.html":{}}}],["booking.vo",{"_index":267,"title":{},"body":{"classes/BookingListVo.html":{}}}],["booking/booking.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["booking/entity/booking.entity",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["booking1",{"_index":305,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking1.endtime",{"_index":309,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking1.room",{"_index":306,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking1.starttime",{"_index":308,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking1.user",{"_index":307,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking2",{"_index":314,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking2.endtime",{"_index":318,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking2.room",{"_index":315,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking2.starttime",{"_index":317,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking2.user",{"_index":316,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking3",{"_index":319,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking3.endtime",{"_index":323,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking3.room",{"_index":320,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking3.starttime",{"_index":322,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking3.user",{"_index":321,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking4",{"_index":324,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking4.endtime",{"_index":328,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking4.room",{"_index":325,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking4.starttime",{"_index":327,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking4.user",{"_index":326,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking_statue",{"_index":139,"title":{},"body":{"entities/Booking.html":{},"controllers/BookingController.html":{},"injectables/BookingService.html":{},"miscellaneous/enumerations.html":{}}}],["booking_statue.approved",{"_index":241,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["booking_statue.approved_rejected",{"_index":245,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["booking_statue.dismissed",{"_index":249,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["bookingcontroller",{"_index":158,"title":{"controllers/BookingController.html":{}},"body":{"controllers/BookingController.html":{},"modules/BookingModule.html":{},"coverage.html":{}}}],["bookingcount",{"_index":854,"title":{},"body":{"injectables/StatisticService.html":{},"classes/UserBookingCountVo.html":{}}}],["bookinglistvo",{"_index":221,"title":{"classes/BookingListVo.html":{}},"body":{"controllers/BookingController.html":{},"classes/BookingListVo.html":{},"coverage.html":{}}}],["bookinglistvo})@requirelogin()@get('list",{"_index":191,"title":{},"body":{"controllers/BookingController.html":{}}}],["bookingmodule",{"_index":30,"title":{"modules/BookingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules.html":{},"overview.html":{}}}],["bookings",{"_index":259,"title":{},"body":{"classes/BookingListVo.html":{},"injectables/BookingService.html":{}}}],["bookings.map((item",{"_index":344,"title":{},"body":{"injectables/BookingService.html":{}}}],["bookingservice",{"_index":207,"title":{"injectables/BookingService.html":{}},"body":{"controllers/BookingController.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"coverage.html":{},"overview.html":{}}}],["bookingtimerangeend",{"_index":185,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["bookingtimerangestart",{"_index":184,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["bookingvo",{"_index":266,"title":{"classes/BookingVo.html":{}},"body":{"classes/BookingListVo.html":{},"classes/BookingVo.html":{},"coverage.html":{}}}],["boolean",{"_index":593,"title":{},"body":{"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"classes/MeetingRoomVo.html":{},"entities/User.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/MeetingRoomModule.html":{},"modules/RedisModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1370,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1368,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1315,"title":{},"body":{"index.html":{}}}],["callback",{"_index":1079,"title":{},"body":{"controllers/UserController.html":{}}}],["callback(new",{"_index":1087,"title":{},"body":{"controllers/UserController.html":{}}}],["callback(null",{"_index":1086,"title":{},"body":{"controllers/UserController.html":{}}}],["callhandler",{"_index":489,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{}}}],["canactivate",{"_index":538,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["canactivate(context",{"_index":546,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["capacity",{"_index":377,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomVo.html":{}}}],["captcha",{"_index":432,"title":{},"body":{"controllers/EmailController.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"injectables/UserService.html":{}}}],["catch",{"_index":398,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["catch(exception",{"_index":399,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["catch(httpexception",{"_index":407,"title":{},"body":{"classes/CustomExceptionFilter.html":{}}}],["catch(unloginexception",{"_index":872,"title":{},"body":{"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["cb",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cb(null",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ccc",{"_index":1200,"title":{},"body":{"injectables/UserService.html":{}}}],["class",{"_index":13,"title":{"classes/BookingListVo.html":{},"classes/BookingVo.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"classes/MeetingRoomListVo.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/MeetingRoomVo.html":{},"classes/RegisterUserDto.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"classes/UserBookingCountVo.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"classes/refreshTokenVo.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListVo.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/MeetingRoomVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookingCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"classes/refreshTokenVo.html":{}}}],["classes",{"_index":256,"title":{},"body":{"classes/BookingListVo.html":{},"classes/BookingVo.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"classes/MeetingRoomListVo.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/MeetingRoomVo.html":{},"classes/RegisterUserDto.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"classes/UserBookingCountVo.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"overview.html":{},"classes/refreshTokenVo.html":{}}}],["class和fn",{"_index":548,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["client",{"_index":770,"title":{},"body":{"modules/RedisModule.html":{}}}],["client.connect",{"_index":775,"title":{},"body":{"modules/RedisModule.html":{}}}],["cluster_appmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_bookingmodule",{"_index":268,"title":{},"body":{"modules/BookingModule.html":{},"overview.html":{}}}],["cluster_bookingmodule_providers",{"_index":269,"title":{},"body":{"modules/BookingModule.html":{},"overview.html":{}}}],["cluster_emailmodule",{"_index":457,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_emailmodule_exports",{"_index":458,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_emailmodule_providers",{"_index":459,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_meetingroommodule",{"_index":671,"title":{},"body":{"modules/MeetingRoomModule.html":{},"overview.html":{}}}],["cluster_meetingroommodule_providers",{"_index":672,"title":{},"body":{"modules/MeetingRoomModule.html":{},"overview.html":{}}}],["cluster_redismodule",{"_index":762,"title":{},"body":{"modules/RedisModule.html":{},"overview.html":{}}}],["cluster_redismodule_exports",{"_index":764,"title":{},"body":{"modules/RedisModule.html":{},"overview.html":{}}}],["cluster_redismodule_providers",{"_index":763,"title":{},"body":{"modules/RedisModule.html":{},"overview.html":{}}}],["cluster_statisticmodule",{"_index":835,"title":{},"body":{"modules/StatisticModule.html":{},"overview.html":{}}}],["cluster_statisticmodule_providers",{"_index":836,"title":{},"body":{"modules/StatisticModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1124,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":1125,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":415,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"controllers/EmailController.html":{},"injectables/FormatResponseInterceptor.html":{},"entities/Permission.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["column",{"_index":145,"title":{},"body":{"entities/Booking.html":{},"entities/MeetingRoom.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["column({comment",{"_index":125,"title":{},"body":{"entities/Booking.html":{},"entities/User.html":{}}}],["column({length",{"_index":131,"title":{},"body":{"entities/Booking.html":{},"entities/Permission.html":{},"entities/Role.html":{}}}],["comment",{"_index":133,"title":{},"body":{"entities/Booking.html":{},"entities/MeetingRoom.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["condition",{"_index":342,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{},"injectables/UserService.html":{}}}],["condition.capacity",{"_index":704,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["condition.email",{"_index":1247,"title":{},"body":{"injectables/UserService.html":{}}}],["condition.equipment",{"_index":706,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["condition.location",{"_index":708,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["condition.name",{"_index":702,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["condition.nickname",{"_index":1245,"title":{},"body":{"injectables/UserService.html":{}}}],["condition.room",{"_index":331,"title":{},"body":{"injectables/BookingService.html":{}}}],["condition.room.location",{"_index":333,"title":{},"body":{"injectables/BookingService.html":{}}}],["condition.starttime",{"_index":335,"title":{},"body":{"injectables/BookingService.html":{}}}],["condition.user",{"_index":329,"title":{},"body":{"injectables/BookingService.html":{}}}],["condition.username",{"_index":1244,"title":{},"body":{"injectables/UserService.html":{}}}],["configmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmailService.html":{},"modules/RedisModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["configservice.get('jwt_secret",{"_index":1134,"title":{},"body":{"modules/UserModule.html":{}}}],["configservice.get('mysql_server_database",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_server_host",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_server_password",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_server_port",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_server_username",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('redis_server_host",{"_index":772,"title":{},"body":{"modules/RedisModule.html":{}}}],["configservice.get('redis_server_port",{"_index":773,"title":{},"body":{"modules/RedisModule.html":{}}}],["connectorpackage",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('file",{"_index":1089,"title":{},"body":{"controllers/UserController.html":{}}}],["const",{"_index":294,"title":{},"body":{"injectables/BookingService.html":{},"classes/CustomExceptionFilter.html":{},"controllers/EmailController.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"injectables/MeetingRoomService.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"interfaces/Request.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":466,"title":{},"body":{"injectables/EmailService.html":{},"classes/UnLoginException.html":{}}}],["constructor(configservice",{"_index":467,"title":{},"body":{"injectables/EmailService.html":{}}}],["constructor(message",{"_index":869,"title":{},"body":{"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["constructor(private",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/BookingController.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"controllers/MeetingRoomController.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{}}}],["context",{"_index":491,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{}}}],["context.getclass",{"_index":551,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["context.getclass().name",{"_index":520,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["context.gethandler",{"_index":552,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["context.gethandler().name",{"_index":521,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":512,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["context.switchtohttp().getresponse",{"_index":496,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/BookingController.html":{},"controllers/EmailController.html":{},"controllers/MeetingRoomController.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/BookingController.html":{},"controllers/EmailController.html":{},"controllers/MeetingRoomController.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('booking",{"_index":224,"title":{},"body":{"controllers/BookingController.html":{}}}],["controller('email",{"_index":443,"title":{},"body":{"controllers/EmailController.html":{}}}],["controller('meeting",{"_index":649,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["controller('statistic",{"_index":830,"title":{},"body":{"controllers/StatisticController.html":{}}}],["controller('user",{"_index":1010,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/BookingController.html":{},"modules/BookingModule.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"controllers/MeetingRoomController.html":{},"modules/MeetingRoomModule.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["controller、method",{"_index":511,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["count.vo",{"_index":829,"title":{},"body":{"controllers/StatisticController.html":{}}}],["count.vo.ts",{"_index":730,"title":{},"body":{"classes/MeetingRoomUsedCountVo.html":{},"classes/UserBookingCountVo.html":{},"coverage.html":{}}}],["count.vo.ts:11",{"_index":735,"title":{},"body":{"classes/MeetingRoomUsedCountVo.html":{},"classes/UserBookingCountVo.html":{}}}],["count.vo.ts:5",{"_index":733,"title":{},"body":{"classes/MeetingRoomUsedCountVo.html":{},"classes/UserBookingCountVo.html":{}}}],["count.vo.ts:8",{"_index":734,"title":{},"body":{"classes/MeetingRoomUsedCountVo.html":{},"classes/UserBookingCountVo.html":{}}}],["coverage",{"_index":1252,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":612,"title":{},"body":{"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"classes/UpdateMeetingRoomDto.html":{},"controllers/UserController.html":{}}}],["create(@body",{"_index":658,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["create(meetingroomdto",{"_index":615,"title":{},"body":{"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{}}}],["createclient",{"_index":767,"title":{},"body":{"modules/RedisModule.html":{}}}],["createdatecolumn",{"_index":146,"title":{},"body":{"entities/Booking.html":{},"entities/MeetingRoom.html":{},"entities/User.html":{}}}],["createdatecolumn({comment",{"_index":122,"title":{},"body":{"entities/Booking.html":{},"entities/User.html":{}}}],["createmeetingroomdto",{"_index":374,"title":{"classes/CreateMeetingRoomDto.html":{}},"body":{"classes/CreateMeetingRoomDto.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"classes/UpdateMeetingRoomDto.html":{},"coverage.html":{}}}],["createmeetingroomdto})@apiresponse({status",{"_index":617,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["createparamdecorator",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquerybuilder(booking",{"_index":845,"title":{},"body":{"injectables/StatisticService.html":{}}}],["createtime",{"_index":112,"title":{},"body":{"entities/Booking.html":{},"classes/BookingVo.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"classes/MeetingRoomVo.html":{},"entities/User.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"injectables/UserService.html":{}}}],["createtransport",{"_index":471,"title":{},"body":{"injectables/EmailService.html":{}}}],["ctx",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curpermission",{"_index":760,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["customexceptionfilter",{"_index":393,"title":{"classes/CustomExceptionFilter.html":{}},"body":{"classes/CustomExceptionFilter.html":{},"coverage.html":{}}}],["data",{"_index":417,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"injectables/FormatResponseInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"controllers/MeetingRoomController.html":{},"interfaces/Request.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["data')@apibody({schema",{"_index":979,"title":{},"body":{"controllers/UserController.html":{}}}],["data.email",{"_index":563,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["data.permissions",{"_index":565,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["data.roles",{"_index":564,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["data.userid",{"_index":561,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["data.username",{"_index":562,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["database",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{}}}],["database是命名空间的改变，默认是0",{"_index":774,"title":{},"body":{"modules/RedisModule.html":{}}}],["date",{"_index":120,"title":{},"body":{"entities/Booking.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"entities/MeetingRoom.html":{},"classes/MeetingRoomVo.html":{},"entities/User.html":{},"classes/UserDetailVo.html":{},"classes/UserListVo.html":{}}}],["date(bookingtimerangeend",{"_index":337,"title":{},"body":{"injectables/BookingService.html":{}}}],["date(bookingtimerangestart",{"_index":336,"title":{},"body":{"injectables/BookingService.html":{}}}],["date(date.now",{"_index":310,"title":{},"body":{"injectables/BookingService.html":{}}}],["date.now",{"_index":526,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ddd",{"_index":1204,"title":{},"body":{"injectables/UserService.html":{}}}],["declarations",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/MeetingRoomModule.html":{},"modules/RedisModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["declare",{"_index":543,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["decorators",{"_index":121,"title":{},"body":{"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListVo.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"classes/CreateMeetingRoomDto.html":{},"controllers/EmailController.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/MeetingRoomVo.html":{},"entities/Permission.html":{},"injectables/RedisService.html":{},"classes/RegisterUserDto.html":{},"entities/Role.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookingCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"injectables/UserService.html":{},"classes/refreshTokenVo.html":{}}}],["default",{"_index":134,"title":{},"body":{"entities/Booking.html":{},"injectables/InvokeRecordInterceptor.html":{},"entities/MeetingRoom.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultvaluepipe",{"_index":202,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["defaultvaluepipe(1",{"_index":229,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["defaultvaluepipe(2",{"_index":231,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["defined",{"_index":123,"title":{},"body":{"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListVo.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/MeetingRoomVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisService.html":{},"classes/RegisterUserDto.html":{},"entities/Role.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookingCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"injectables/UserService.html":{},"classes/refreshTokenVo.html":{}}}],["delete",{"_index":345,"title":{},"body":{"injectables/BookingService.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{}}}],["delete(':id",{"_index":666,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["delete(@param('id",{"_index":667,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["delete(id",{"_index":622,"title":{},"body":{"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{}}}],["dependencies",{"_index":21,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/MeetingRoomModule.html":{},"modules/RedisModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":170,"title":{},"body":{"controllers/BookingController.html":{},"classes/CreateMeetingRoomDto.html":{},"controllers/EmailController.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomVo.html":{},"entities/Permission.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{},"index.html":{},"properties.html":{}}}],["dest",{"_index":1073,"title":{},"body":{"controllers/UserController.html":{}}}],["destination",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":1328,"title":{},"body":{"index.html":{}}}],["dismissed",{"_index":156,"title":{},"body":{"entities/Booking.html":{},"miscellaneous/enumerations.html":{}}}],["documentation",{"_index":1253,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":991,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.ts",{"_index":794,"title":{},"body":{"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["dto.ts:15",{"_index":798,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["dto.ts:23",{"_index":801,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["dto.ts:32",{"_index":797,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["dto.ts:38",{"_index":795,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["dto.ts:9",{"_index":802,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["dto/create",{"_index":642,"title":{},"body":{"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{}}}],["dto/login",{"_index":992,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/register",{"_index":990,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/udpate",{"_index":1000,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/update",{"_index":644,"title":{},"body":{"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e2e",{"_index":1339,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1316,"title":{},"body":{"index.html":{}}}],["email",{"_index":351,"title":{},"body":{"injectables/BookingService.html":{},"controllers/EmailController.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"injectables/UserService.html":{}}}],["email.controller",{"_index":462,"title":{},"body":{"modules/EmailModule.html":{}}}],["email.service",{"_index":441,"title":{},"body":{"controllers/EmailController.html":{},"modules/EmailModule.html":{}}}],["email/email.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["emailcontroller",{"_index":421,"title":{"controllers/EmailController.html":{}},"body":{"controllers/EmailController.html":{},"modules/EmailModule.html":{},"coverage.html":{}}}],["emailmodule",{"_index":31,"title":{"modules/EmailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"modules.html":{},"overview.html":{}}}],["emailservice",{"_index":275,"title":{"injectables/EmailService.html":{}},"body":{"injectables/BookingService.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"coverage.html":{},"overview.html":{}}}],["encryptpwd",{"_index":914,"title":{},"body":{"entities/User.html":{}}}],["end",{"_index":420,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["endtime",{"_index":113,"title":{},"body":{"entities/Booking.html":{},"classes/BookingVo.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{}}}],["entities",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"entities/Booking.html":{},"entities/MeetingRoom.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/meeting",{"_index":675,"title":{},"body":{"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{}}}],["entities/permission.entity",{"_index":585,"title":{},"body":{"classes/LoginUserVo.html":{},"classes/UserInfo.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entities/role.entity",{"_index":1129,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entities/user.entity",{"_index":1128,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":108,"title":{"entities/Booking.html":{},"entities/MeetingRoom.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}},"body":{"entities/Booking.html":{},"entities/MeetingRoom.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity/booking.entity",{"_index":211,"title":{},"body":{"controllers/BookingController.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{}}}],["entitymanager",{"_index":276,"title":{},"body":{"injectables/BookingService.html":{},"injectables/StatisticService.html":{}}}],["enum",{"_index":152,"title":{},"body":{"entities/Booking.html":{}}}],["enumerations",{"_index":1302,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envfilepath",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["equipment",{"_index":378,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomVo.html":{}}}],["error",{"_index":566,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["example",{"_index":429,"title":{},"body":{"controllers/EmailController.html":{},"classes/LoginUserVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"index.html":{}}}],["exception",{"_index":403,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"classes/UnloginFilter.html":{}}}],["exception.filter.ts",{"_index":395,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:11",{"_index":402,"title":{},"body":{"classes/CustomExceptionFilter.html":{}}}],["exception.getresponse",{"_index":413,"title":{},"body":{"classes/CustomExceptionFilter.html":{}}}],["exception.getstatus",{"_index":410,"title":{},"body":{"classes/CustomExceptionFilter.html":{}}}],["exception.message",{"_index":419,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["exceptionfilter",{"_index":397,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["executioncontext",{"_index":487,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":1094,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["export",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListVo.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/MeetingRoomVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookingCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/refreshTokenVo.html":{}}}],["exports",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/MeetingRoomModule.html":{},"modules/RedisModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":406,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":977,"title":{},"body":{"controllers/UserController.html":{}}}],["extends",{"_index":877,"title":{},"body":{"classes/UpdateMeetingRoomDto.html":{}}}],["extname",{"_index":1080,"title":{},"body":{"controllers/UserController.html":{}}}],["extra",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["fail",{"_index":416,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["false",{"_index":225,"title":{},"body":{"controllers/BookingController.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{}}}],["false})@apiquery({name",{"_index":189,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{}}}],["false})@apiresponse({type",{"_index":190,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListVo.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/MeetingRoomVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookingCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"classes/refreshTokenVo.html":{},"miscellaneous/variables.html":{}}}],["file.originalname",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file.path",{"_index":1090,"title":{},"body":{"controllers/UserController.html":{}}}],["filefilter(req",{"_index":1078,"title":{},"body":{"controllers/UserController.html":{}}}],["fileinterceptor",{"_index":1006,"title":{},"body":{"controllers/UserController.html":{}}}],["fileinterceptor('file",{"_index":1072,"title":{},"body":{"controllers/UserController.html":{}}}],["filename",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filesize",{"_index":1076,"title":{},"body":{"controllers/UserController.html":{}}}],["findbyid",{"_index":613,"title":{},"body":{"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{}}}],["findbyid(@param('id",{"_index":664,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["findbyid(id",{"_index":625,"title":{},"body":{"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{}}}],["finduserbyid",{"_index":1141,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserbyid(userid",{"_index":1144,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserdetailbyid",{"_index":1142,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserdetailbyid(userid",{"_index":1146,"title":{},"body":{"injectables/UserService.html":{}}}],["findusersbypage",{"_index":1143,"title":{},"body":{"injectables/UserService.html":{}}}],["findusersbypage(username",{"_index":1148,"title":{},"body":{"injectables/UserService.html":{}}}],["flag",{"_index":349,"title":{},"body":{"injectables/BookingService.html":{}}}],["format",{"_index":1069,"title":{},"body":{"controllers/UserController.html":{}}}],["formatresponseinterceptor",{"_index":482,"title":{"injectables/FormatResponseInterceptor.html":{}},"body":{"injectables/FormatResponseInterceptor.html":{},"coverage.html":{}}}],["found",{"_index":761,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["founduser",{"_index":1169,"title":{},"body":{"injectables/UserService.html":{}}}],["founduser.email",{"_index":1231,"title":{},"body":{"injectables/UserService.html":{}}}],["founduser.headpic",{"_index":1241,"title":{},"body":{"injectables/UserService.html":{}}}],["founduser.nickname",{"_index":1239,"title":{},"body":{"injectables/UserService.html":{}}}],["founduser.password",{"_index":1233,"title":{},"body":{"injectables/UserService.html":{}}}],["framework",{"_index":1314,"title":{},"body":{"index.html":{}}}],["freeze",{"_index":922,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["freeze(@query('id",{"_index":1062,"title":{},"body":{"controllers/UserController.html":{}}}],["freeze(userid",{"_index":941,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["fs.mkdirsync('uploads",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":1257,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1304,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generateparseintpipe",{"_index":209,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["generateparseintpipe('pageno",{"_index":230,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["generateparseintpipe('pagesize",{"_index":232,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["generateparseintpipe(name",{"_index":1307,"title":{},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":663,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["get('admin/refresh",{"_index":1033,"title":{},"body":{"controllers/UserController.html":{}}}],["get('apply/:id",{"_index":242,"title":{},"body":{"controllers/BookingController.html":{}}}],["get('freeze",{"_index":1061,"title":{},"body":{"controllers/UserController.html":{}}}],["get('info",{"_index":1035,"title":{},"body":{"controllers/UserController.html":{}}}],["get('init",{"_index":628,"title":{},"body":{"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["get('list",{"_index":226,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["get('meetingroomusedcount",{"_index":820,"title":{},"body":{"controllers/StatisticController.html":{}}}],["get('refresh",{"_index":1026,"title":{},"body":{"controllers/UserController.html":{}}}],["get('register",{"_index":445,"title":{},"body":{"controllers/EmailController.html":{}}}],["get('reject/:id",{"_index":246,"title":{},"body":{"controllers/BookingController.html":{}}}],["get('unbind/:id",{"_index":250,"title":{},"body":{"controllers/BookingController.html":{}}}],["get('update/captcha",{"_index":454,"title":{},"body":{"controllers/EmailController.html":{}}}],["get('update_password/captcha",{"_index":450,"title":{},"body":{"controllers/EmailController.html":{}}}],["get('urge/:id",{"_index":253,"title":{},"body":{"controllers/BookingController.html":{}}}],["get('userbookingcount",{"_index":824,"title":{},"body":{"controllers/StatisticController.html":{}}}],["get(key",{"_index":779,"title":{},"body":{"injectables/RedisService.html":{}}}],["getaccesstoken",{"_index":923,"title":{},"body":{"controllers/UserController.html":{}}}],["getaccesstoken(user",{"_index":945,"title":{},"body":{"controllers/UserController.html":{}}}],["getrawmany",{"_index":859,"title":{},"body":{"injectables/StatisticService.html":{}}}],["getrefreshtoken",{"_index":924,"title":{},"body":{"controllers/UserController.html":{}}}],["getrefreshtoken(id",{"_index":948,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":1310,"title":{"index.html":{}},"body":{}}],["gif'].includes(extname",{"_index":1085,"title":{},"body":{"controllers/UserController.html":{}}}],["global",{"_index":461,"title":{},"body":{"modules/EmailModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{}}}],["grow",{"_index":1346,"title":{},"body":{"index.html":{}}}],["guard",{"_index":568,"title":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":569,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"overview.html":{}}}],["headpic",{"_index":589,"title":{},"body":{"classes/LoginUserVo.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"injectables/UserService.html":{}}}],["here",{"_index":1357,"title":{},"body":{"index.html":{}}}],["host",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"classes/CustomExceptionFilter.html":{},"injectables/EmailService.html":{},"modules/RedisModule.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["host.switchtohttp().getresponse",{"_index":408,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["html",{"_index":361,"title":{},"body":{"injectables/BookingService.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{}}}],["httpexception",{"_index":400,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"injectables/UserService.html":{}}}],["https://github.com/vercel/ms#examples",{"_index":1136,"title":{},"body":{"modules/UserModule.html":{}}}],["https://nestjs.com",{"_index":1364,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":203,"title":{},"body":{"controllers/BookingController.html":{},"controllers/EmailController.html":{},"controllers/MeetingRoomController.html":{},"controllers/StatisticController.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["httpstatus.bad_request",{"_index":656,"title":{},"body":{"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["httpstatus.ok",{"_index":240,"title":{},"body":{"controllers/BookingController.html":{},"controllers/EmailController.html":{},"controllers/MeetingRoomController.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{}}}],["httpstatus.unauthorized",{"_index":874,"title":{},"body":{"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"controllers/UserController.html":{}}}],["id",{"_index":114,"title":{},"body":{"entities/Booking.html":{},"controllers/BookingController.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomVo.html":{},"entities/Permission.html":{},"entities/Role.html":{},"classes/UpdateMeetingRoomDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"injectables/UserService.html":{}}}],["id'})@apiresponse({status",{"_index":171,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{}}}],["identifier",{"_index":1254,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":396,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListVo.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/MeetingRoomVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookingCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/refreshTokenVo.html":{}}}],["imports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/MeetingRoomModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":110,"title":{"index.html":{}},"body":{"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListVo.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/MeetingRoomVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookingCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/refreshTokenVo.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListVo.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/MeetingRoomVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookingCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/refreshTokenVo.html":{}}}],["info(@userinfo('userid",{"_index":1036,"title":{},"body":{"controllers/UserController.html":{}}}],["info(userid",{"_index":950,"title":{},"body":{"controllers/UserController.html":{}}}],["info.vo",{"_index":998,"title":{},"body":{"controllers/UserController.html":{}}}],["info.vo.ts",{"_index":1100,"title":{},"body":{"classes/UserDetailVo.html":{},"coverage.html":{}}}],["info.vo.ts:10",{"_index":1108,"title":{},"body":{"classes/UserDetailVo.html":{}}}],["info.vo.ts:13",{"_index":1103,"title":{},"body":{"classes/UserDetailVo.html":{}}}],["info.vo.ts:16",{"_index":1105,"title":{},"body":{"classes/UserDetailVo.html":{}}}],["info.vo.ts:19",{"_index":1109,"title":{},"body":{"classes/UserDetailVo.html":{}}}],["info.vo.ts:22",{"_index":1107,"title":{},"body":{"classes/UserDetailVo.html":{}}}],["info.vo.ts:25",{"_index":1101,"title":{},"body":{"classes/UserDetailVo.html":{}}}],["info.vo.ts:4",{"_index":1106,"title":{},"body":{"classes/UserDetailVo.html":{}}}],["info.vo.ts:7",{"_index":1110,"title":{},"body":{"classes/UserDetailVo.html":{}}}],["initdata",{"_index":278,"title":{},"body":{"injectables/BookingService.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"injectables/BookingService.html":{},"controllers/EmailController.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inject('redis_client",{"_index":787,"title":{},"body":{"injectables/RedisService.html":{}}}],["inject(configservice",{"_index":1011,"title":{},"body":{"controllers/UserController.html":{}}}],["inject(jwtservice",{"_index":545,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{}}}],["inject(redisservice",{"_index":288,"title":{},"body":{"injectables/BookingService.html":{},"injectables/UserService.html":{}}}],["inject(reflector",{"_index":544,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["injectable",{"_index":105,"title":{"injectables/AppService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/MeetingRoomService.html":{},"injectables/RedisService.html":{},"injectables/StatisticService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"injectables/MeetingRoomService.html":{},"guards/PermissionGuard.html":{},"injectables/RedisService.html":{},"interfaces/Request.html":{},"injectables/StatisticService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":106,"title":{},"body":{"injectables/AppService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/MeetingRoomService.html":{},"injectables/RedisService.html":{},"injectables/StatisticService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectentitymanager",{"_index":286,"title":{},"body":{"injectables/BookingService.html":{},"injectables/StatisticService.html":{}}}],["injectrepository",{"_index":687,"title":{},"body":{"injectables/MeetingRoomService.html":{},"injectables/UserService.html":{}}}],["injectrepository(meetingroom",{"_index":685,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["injectrepository(permission",{"_index":1160,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(role",{"_index":1163,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(user",{"_index":1165,"title":{},"body":{"injectables/UserService.html":{}}}],["installation",{"_index":1324,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1326,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":485,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{}}}],["intercept(context",{"_index":486,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{}}}],["interface",{"_index":531,"title":{"interfaces/JwtUserData.html":{},"interfaces/Request.html":{}},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["interfaces",{"_index":533,"title":{},"body":{"interfaces/JwtUserData.html":{},"interfaces/Request.html":{},"overview.html":{}}}],["invoked",{"_index":522,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["invokerecordinterceptor",{"_index":500,"title":{"injectables/InvokeRecordInterceptor.html":{}},"body":{"injectables/InvokeRecordInterceptor.html":{},"coverage.html":{}}}],["ip",{"_index":516,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["ip、useragent",{"_index":510,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["isadmin",{"_index":356,"title":{},"body":{"injectables/BookingService.html":{},"classes/LoginUserVo.html":{},"entities/User.html":{},"classes/UserInfo.html":{},"injectables/UserService.html":{}}}],["isbooked",{"_index":595,"title":{},"body":{"entities/MeetingRoom.html":{},"classes/MeetingRoomVo.html":{}}}],["isemail",{"_index":796,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{}}}],["isfrozen",{"_index":592,"title":{},"body":{"classes/LoginUserVo.html":{},"entities/User.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"injectables/UserService.html":{}}}],["isglobal",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":390,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{}}}],["isnotempty({message",{"_index":574,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{}}}],["item",{"_index":347,"title":{},"body":{"injectables/BookingService.html":{},"controllers/MeetingRoomController.html":{},"injectables/UserService.html":{}}}],["item.code",{"_index":759,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["item.name",{"_index":1221,"title":{},"body":{"injectables/UserService.html":{}}}],["item.permissions.foreach((permission",{"_index":1223,"title":{},"body":{"injectables/UserService.html":{}}}],["item.user.password",{"_index":346,"title":{},"body":{"injectables/BookingService.html":{}}}],["iuserinfo",{"_index":994,"title":{},"body":{"controllers/UserController.html":{}}}],["join",{"_index":1353,"title":{},"body":{"index.html":{}}}],["jointable",{"_index":810,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["jpeg",{"_index":1084,"title":{},"body":{"controllers/UserController.html":{}}}],["jpg",{"_index":1083,"title":{},"body":{"controllers/UserController.html":{}}}],["json",{"_index":414,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["json.stringify(data",{"_index":530,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["jwtmodule",{"_index":1130,"title":{},"body":{"modules/UserModule.html":{}}}],["jwtmodule.registerasync",{"_index":1132,"title":{},"body":{"modules/UserModule.html":{}}}],["jwtservice",{"_index":541,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{}}}],["jwtuserdata",{"_index":532,"title":{"interfaces/JwtUserData.html":{}},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["kamil",{"_index":1361,"title":{},"body":{"index.html":{}}}],["key",{"_index":781,"title":{},"body":{"injectables/RedisService.html":{}}}],["leftjoin(meetingroom",{"_index":862,"title":{},"body":{"injectables/StatisticService.html":{}}}],["leftjoin(user",{"_index":849,"title":{},"body":{"injectables/StatisticService.html":{}}}],["legend",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/MeetingRoomModule.html":{},"modules/RedisModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":157,"title":{},"body":{"entities/Booking.html":{},"entities/MeetingRoom.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["license",{"_index":1367,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1343,"title":{},"body":{"index.html":{}}}],["like(`%${capacity",{"_index":705,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["like(`%${email",{"_index":1248,"title":{},"body":{"injectables/UserService.html":{}}}],["like(`%${equipment",{"_index":707,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["like(`%${location",{"_index":709,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["like(`%${meetingroomname",{"_index":332,"title":{},"body":{"injectables/BookingService.html":{}}}],["like(`%${meetingroomposition",{"_index":334,"title":{},"body":{"injectables/BookingService.html":{}}}],["like(`%${name",{"_index":703,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["like(`%${nickname",{"_index":1246,"title":{},"body":{"injectables/UserService.html":{}}}],["like(`%${username",{"_index":330,"title":{},"body":{"injectables/BookingService.html":{},"injectables/UserService.html":{}}}],["limits",{"_index":1075,"title":{},"body":{"controllers/UserController.html":{}}}],["lisa",{"_index":1189,"title":{},"body":{"injectables/UserService.html":{}}}],["list",{"_index":164,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"controllers/UserController.html":{}}}],["list(pageno",{"_index":180,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"controllers/UserController.html":{}}}],["list.vo",{"_index":223,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["list.vo.ts",{"_index":258,"title":{},"body":{"classes/BookingListVo.html":{},"classes/MeetingRoomListVo.html":{},"classes/UserListVo.html":{},"coverage.html":{}}}],["list.vo.ts:11",{"_index":265,"title":{},"body":{"classes/BookingListVo.html":{},"classes/MeetingRoomListVo.html":{}}}],["list.vo.ts:33",{"_index":1123,"title":{},"body":{"classes/UserListVo.html":{}}}],["list.vo.ts:36",{"_index":1122,"title":{},"body":{"classes/UserListVo.html":{}}}],["list.vo.ts:8",{"_index":263,"title":{},"body":{"classes/BookingListVo.html":{},"classes/MeetingRoomListVo.html":{}}}],["location",{"_index":379,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomVo.html":{}}}],["logger",{"_index":503,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{},"injectables/UserService.html":{}}}],["logger(invokerecordinterceptor.name",{"_index":506,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["logger(userservice.name",{"_index":1158,"title":{},"body":{"injectables/UserService.html":{}}}],["logging",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":550,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["login(loginuserdto",{"_index":1152,"title":{},"body":{"injectables/UserService.html":{}}}],["login.guard",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["loginguard",{"_index":58,"title":{"guards/LoginGuard.html":{}},"body":{"modules/AppModule.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["loginuser",{"_index":935,"title":{},"body":{"controllers/UserController.html":{}}}],["loginuserdto",{"_index":571,"title":{"classes/LoginUserDto.html":{}},"body":{"classes/LoginUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["loginuserdto.username",{"_index":1214,"title":{},"body":{"injectables/UserService.html":{}}}],["loginuserdto})@apiresponse({status",{"_index":932,"title":{},"body":{"controllers/UserController.html":{}}}],["loginuservo",{"_index":577,"title":{"classes/LoginUserVo.html":{}},"body":{"classes/LoginUserVo.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["loginuservo})@post('admin/login",{"_index":933,"title":{},"body":{"controllers/UserController.html":{}}}],["loginuservo})@post('login",{"_index":984,"title":{},"body":{"controllers/UserController.html":{}}}],["m",{"_index":863,"title":{},"body":{"injectables/StatisticService.html":{}}}],["m.id",{"_index":865,"title":{},"body":{"injectables/StatisticService.html":{}}}],["manytomany",{"_index":811,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["manytomany(undefined)@jointable({name",{"_index":807,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["manytoone",{"_index":147,"title":{},"body":{"entities/Booking.html":{}}}],["manytoone(undefined",{"_index":136,"title":{},"body":{"entities/Booking.html":{}}}],["map",{"_index":494,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{}}}],["map((data",{"_index":498,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{}}}],["matching",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListVo.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/MeetingRoomVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookingCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/refreshTokenVo.html":{},"miscellaneous/variables.html":{}}}],["math.random().tostring().slice(2",{"_index":447,"title":{},"body":{"controllers/EmailController.html":{}}}],["math.round(math.random",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxlength",{"_index":391,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{},"entities/Permission.html":{}}}],["maxlength(100",{"_index":382,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{}}}],["maxlength(50",{"_index":385,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{}}}],["md5",{"_index":913,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["md5(loginuserdto.password",{"_index":1216,"title":{},"body":{"injectables/UserService.html":{}}}],["md5(passworddto.password",{"_index":1234,"title":{},"body":{"injectables/UserService.html":{}}}],["md5(str",{"_index":1308,"title":{},"body":{"miscellaneous/functions.html":{}}}],["md5(this.password",{"_index":916,"title":{},"body":{"entities/User.html":{}}}],["meeting",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateMeetingRoomDto.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/UpdateMeetingRoomDto.html":{},"coverage.html":{}}}],["meetingroom",{"_index":65,"title":{"entities/MeetingRoom.html":{}},"body":{"modules/AppModule.html":{},"entities/Booking.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"entities/MeetingRoom.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"injectables/StatisticService.html":{},"coverage.html":{}}}],["meetingroom.capacity",{"_index":716,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroom.description",{"_index":722,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroom.equipment",{"_index":724,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroom.location",{"_index":718,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroom.name",{"_index":720,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroomcontroller",{"_index":610,"title":{"controllers/MeetingRoomController.html":{}},"body":{"controllers/MeetingRoomController.html":{},"modules/MeetingRoomModule.html":{},"coverage.html":{}}}],["meetingroomdto",{"_index":621,"title":{},"body":{"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{}}}],["meetingroomdto.capacity",{"_index":717,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroomdto.description",{"_index":721,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroomdto.equipment",{"_index":723,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroomdto.id",{"_index":715,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroomdto.location",{"_index":719,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroomdto.name",{"_index":713,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroomid",{"_index":731,"title":{},"body":{"classes/MeetingRoomUsedCountVo.html":{},"injectables/StatisticService.html":{}}}],["meetingroomlistvo",{"_index":648,"title":{"classes/MeetingRoomListVo.html":{}},"body":{"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"coverage.html":{}}}],["meetingroomlistvo})@requirelogin()@get('list",{"_index":630,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["meetingroommodule",{"_index":32,"title":{"modules/MeetingRoomModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MeetingRoomModule.html":{},"modules.html":{},"overview.html":{}}}],["meetingroomname",{"_index":182,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{},"classes/MeetingRoomUsedCountVo.html":{},"injectables/StatisticService.html":{}}}],["meetingroomposition",{"_index":183,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["meetingrooms",{"_index":710,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["meetingroomservice",{"_index":640,"title":{"injectables/MeetingRoomService.html":{}},"body":{"controllers/MeetingRoomController.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"coverage.html":{},"overview.html":{}}}],["meetingroomusedcount",{"_index":816,"title":{},"body":{"controllers/StatisticController.html":{},"injectables/StatisticService.html":{}}}],["meetingroomusedcount(starttime",{"_index":818,"title":{},"body":{"controllers/StatisticController.html":{},"injectables/StatisticService.html":{}}}],["meetingroomusedcountvo",{"_index":727,"title":{"classes/MeetingRoomUsedCountVo.html":{}},"body":{"classes/MeetingRoomUsedCountVo.html":{},"controllers/StatisticController.html":{},"coverage.html":{}}}],["meetingroomvo",{"_index":645,"title":{"classes/MeetingRoomVo.html":{}},"body":{"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"classes/MeetingRoomVo.html":{},"coverage.html":{}}}],["meetingroomvo})@requirelogin()@get(':id",{"_index":626,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["message",{"_index":383,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{}}}],["metadata",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":517,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["methods",{"_index":161,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{},"classes/CustomExceptionFilter.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"guards/LoginGuard.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"guards/PermissionGuard.html":{},"injectables/RedisService.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UnloginFilter.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":803,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserPasswordDto.html":{}}}],["minlength(6",{"_index":799,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserPasswordDto.html":{}}}],["miscellaneous",{"_index":1301,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1342,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1332,"title":{},"body":{"index.html":{}}}],["module",{"_index":18,"title":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/MeetingRoomModule.html":{},"modules/RedisModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"modules/MeetingRoomModule.html":{},"modules/RedisModule.html":{},"interfaces/Request.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":20,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/MeetingRoomModule.html":{},"modules/RedisModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1356,"title":{},"body":{"index.html":{}}}],["ms",{"_index":528,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["multer.diskstorage",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysql",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["myśliwiec",{"_index":1362,"title":{},"body":{"index.html":{}}}],["name",{"_index":176,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"guards/LoginGuard.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomVo.html":{},"guards/PermissionGuard.html":{},"injectables/RedisService.html":{},"entities/Role.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":1321,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1366,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":493,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BookingController.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/CustomExceptionFilter.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"controllers/MeetingRoomController.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"interfaces/Request.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmailService.html":{},"modules/RedisModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":542,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1284,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1007,"title":{},"body":{"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":218,"title":{},"body":{"controllers/BookingController.html":{},"classes/BookingListVo.html":{},"classes/BookingVo.html":{},"classes/CreateMeetingRoomDto.html":{},"controllers/EmailController.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/MeetingRoomVo.html":{},"entities/Permission.html":{},"classes/RegisterUserDto.html":{},"controllers/StatisticController.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"classes/UserBookingCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"dependencies.html":{},"classes/refreshTokenVo.html":{}}}],["nestjs/typeorm",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"injectables/StatisticService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":228,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newrefreshtoken",{"_index":1031,"title":{},"body":{"controllers/UserController.html":{}}}],["newuser",{"_index":1171,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.email",{"_index":1173,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.nickname",{"_index":1176,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.password",{"_index":1174,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.username",{"_index":1172,"title":{},"body":{"injectables/UserService.html":{}}}],["next",{"_index":488,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{}}}],["next.handle().pipe",{"_index":497,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{}}}],["nickname",{"_index":587,"title":{},"body":{"classes/LoginUserVo.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"injectables/UserService.html":{}}}],["node.js",{"_index":1313,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":472,"title":{},"body":{"injectables/EmailService.html":{},"dependencies.html":{}}}],["notes",{"_index":115,"title":{},"body":{"entities/Booking.html":{},"classes/BookingVo.html":{}}}],["now",{"_index":525,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["null",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nullable",{"_index":897,"title":{},"body":{"entities/User.html":{}}}],["number",{"_index":127,"title":{},"body":{"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListVo.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"classes/CreateMeetingRoomDto.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/MeetingRoomVo.html":{},"entities/Permission.html":{},"injectables/RedisService.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"classes/UpdateMeetingRoomDto.html":{},"entities/User.html":{},"classes/UserBookingCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"injectables/UserService.html":{}}}],["object",{"_index":1068,"title":{},"body":{"controllers/UserController.html":{}}}],["observable",{"_index":492,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{}}}],["open",{"_index":1344,"title":{},"body":{"index.html":{}}}],["optional",{"_index":177,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{},"classes/CustomExceptionFilter.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"guards/LoginGuard.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"guards/PermissionGuard.html":{},"injectables/RedisService.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/MeetingRoomModule.html":{},"modules/RedisModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":1371,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1280,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pageno",{"_index":187,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["pagesize",{"_index":181,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["param",{"_index":204,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{}}}],["parameters",{"_index":175,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{},"classes/CustomExceptionFilter.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"guards/LoginGuard.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"guards/PermissionGuard.html":{},"injectables/RedisService.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parseintpipe",{"_index":205,"title":{},"body":{"controllers/BookingController.html":{}}}],["partialtype",{"_index":880,"title":{},"body":{"classes/UpdateMeetingRoomDto.html":{}}}],["partialtype(createmeetingroomdto",{"_index":878,"title":{},"body":{"classes/UpdateMeetingRoomDto.html":{}}}],["pass",{"_index":479,"title":{},"body":{"injectables/EmailService.html":{}}}],["password",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{}}}],["password.dto",{"_index":999,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["password.dto.ts",{"_index":889,"title":{},"body":{"classes/UpdateUserPasswordDto.html":{},"coverage.html":{}}}],["password.dto.ts:20",{"_index":892,"title":{},"body":{"classes/UpdateUserPasswordDto.html":{}}}],["password.dto.ts:32",{"_index":891,"title":{},"body":{"classes/UpdateUserPasswordDto.html":{}}}],["password.dto.ts:38",{"_index":890,"title":{},"body":{"classes/UpdateUserPasswordDto.html":{}}}],["password.dto.ts:9",{"_index":893,"title":{},"body":{"classes/UpdateUserPasswordDto.html":{}}}],["passworddto",{"_index":975,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["passworddto.captcha",{"_index":1229,"title":{},"body":{"injectables/UserService.html":{}}}],["passworddto.email",{"_index":1232,"title":{},"body":{"injectables/UserService.html":{}}}],["passworddto.username",{"_index":1230,"title":{},"body":{"injectables/UserService.html":{}}}],["path",{"_index":518,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{},"controllers/UserController.html":{}}}],["path.extname(file.originalname",{"_index":1081,"title":{},"body":{"controllers/UserController.html":{}}}],["permission",{"_index":49,"title":{"entities/Permission.html":{}},"body":{"modules/AppModule.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"classes/UserInfo.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission.entity",{"_index":812,"title":{},"body":{"entities/Role.html":{}}}],["permission.guard",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["permission1",{"_index":1198,"title":{},"body":{"injectables/UserService.html":{}}}],["permission1.code",{"_index":1199,"title":{},"body":{"injectables/UserService.html":{}}}],["permission1.description",{"_index":1201,"title":{},"body":{"injectables/UserService.html":{}}}],["permission2",{"_index":1202,"title":{},"body":{"injectables/UserService.html":{}}}],["permission2.code",{"_index":1203,"title":{},"body":{"injectables/UserService.html":{}}}],["permission2.description",{"_index":1205,"title":{},"body":{"injectables/UserService.html":{}}}],["permissionguard",{"_index":60,"title":{"guards/PermissionGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/PermissionGuard.html":{},"coverage.html":{}}}],["permissionrepository",{"_index":1138,"title":{},"body":{"injectables/UserService.html":{}}}],["permissions",{"_index":535,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["phonenumber",{"_index":591,"title":{},"body":{"classes/LoginUserVo.html":{},"entities/User.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"injectables/UserService.html":{}}}],["pick",{"_index":946,"title":{},"body":{"controllers/UserController.html":{}}}],["please",{"_index":1354,"title":{},"body":{"index.html":{}}}],["png",{"_index":1082,"title":{},"body":{"controllers/UserController.html":{}}}],["pnpm",{"_index":1325,"title":{},"body":{"index.html":{}}}],["poolsize",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["port",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmailService.html":{},"modules/RedisModule.html":{}}}],["post",{"_index":638,"title":{},"body":{"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["post('admin/login",{"_index":1024,"title":{},"body":{"controllers/UserController.html":{}}}],["post('create",{"_index":657,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["post('login",{"_index":1016,"title":{},"body":{"controllers/UserController.html":{}}}],["post('register",{"_index":1013,"title":{},"body":{"controllers/UserController.html":{}}}],["post('upload",{"_index":1071,"title":{},"body":{"controllers/UserController.html":{}}}],["post(['update",{"_index":1057,"title":{},"body":{"controllers/UserController.html":{}}}],["post(['update_password",{"_index":1054,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":160,"title":{},"body":{"controllers/BookingController.html":{},"controllers/EmailController.html":{},"controllers/MeetingRoomController.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{}}}],["primarygeneratedcolumn",{"_index":128,"title":{},"body":{"entities/Booking.html":{},"entities/MeetingRoom.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn()@apiproperty",{"_index":750,"title":{},"body":{"entities/Permission.html":{}}}],["primarygeneratedcolumn({comment",{"_index":899,"title":{},"body":{"entities/User.html":{}}}],["private",{"_index":274,"title":{},"body":{"injectables/BookingService.html":{},"controllers/EmailController.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"injectables/MeetingRoomService.html":{},"guards/PermissionGuard.html":{},"injectables/RedisService.html":{},"interfaces/Request.html":{},"injectables/StatisticService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["production",{"_index":1334,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1312,"title":{},"body":{"index.html":{}}}],["project",{"_index":1345,"title":{},"body":{"index.html":{}}}],["promise",{"_index":547,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["properties",{"_index":111,"title":{"properties.html":{}},"body":{"entities/Booking.html":{},"classes/BookingListVo.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"classes/CreateMeetingRoomDto.html":{},"injectables/EmailService.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"classes/MeetingRoomListVo.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/MeetingRoomVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookingCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"injectables/UserService.html":{},"properties.html":{},"classes/refreshTokenVo.html":{}}}],["provide",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{}}}],["providers",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/MeetingRoomModule.html":{},"modules/RedisModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["put",{"_index":639,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["put('update",{"_index":660,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["query",{"_index":206,"title":{},"body":{"controllers/BookingController.html":{},"controllers/EmailController.html":{},"controllers/MeetingRoomController.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{}}}],["query('bookingtimerangeend",{"_index":237,"title":{},"body":{"controllers/BookingController.html":{}}}],["query('bookingtimerangestart",{"_index":236,"title":{},"body":{"controllers/BookingController.html":{}}}],["query('capacity",{"_index":652,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["query('email",{"_index":1065,"title":{},"body":{"controllers/UserController.html":{}}}],["query('endtime",{"_index":832,"title":{},"body":{"controllers/StatisticController.html":{}}}],["query('equipment",{"_index":653,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["query('location",{"_index":654,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["query('meetingroomname",{"_index":234,"title":{},"body":{"controllers/BookingController.html":{}}}],["query('meetingroomposition",{"_index":235,"title":{},"body":{"controllers/BookingController.html":{}}}],["query('name",{"_index":651,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["query('nickname",{"_index":1064,"title":{},"body":{"controllers/UserController.html":{}}}],["query('pageno",{"_index":227,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["query('starttime",{"_index":831,"title":{},"body":{"controllers/StatisticController.html":{}}}],["query('username",{"_index":233,"title":{},"body":{"controllers/BookingController.html":{},"controllers/UserController.html":{}}}],["read",{"_index":1355,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/BookingController.html":{},"controllers/EmailController.html":{},"injectables/InvokeRecordInterceptor.html":{},"controllers/MeetingRoomController.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{}}}],["record",{"_index":1243,"title":{},"body":{"injectables/UserService.html":{}}}],["record.interceptor.ts",{"_index":502,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{},"coverage.html":{}}}],["record.interceptor.ts:13",{"_index":507,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["record.interceptor.ts:15",{"_index":504,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["redis",{"_index":768,"title":{},"body":{"modules/RedisModule.html":{},"injectables/RedisService.html":{},"dependencies.html":{}}}],["redis.service",{"_index":766,"title":{},"body":{"modules/RedisModule.html":{}}}],["redis/redis.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["redis_client",{"_index":769,"title":{},"body":{"modules/RedisModule.html":{}}}],["redisclient",{"_index":777,"title":{},"body":{"injectables/RedisService.html":{}}}],["redisclienttype",{"_index":786,"title":{},"body":{"injectables/RedisService.html":{}}}],["redismodule",{"_index":33,"title":{"modules/RedisModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{},"modules.html":{},"overview.html":{}}}],["redisservice",{"_index":277,"title":{"injectables/RedisService.html":{}},"body":{"injectables/BookingService.html":{},"controllers/EmailController.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["reflect",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":540,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["refresh",{"_index":925,"title":{},"body":{"controllers/UserController.html":{}}}],["refresh(@query('refreshtoken",{"_index":1027,"title":{},"body":{"controllers/UserController.html":{}}}],["refresh(refreshtoken",{"_index":957,"title":{},"body":{"controllers/UserController.html":{}}}],["refreshtoken",{"_index":581,"title":{},"body":{"classes/LoginUserVo.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{},"classes/refreshTokenVo.html":{}}}],["refreshtokenvo",{"_index":1002,"title":{"classes/refreshTokenVo.html":{}},"body":{"controllers/UserController.html":{},"coverage.html":{},"classes/refreshTokenVo.html":{}}}],["refreshtokenvo})@get('admin/refresh",{"_index":939,"title":{},"body":{"controllers/UserController.html":{}}}],["refreshtokenvo})@get('refresh",{"_index":958,"title":{},"body":{"controllers/UserController.html":{}}}],["register",{"_index":926,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["register(@body",{"_index":1014,"title":{},"body":{"controllers/UserController.html":{}}}],["register(registeruser",{"_index":960,"title":{},"body":{"controllers/UserController.html":{}}}],["register(user",{"_index":1154,"title":{},"body":{"injectables/UserService.html":{}}}],["registeruser",{"_index":964,"title":{},"body":{"controllers/UserController.html":{}}}],["registeruserdto",{"_index":792,"title":{"classes/RegisterUserDto.html":{}},"body":{"classes/RegisterUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["registeruserdto})@apiresponse({status",{"_index":961,"title":{},"body":{"controllers/UserController.html":{}}}],["reject",{"_index":165,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["reject(@param('id",{"_index":247,"title":{},"body":{"controllers/BookingController.html":{}}}],["reject(id",{"_index":193,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["relations",{"_index":343,"title":{},"body":{"injectables/BookingService.html":{},"injectables/UserService.html":{}}}],["repl.ts",{"_index":1256,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["repository",{"_index":678,"title":{},"body":{"injectables/MeetingRoomService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["req",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":509,"title":{"interfaces/Request.html":{}},"body":{"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["request.headers.authorization",{"_index":554,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["request.headers['user",{"_index":514,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["request.user",{"_index":560,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"miscellaneous/variables.html":{}}}],["request.user.permissions",{"_index":754,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["request.user?.userid",{"_index":523,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["request.user?.username",{"_index":524,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["request.user[data",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require",{"_index":757,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["required",{"_index":188,"title":{},"body":{"controllers/BookingController.html":{},"controllers/EmailController.html":{},"controllers/MeetingRoomController.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{}}}],["requirelogin",{"_index":219,"title":{},"body":{"controllers/BookingController.html":{},"controllers/EmailController.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"controllers/MeetingRoomController.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requirelogin()@delete(':id",{"_index":623,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["requirepermission",{"_index":1265,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["requirepermissions",{"_index":755,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["res",{"_index":412,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"injectables/StatisticService.html":{}}}],["res?.message?.join",{"_index":418,"title":{},"body":{"classes/CustomExceptionFilter.html":{}}}],["reset",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/MeetingRoomModule.html":{},"modules/RedisModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":405,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["response.interceptor.ts",{"_index":484,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"coverage.html":{}}}],["response.interceptor.ts:12",{"_index":490,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{}}}],["response.statuscode",{"_index":409,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{}}}],["results",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListVo.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/MeetingRoomVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookingCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/refreshTokenVo.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/BookingController.html":{},"injectables/BookingService.html":{},"controllers/EmailController.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"interfaces/Request.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":178,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{},"classes/CustomExceptionFilter.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"guards/LoginGuard.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"guards/PermissionGuard.html":{},"injectables/RedisService.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UnloginFilter.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["role",{"_index":47,"title":{"entities/Role.html":{}},"body":{"modules/AppModule.html":{},"entities/Role.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["role.entity",{"_index":912,"title":{},"body":{"entities/User.html":{}}}],["role1",{"_index":1194,"title":{},"body":{"injectables/UserService.html":{}}}],["role1.name",{"_index":1195,"title":{},"body":{"injectables/UserService.html":{}}}],["role1.permissions",{"_index":1208,"title":{},"body":{"injectables/UserService.html":{}}}],["role2",{"_index":1196,"title":{},"body":{"injectables/UserService.html":{}}}],["role2.name",{"_index":1197,"title":{},"body":{"injectables/UserService.html":{}}}],["role2.permissions",{"_index":1209,"title":{},"body":{"injectables/UserService.html":{}}}],["role_permission",{"_index":808,"title":{},"body":{"entities/Role.html":{}}}],["rolerepository",{"_index":1139,"title":{},"body":{"injectables/UserService.html":{}}}],["roles",{"_index":536,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"interfaces/Request.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{},"injectables/UserService.html":{}}}],["roles.permissions",{"_index":1215,"title":{},"body":{"injectables/UserService.html":{}}}],["room",{"_index":116,"title":{},"body":{"entities/Booking.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountVo.html":{},"controllers/StatisticController.html":{},"coverage.html":{}}}],["room.controller",{"_index":674,"title":{},"body":{"modules/MeetingRoomModule.html":{}}}],["room.controller.ts",{"_index":611,"title":{},"body":{"controllers/MeetingRoomController.html":{},"coverage.html":{}}}],["room.controller.ts:111",{"_index":620,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["room.controller.ts:132",{"_index":636,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["room.controller.ts:150",{"_index":627,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["room.controller.ts:167",{"_index":624,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["room.controller.ts:35",{"_index":629,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["room.controller.ts:71",{"_index":631,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["room.dto",{"_index":643,"title":{},"body":{"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"classes/UpdateMeetingRoomDto.html":{}}}],["room.dto.ts",{"_index":376,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{},"classes/UpdateMeetingRoomDto.html":{},"coverage.html":{}}}],["room.dto.ts:11",{"_index":879,"title":{},"body":{"classes/UpdateMeetingRoomDto.html":{}}}],["room.dto.ts:12",{"_index":389,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{}}}],["room.dto.ts:18",{"_index":381,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{}}}],["room.dto.ts:27",{"_index":388,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{}}}],["room.dto.ts:36",{"_index":387,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{}}}],["room.dto.ts:45",{"_index":384,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{}}}],["room.entity",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"entities/Booking.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"injectables/StatisticService.html":{}}}],["room.entity.ts",{"_index":594,"title":{},"body":{"entities/MeetingRoom.html":{},"coverage.html":{}}}],["room.entity.ts:16",{"_index":604,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["room.entity.ts:23",{"_index":607,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["room.entity.ts:29",{"_index":597,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["room.entity.ts:36",{"_index":606,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["room.entity.ts:44",{"_index":602,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["room.entity.ts:52",{"_index":601,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["room.entity.ts:59",{"_index":605,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["room.entity.ts:65",{"_index":599,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["room.entity.ts:71",{"_index":609,"title":{},"body":{"entities/MeetingRoom.html":{}}}],["room.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["room.module.ts",{"_index":673,"title":{},"body":{"modules/MeetingRoomModule.html":{}}}],["room.service",{"_index":641,"title":{},"body":{"controllers/MeetingRoomController.html":{},"modules/MeetingRoomModule.html":{}}}],["room.service.ts",{"_index":677,"title":{},"body":{"injectables/MeetingRoomService.html":{},"coverage.html":{}}}],["room.service.ts:11",{"_index":686,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room.service.ts:111",{"_index":681,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room.service.ts:115",{"_index":680,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room.service.ts:13",{"_index":682,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room.service.ts:35",{"_index":683,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room.service.ts:78",{"_index":679,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room.service.ts:88",{"_index":684,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room.vo",{"_index":647,"title":{},"body":{"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{}}}],["room.vo.ts",{"_index":736,"title":{},"body":{"classes/MeetingRoomVo.html":{},"coverage.html":{}}}],["room.vo.ts:11",{"_index":737,"title":{},"body":{"classes/MeetingRoomVo.html":{}}}],["room.vo.ts:14",{"_index":743,"title":{},"body":{"classes/MeetingRoomVo.html":{}}}],["room.vo.ts:17",{"_index":740,"title":{},"body":{"classes/MeetingRoomVo.html":{}}}],["room.vo.ts:20",{"_index":739,"title":{},"body":{"classes/MeetingRoomVo.html":{}}}],["room.vo.ts:23",{"_index":742,"title":{},"body":{"classes/MeetingRoomVo.html":{}}}],["room.vo.ts:26",{"_index":738,"title":{},"body":{"classes/MeetingRoomVo.html":{}}}],["room.vo.ts:29",{"_index":745,"title":{},"body":{"classes/MeetingRoomVo.html":{}}}],["room.vo.ts:5",{"_index":741,"title":{},"body":{"classes/MeetingRoomVo.html":{}}}],["room.vo.ts:8",{"_index":744,"title":{},"body":{"classes/MeetingRoomVo.html":{}}}],["room/dto/create",{"_index":375,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{},"coverage.html":{}}}],["room/dto/update",{"_index":876,"title":{},"body":{"classes/UpdateMeetingRoomDto.html":{},"coverage.html":{}}}],["room/entities/meeting",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"entities/Booking.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"entities/MeetingRoom.html":{},"injectables/StatisticService.html":{},"coverage.html":{}}}],["room/meeting",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"controllers/MeetingRoomController.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"coverage.html":{}}}],["room/vo/meeting",{"_index":669,"title":{},"body":{"classes/MeetingRoomListVo.html":{},"classes/MeetingRoomVo.html":{},"coverage.html":{}}}],["room1",{"_index":300,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{}}}],["room1.capacity",{"_index":689,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room1.equipment",{"_index":690,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room1.location",{"_index":691,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room1.name",{"_index":688,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room2",{"_index":303,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{}}}],["room2.capacity",{"_index":693,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room2.equipment",{"_index":694,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room2.location",{"_index":695,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room2.name",{"_index":692,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room3",{"_index":696,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room3.capacity",{"_index":698,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room3.equipment",{"_index":699,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room3.location",{"_index":700,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["room3.name",{"_index":697,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["run",{"_index":1329,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":495,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"dependencies.html":{}}}],["scalable",{"_index":1317,"title":{},"body":{"index.html":{}}}],["schema",{"_index":1067,"title":{},"body":{"controllers/UserController.html":{}}}],["secret",{"_index":1133,"title":{},"body":{"modules/UserModule.html":{}}}],["secure",{"_index":476,"title":{},"body":{"injectables/EmailService.html":{}}}],["select",{"_index":355,"title":{},"body":{"injectables/BookingService.html":{},"injectables/UserService.html":{}}}],["select('m.id",{"_index":860,"title":{},"body":{"injectables/StatisticService.html":{}}}],["select('u.id",{"_index":847,"title":{},"body":{"injectables/StatisticService.html":{}}}],["sendemailcode",{"_index":423,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendemailcode(@query('address",{"_index":446,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendemailcode(address",{"_index":426,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendmail",{"_index":465,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendmail(undefined",{"_index":469,"title":{},"body":{"injectables/EmailService.html":{}}}],["server",{"_index":1318,"title":{},"body":{"index.html":{}}}],["set",{"_index":778,"title":{},"body":{"injectables/RedisService.html":{}}}],["set(key",{"_index":782,"title":{},"body":{"injectables/RedisService.html":{}}}],["setmetadata('require",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sha256_password",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["side",{"_index":1319,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":1135,"title":{},"body":{"modules/UserModule.html":{}}}],["skip",{"_index":339,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{},"injectables/UserService.html":{}}}],["skipcount",{"_index":340,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{},"injectables/UserService.html":{}}}],["socket",{"_index":771,"title":{},"body":{"modules/RedisModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListVo.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/MeetingRoomVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookingCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{},"classes/refreshTokenVo.html":{}}}],["sponsors",{"_index":1348,"title":{},"body":{"index.html":{}}}],["src/.${process.env.node_env}.env",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["src/.../booking.entity.ts",{"_index":1303,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../custom.decorator.ts",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1305,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../my",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":1306,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":107,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/booking/booking.controller.ts",{"_index":159,"title":{},"body":{"controllers/BookingController.html":{},"coverage.html":{}}}],["src/booking/booking.controller.ts:109",{"_index":174,"title":{},"body":{"controllers/BookingController.html":{}}}],["src/booking/booking.controller.ts:127",{"_index":195,"title":{},"body":{"controllers/BookingController.html":{}}}],["src/booking/booking.controller.ts:145",{"_index":198,"title":{},"body":{"controllers/BookingController.html":{}}}],["src/booking/booking.controller.ts:163",{"_index":201,"title":{},"body":{"controllers/BookingController.html":{}}}],["src/booking/booking.controller.ts:70",{"_index":192,"title":{},"body":{"controllers/BookingController.html":{}}}],["src/booking/booking.module.ts",{"_index":270,"title":{},"body":{"modules/BookingModule.html":{}}}],["src/booking/booking.service.ts",{"_index":273,"title":{},"body":{"injectables/BookingService.html":{},"coverage.html":{}}}],["src/booking/booking.service.ts:13",{"_index":287,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/booking.service.ts:137",{"_index":279,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/booking.service.ts:145",{"_index":282,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/booking.service.ts:153",{"_index":283,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/booking.service.ts:16",{"_index":289,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/booking.service.ts:161",{"_index":284,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/booking.service.ts:19",{"_index":285,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/booking.service.ts:21",{"_index":280,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/booking.service.ts:69",{"_index":281,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/booking/entity/booking.entity",{"_index":843,"title":{},"body":{"injectables/StatisticService.html":{}}}],["src/booking/entity/booking.entity.ts",{"_index":109,"title":{},"body":{"entities/Booking.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/booking/entity/booking.entity.ts:22",{"_index":129,"title":{},"body":{"entities/Booking.html":{}}}],["src/booking/entity/booking.entity.ts:27",{"_index":138,"title":{},"body":{"entities/Booking.html":{}}}],["src/booking/entity/booking.entity.ts:32",{"_index":126,"title":{},"body":{"entities/Booking.html":{}}}],["src/booking/entity/booking.entity.ts:39",{"_index":141,"title":{},"body":{"entities/Booking.html":{}}}],["src/booking/entity/booking.entity.ts:46",{"_index":135,"title":{},"body":{"entities/Booking.html":{}}}],["src/booking/entity/booking.entity.ts:50",{"_index":144,"title":{},"body":{"entities/Booking.html":{}}}],["src/booking/entity/booking.entity.ts:53",{"_index":137,"title":{},"body":{"entities/Booking.html":{}}}],["src/booking/entity/booking.entity.ts:58",{"_index":124,"title":{},"body":{"entities/Booking.html":{}}}],["src/booking/entity/booking.entity.ts:63",{"_index":143,"title":{},"body":{"entities/Booking.html":{}}}],["src/booking/vo/booking",{"_index":257,"title":{},"body":{"classes/BookingListVo.html":{},"coverage.html":{}}}],["src/booking/vo/booking.vo.ts",{"_index":364,"title":{},"body":{"classes/BookingVo.html":{},"coverage.html":{}}}],["src/booking/vo/booking.vo.ts:10",{"_index":370,"title":{},"body":{"classes/BookingVo.html":{}}}],["src/booking/vo/booking.vo.ts:13",{"_index":366,"title":{},"body":{"classes/BookingVo.html":{}}}],["src/booking/vo/booking.vo.ts:16",{"_index":371,"title":{},"body":{"classes/BookingVo.html":{}}}],["src/booking/vo/booking.vo.ts:19",{"_index":368,"title":{},"body":{"classes/BookingVo.html":{}}}],["src/booking/vo/booking.vo.ts:22",{"_index":373,"title":{},"body":{"classes/BookingVo.html":{}}}],["src/booking/vo/booking.vo.ts:25",{"_index":369,"title":{},"body":{"classes/BookingVo.html":{}}}],["src/booking/vo/booking.vo.ts:28",{"_index":365,"title":{},"body":{"classes/BookingVo.html":{}}}],["src/booking/vo/booking.vo.ts:31",{"_index":372,"title":{},"body":{"classes/BookingVo.html":{}}}],["src/booking/vo/booking.vo.ts:7",{"_index":367,"title":{},"body":{"classes/BookingVo.html":{}}}],["src/custom",{"_index":394,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"coverage.html":{}}}],["src/custom.decorator",{"_index":220,"title":{},"body":{"controllers/BookingController.html":{},"controllers/EmailController.html":{},"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["src/custom.decorator.ts",{"_index":1263,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/email/email.controller.ts",{"_index":422,"title":{},"body":{"controllers/EmailController.html":{},"coverage.html":{}}}],["src/email/email.controller.ts:28",{"_index":433,"title":{},"body":{"controllers/EmailController.html":{}}}],["src/email/email.controller.ts:52",{"_index":440,"title":{},"body":{"controllers/EmailController.html":{}}}],["src/email/email.controller.ts:75",{"_index":437,"title":{},"body":{"controllers/EmailController.html":{}}}],["src/email/email.module.ts",{"_index":460,"title":{},"body":{"modules/EmailModule.html":{}}}],["src/email/email.service",{"_index":293,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/email/email.service.ts",{"_index":463,"title":{},"body":{"injectables/EmailService.html":{},"coverage.html":{}}}],["src/email/email.service.ts:21",{"_index":470,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:7",{"_index":468,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/format",{"_index":483,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"coverage.html":{}}}],["src/invoke",{"_index":501,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{},"coverage.html":{}}}],["src/login.guard.ts",{"_index":534,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["src/login.guard.ts:35",{"_index":570,"title":{},"body":{"guards/LoginGuard.html":{}}}],["src/main.ts",{"_index":1267,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/meeting",{"_index":150,"title":{},"body":{"entities/Booking.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"classes/CreateMeetingRoomDto.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"modules/MeetingRoomModule.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomVo.html":{},"injectables/StatisticService.html":{},"classes/UpdateMeetingRoomDto.html":{},"coverage.html":{}}}],["src/my",{"_index":1009,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/permission.guard.ts",{"_index":752,"title":{},"body":{"guards/PermissionGuard.html":{},"coverage.html":{}}}],["src/permission.guard.ts:16",{"_index":753,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["src/redis/redis.module.ts",{"_index":765,"title":{},"body":{"modules/RedisModule.html":{}}}],["src/redis/redis.service",{"_index":292,"title":{},"body":{"injectables/BookingService.html":{},"controllers/EmailController.html":{},"injectables/UserService.html":{}}}],["src/redis/redis.service.ts",{"_index":776,"title":{},"body":{"injectables/RedisService.html":{},"coverage.html":{}}}],["src/redis/redis.service.ts:13",{"_index":784,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/redis/redis.service.ts:7",{"_index":788,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/redis/redis.service.ts:9",{"_index":780,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/statistic/statistic.controller.ts",{"_index":814,"title":{},"body":{"controllers/StatisticController.html":{},"coverage.html":{}}}],["src/statistic/statistic.controller.ts:28",{"_index":825,"title":{},"body":{"controllers/StatisticController.html":{}}}],["src/statistic/statistic.controller.ts:51",{"_index":821,"title":{},"body":{"controllers/StatisticController.html":{}}}],["src/statistic/statistic.module.ts",{"_index":837,"title":{},"body":{"modules/StatisticModule.html":{}}}],["src/statistic/statistic.service.ts",{"_index":839,"title":{},"body":{"injectables/StatisticService.html":{},"coverage.html":{}}}],["src/statistic/statistic.service.ts:11",{"_index":842,"title":{},"body":{"injectables/StatisticService.html":{}}}],["src/statistic/statistic.service.ts:13",{"_index":841,"title":{},"body":{"injectables/StatisticService.html":{}}}],["src/statistic/statistic.service.ts:29",{"_index":840,"title":{},"body":{"injectables/StatisticService.html":{}}}],["src/statistic/vo/meeting",{"_index":728,"title":{},"body":{"classes/MeetingRoomUsedCountVo.html":{},"coverage.html":{}}}],["src/statistic/vo/user",{"_index":917,"title":{},"body":{"classes/UserBookingCountVo.html":{},"coverage.html":{}}}],["src/unlogin.filter.ts",{"_index":868,"title":{},"body":{"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"coverage.html":{}}}],["src/unlogin.filter.ts:10",{"_index":870,"title":{},"body":{"classes/UnLoginException.html":{}}}],["src/unlogin.filter.ts:19",{"_index":875,"title":{},"body":{"classes/UnloginFilter.html":{}}}],["src/user/dto/login",{"_index":572,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/user/dto/register",{"_index":793,"title":{},"body":{"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["src/user/dto/udpate",{"_index":882,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":888,"title":{},"body":{"classes/UpdateUserPasswordDto.html":{},"coverage.html":{}}}],["src/user/entities/permission.entity.ts",{"_index":746,"title":{},"body":{"entities/Permission.html":{},"coverage.html":{}}}],["src/user/entities/permission.entity.ts:17",{"_index":748,"title":{},"body":{"entities/Permission.html":{}}}],["src/user/entities/permission.entity.ts:26",{"_index":749,"title":{},"body":{"entities/Permission.html":{}}}],["src/user/entities/permission.entity.ts:8",{"_index":751,"title":{},"body":{"entities/Permission.html":{}}}],["src/user/entities/role.entity.ts",{"_index":804,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["src/user/entities/role.entity.ts:13",{"_index":805,"title":{},"body":{"entities/Role.html":{}}}],["src/user/entities/role.entity.ts:19",{"_index":806,"title":{},"body":{"entities/Role.html":{}}}],["src/user/entities/role.entity.ts:25",{"_index":809,"title":{},"body":{"entities/Role.html":{}}}],["src/user/entities/user.entity",{"_index":151,"title":{},"body":{"entities/Booking.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"injectables/StatisticService.html":{}}}],["src/user/entities/user.entity.ts",{"_index":894,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:24",{"_index":900,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:31",{"_index":910,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:37",{"_index":904,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:43",{"_index":903,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:49",{"_index":896,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:56",{"_index":898,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:63",{"_index":905,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:69",{"_index":902,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:75",{"_index":901,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:80",{"_index":895,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:85",{"_index":908,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:91",{"_index":907,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.controller.ts",{"_index":919,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:105",{"_index":934,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:131",{"_index":959,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:168",{"_index":940,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:194",{"_index":952,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:223",{"_index":974,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:243",{"_index":969,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:265",{"_index":944,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:308",{"_index":956,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:368",{"_index":982,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:377",{"_index":947,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:398",{"_index":949,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:52",{"_index":953,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:70",{"_index":963,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:86",{"_index":985,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":1126,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":1137,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:112",{"_index":1153,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:154",{"_index":1145,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:175",{"_index":1147,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:185",{"_index":1157,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:217",{"_index":1156,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:24",{"_index":1159,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:249",{"_index":1150,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:253",{"_index":1149,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:27",{"_index":1162,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:30",{"_index":1166,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:33",{"_index":1164,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:36",{"_index":1161,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:38",{"_index":1155,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:72",{"_index":1151,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/vo/login",{"_index":578,"title":{},"body":{"classes/LoginUserVo.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["src/user/vo/refresh",{"_index":1274,"title":{},"body":{"coverage.html":{},"classes/refreshTokenVo.html":{}}}],["src/user/vo/user",{"_index":1099,"title":{},"body":{"classes/UserDetailVo.html":{},"classes/UserListVo.html":{},"coverage.html":{}}}],["src/utils",{"_index":210,"title":{},"body":{"controllers/BookingController.html":{},"controllers/MeetingRoomController.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["src/utils.ts",{"_index":1277,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":1330,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1333,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1335,"title":{},"body":{"index.html":{}}}],["started",{"_index":1311,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1323,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":117,"title":{},"body":{"entities/Booking.html":{},"classes/BookingVo.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{}}}],["statements",{"_index":1255,"title":{},"body":{"coverage.html":{}}}],["statistic",{"_index":815,"title":{},"body":{"controllers/StatisticController.html":{}}}],["statistic.controller",{"_index":838,"title":{},"body":{"modules/StatisticModule.html":{}}}],["statistic.service",{"_index":827,"title":{},"body":{"controllers/StatisticController.html":{},"modules/StatisticModule.html":{}}}],["statistic/statistic.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["statisticcontroller",{"_index":813,"title":{"controllers/StatisticController.html":{}},"body":{"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"coverage.html":{}}}],["statisticmodule",{"_index":34,"title":{"modules/StatisticModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StatisticModule.html":{},"modules.html":{},"overview.html":{}}}],["statisticservice",{"_index":826,"title":{"injectables/StatisticService.html":{}},"body":{"controllers/StatisticController.html":{},"modules/StatisticModule.html":{},"injectables/StatisticService.html":{},"coverage.html":{},"overview.html":{}}}],["status",{"_index":118,"title":{},"body":{"entities/Booking.html":{},"controllers/BookingController.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"controllers/EmailController.html":{},"controllers/MeetingRoomController.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{}}}],["stay",{"_index":1358,"title":{},"body":{"index.html":{}}}],["storage",{"_index":1008,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.ts",{"_index":1270,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["str",{"_index":1309,"title":{},"body":{"miscellaneous/functions.html":{}}}],["string",{"_index":130,"title":{},"body":{"entities/Booking.html":{},"controllers/BookingController.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"controllers/EmailController.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/MeetingRoomVo.html":{},"entities/Permission.html":{},"injectables/RedisService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookingCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"injectables/UserService.html":{},"classes/refreshTokenVo.html":{},"miscellaneous/variables.html":{}}}],["string})@apiquery({name",{"_index":954,"title":{},"body":{"controllers/UserController.html":{}}}],["string})@apiresponse({status",{"_index":618,"title":{},"body":{"controllers/MeetingRoomController.html":{},"controllers/UserController.html":{}}}],["string})@get('register",{"_index":431,"title":{},"body":{"controllers/EmailController.html":{}}}],["string})@get('update_password/captcha",{"_index":439,"title":{},"body":{"controllers/EmailController.html":{}}}],["string})@post('register",{"_index":962,"title":{},"body":{"controllers/UserController.html":{}}}],["string})@post('upload')@useinterceptors(undefined",{"_index":981,"title":{},"body":{"controllers/UserController.html":{}}}],["string})@post(['update",{"_index":967,"title":{},"body":{"controllers/UserController.html":{}}}],["string})@post(['update_password",{"_index":972,"title":{},"body":{"controllers/UserController.html":{}}}],["string})@requirelogin()@get('freeze",{"_index":943,"title":{},"body":{"controllers/UserController.html":{}}}],["string})@requirelogin()@get('update/captcha",{"_index":436,"title":{},"body":{"controllers/EmailController.html":{}}}],["string})@requirelogin()@post('create",{"_index":619,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["string})@requirelogin()@put('update",{"_index":635,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["subject",{"_index":360,"title":{},"body":{"injectables/BookingService.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{}}}],["success",{"_index":499,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"controllers/UserController.html":{}}}],["support",{"_index":1349,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1369,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":1279,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1278,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":341,"title":{},"body":{"injectables/BookingService.html":{},"injectables/MeetingRoomService.html":{},"injectables/UserService.html":{}}}],["tap",{"_index":508,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["tap((data",{"_index":527,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["test",{"_index":1338,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1341,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1340,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1337,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1347,"title":{},"body":{"index.html":{}}}],["this.bookingservice.apply(id",{"_index":244,"title":{},"body":{"controllers/BookingController.html":{}}}],["this.bookingservice.list",{"_index":239,"title":{},"body":{"controllers/BookingController.html":{}}}],["this.bookingservice.reject(id",{"_index":248,"title":{},"body":{"controllers/BookingController.html":{}}}],["this.bookingservice.unbind(id",{"_index":252,"title":{},"body":{"controllers/BookingController.html":{}}}],["this.bookingservice.urge(id",{"_index":255,"title":{},"body":{"controllers/BookingController.html":{}}}],["this.configservice.get('jwt_access_token_expires_time",{"_index":1095,"title":{},"body":{"controllers/UserController.html":{}}}],["this.configservice.get('jwt_refresh_token_expires_time",{"_index":1097,"title":{},"body":{"controllers/UserController.html":{}}}],["this.configservice.get('nodemailer_auth_pass",{"_index":480,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.configservice.get('nodemailer_auth_user",{"_index":478,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.configservice.get('nodemailer_host",{"_index":474,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.configservice.get('nodemailer_port",{"_index":475,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.emailservice.sendmail",{"_index":359,"title":{},"body":{"injectables/BookingService.html":{},"controllers/EmailController.html":{}}}],["this.entitymanager",{"_index":844,"title":{},"body":{"injectables/StatisticService.html":{}}}],["this.entitymanager.findandcount",{"_index":338,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.entitymanager.findone(user",{"_index":354,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.entitymanager.findoneby(meetingroom",{"_index":301,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.entitymanager.findoneby(user",{"_index":296,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.entitymanager.save(booking",{"_index":313,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.entitymanager.update",{"_index":348,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.getaccesstoken(user",{"_index":1030,"title":{},"body":{"controllers/UserController.html":{}}}],["this.getaccesstoken(vo.userinfo",{"_index":1021,"title":{},"body":{"controllers/UserController.html":{}}}],["this.getrefreshtoken(user.id",{"_index":1032,"title":{},"body":{"controllers/UserController.html":{}}}],["this.getrefreshtoken(vo.userinfo.id",{"_index":1023,"title":{},"body":{"controllers/UserController.html":{}}}],["this.jwtservice.sign",{"_index":1091,"title":{},"body":{"controllers/UserController.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":1028,"title":{},"body":{"controllers/UserController.html":{}}}],["this.jwtservice.verify(token",{"_index":559,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["this.logger.debug",{"_index":519,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["this.logger.debug(`response",{"_index":529,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["this.logger.error(error",{"_index":1178,"title":{},"body":{"injectables/UserService.html":{}}}],["this.meetingroomservice.create(meetingroomdto",{"_index":659,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["this.meetingroomservice.delete(id",{"_index":668,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["this.meetingroomservice.findbyid(id",{"_index":665,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["this.meetingroomservice.initdata",{"_index":650,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["this.meetingroomservice.list",{"_index":655,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["this.meetingroomservice.update(meetingroomdto",{"_index":662,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["this.message",{"_index":871,"title":{},"body":{"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{}}}],["this.password",{"_index":915,"title":{},"body":{"entities/User.html":{}}}],["this.permissionrepository.save([permission1",{"_index":1210,"title":{},"body":{"injectables/UserService.html":{}}}],["this.redisclient.expire(key",{"_index":791,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.redisclient.get(key",{"_index":789,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.redisclient.set(key",{"_index":790,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.redisservice.get",{"_index":1227,"title":{},"body":{"injectables/UserService.html":{}}}],["this.redisservice.get('admin_email",{"_index":352,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.redisservice.get(`captcha_${user.email",{"_index":1167,"title":{},"body":{"injectables/UserService.html":{}}}],["this.redisservice.get(`urge_${id",{"_index":350,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.redisservice.set",{"_index":452,"title":{},"body":{"controllers/EmailController.html":{}}}],["this.redisservice.set('admin_email",{"_index":358,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.redisservice.set('urge_",{"_index":362,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.redisservice.set(`captcha_${address",{"_index":449,"title":{},"body":{"controllers/EmailController.html":{}}}],["this.redisservice.set(`update_user_captcha_${address",{"_index":456,"title":{},"body":{"controllers/EmailController.html":{}}}],["this.reflector.getallandoverride",{"_index":756,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["this.reflector.getallandoverride('require",{"_index":549,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["this.repository.delete",{"_index":726,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["this.repository.findandcount",{"_index":711,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["this.repository.findoneby",{"_index":712,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["this.repository.insert([room1",{"_index":701,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["this.repository.insert(meetingroomdto",{"_index":714,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["this.repository.update(meetingroom.id",{"_index":725,"title":{},"body":{"injectables/MeetingRoomService.html":{}}}],["this.rolerepository.save([role1",{"_index":1211,"title":{},"body":{"injectables/UserService.html":{}}}],["this.statisticservice.meetingroomusedcount(starttime",{"_index":834,"title":{},"body":{"controllers/StatisticController.html":{}}}],["this.statisticservice.userbookingcount(starttime",{"_index":833,"title":{},"body":{"controllers/StatisticController.html":{}}}],["this.transporter",{"_index":473,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.transporter.sendmail",{"_index":481,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.userrepository.findandcount",{"_index":1249,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone",{"_index":1213,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findoneby",{"_index":1170,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save([user1",{"_index":1212,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(founduser",{"_index":1235,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(newuser",{"_index":1177,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.update(userid",{"_index":1242,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.finduserbyid(data.userid",{"_index":1029,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.finduserdetailbyid(userid",{"_index":1037,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findusersbypage",{"_index":1066,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.freeze(userid",{"_index":1063,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.initdata",{"_index":1012,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.login(loginuser",{"_index":1019,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.register(registeruser",{"_index":1015,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(userid",{"_index":1060,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updatepassword(passworddto",{"_index":1056,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":555,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"injectables/MeetingRoomService.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["time1",{"_index":856,"title":{},"body":{"injectables/StatisticService.html":{}}}],["time2",{"_index":857,"title":{},"body":{"injectables/StatisticService.html":{}}}],["token",{"_index":557,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{}}}],["token.vo",{"_index":1004,"title":{},"body":{"controllers/UserController.html":{}}}],["token.vo.ts",{"_index":1275,"title":{},"body":{"coverage.html":{},"classes/refreshTokenVo.html":{}}}],["token.vo.ts:5",{"_index":1378,"title":{},"body":{"classes/refreshTokenVo.html":{}}}],["token.vo.ts:8",{"_index":1379,"title":{},"body":{"classes/refreshTokenVo.html":{}}}],["totalcount",{"_index":260,"title":{},"body":{"classes/BookingListVo.html":{},"injectables/BookingService.html":{},"classes/MeetingRoomListVo.html":{},"injectables/MeetingRoomService.html":{},"classes/UserListVo.html":{},"injectables/UserService.html":{}}}],["touch",{"_index":1359,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":1290,"title":{},"body":{"dependencies.html":{}}}],["transporter",{"_index":464,"title":{},"body":{"injectables/EmailService.html":{}}}],["true",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"injectables/BookingService.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":556,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["ttl",{"_index":783,"title":{},"body":{"injectables/RedisService.html":{}}}],["twitter",{"_index":1365,"title":{},"body":{"index.html":{}}}],["type",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"entities/Booking.html":{},"controllers/BookingController.html":{},"classes/BookingListVo.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"classes/CreateMeetingRoomDto.html":{},"classes/CustomExceptionFilter.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"entities/MeetingRoom.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"injectables/MeetingRoomService.html":{},"classes/MeetingRoomUsedCountVo.html":{},"classes/MeetingRoomVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookingCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"injectables/UserService.html":{},"coverage.html":{},"classes/refreshTokenVo.html":{}}}],["typeorm",{"_index":149,"title":{},"body":{"entities/Booking.html":{},"injectables/BookingService.html":{},"entities/MeetingRoom.html":{},"injectables/MeetingRoomService.html":{},"entities/Permission.html":{},"entities/Role.html":{},"injectables/StatisticService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/MeetingRoomModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([booking",{"_index":272,"title":{},"body":{"modules/BookingModule.html":{}}}],["typeormmodule.forfeature([meetingroom",{"_index":676,"title":{},"body":{"modules/MeetingRoomModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1131,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":1285,"title":{},"body":{"dependencies.html":{}}}],["types/multer",{"_index":1288,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1322,"title":{},"body":{"index.html":{}}}],["u",{"_index":850,"title":{},"body":{"injectables/StatisticService.html":{}}}],["u.id",{"_index":852,"title":{},"body":{"injectables/StatisticService.html":{}}}],["unauthorizedexception",{"_index":539,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{}}}],["unauthorizedexception('token",{"_index":567,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{}}}],["unbind",{"_index":166,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["unbind(@param('id",{"_index":251,"title":{},"body":{"controllers/BookingController.html":{}}}],["unbind(id",{"_index":196,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["undefined",{"_index":172,"title":{},"body":{"controllers/BookingController.html":{},"classes/BookingListVo.html":{},"controllers/EmailController.html":{},"controllers/MeetingRoomController.html":{},"classes/MeetingRoomListVo.html":{},"controllers/StatisticController.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{}}}],["undefined})@apiresponse({status",{"_index":980,"title":{},"body":{"controllers/UserController.html":{}}}],["undefined})@requirelogin()@get('apply/:id",{"_index":173,"title":{},"body":{"controllers/BookingController.html":{}}}],["undefined})@requirelogin()@get('reject/:id",{"_index":194,"title":{},"body":{"controllers/BookingController.html":{}}}],["undefined})@requirelogin()@get('unbind/:id",{"_index":197,"title":{},"body":{"controllers/BookingController.html":{}}}],["undefined})@requirelogin()@get('urge/:id",{"_index":200,"title":{},"body":{"controllers/BookingController.html":{}}}],["unique",{"_index":909,"title":{},"body":{"entities/User.html":{}}}],["uniquesuffix",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":1336,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":179,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{},"controllers/EmailController.html":{},"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"injectables/RedisService.html":{},"controllers/StatisticController.html":{},"injectables/StatisticService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":1377,"title":{},"body":{"properties.html":{}}}],["unloginexception",{"_index":867,"title":{"classes/UnLoginException.html":{}},"body":{"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"coverage.html":{}}}],["unloginfilter",{"_index":873,"title":{"classes/UnloginFilter.html":{}},"body":{"classes/UnLoginException.html":{},"classes/UnloginFilter.html":{},"coverage.html":{}}}],["update",{"_index":614,"title":{},"body":{"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@body",{"_index":661,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["update(meetingroomdto",{"_index":632,"title":{},"body":{"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{}}}],["update(userid",{"_index":965,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update_password_captcha_${address",{"_index":453,"title":{},"body":{"controllers/EmailController.html":{}}}],["update_password_captcha_${passworddto.email",{"_index":1228,"title":{},"body":{"injectables/UserService.html":{}}}],["update_user_captcha_${updateuserdto.email",{"_index":1236,"title":{},"body":{"injectables/UserService.html":{}}}],["updatecaptcha",{"_index":424,"title":{},"body":{"controllers/EmailController.html":{}}}],["updatecaptcha(@userinfo('email",{"_index":455,"title":{},"body":{"controllers/EmailController.html":{}}}],["updatecaptcha(address",{"_index":434,"title":{},"body":{"controllers/EmailController.html":{}}}],["updatedatecolumn",{"_index":148,"title":{},"body":{"entities/Booking.html":{},"entities/MeetingRoom.html":{},"entities/User.html":{}}}],["updatedatecolumn({comment",{"_index":142,"title":{},"body":{"entities/Booking.html":{},"entities/User.html":{}}}],["updatemeetingroomdto",{"_index":633,"title":{"classes/UpdateMeetingRoomDto.html":{}},"body":{"controllers/MeetingRoomController.html":{},"injectables/MeetingRoomService.html":{},"classes/UpdateMeetingRoomDto.html":{},"coverage.html":{}}}],["updatemeetingroomdto})@apiresponse({status",{"_index":634,"title":{},"body":{"controllers/MeetingRoomController.html":{}}}],["updatepassword",{"_index":927,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatepassword(@body",{"_index":1055,"title":{},"body":{"controllers/UserController.html":{}}}],["updatepassword(passworddto",{"_index":970,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatepasswordcaptcha",{"_index":425,"title":{},"body":{"controllers/EmailController.html":{}}}],["updatepasswordcaptcha(@query('address",{"_index":451,"title":{},"body":{"controllers/EmailController.html":{}}}],["updatepasswordcaptcha(address",{"_index":438,"title":{},"body":{"controllers/EmailController.html":{}}}],["updatetime",{"_index":119,"title":{},"body":{"entities/Booking.html":{},"classes/BookingVo.html":{},"entities/MeetingRoom.html":{},"classes/MeetingRoomVo.html":{},"entities/User.html":{}}}],["updateuserdto",{"_index":881,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserdto.captcha",{"_index":1237,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.headpic",{"_index":1240,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.nickname",{"_index":1238,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto})@apiresponse({status",{"_index":966,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuserpassworddto",{"_index":887,"title":{"classes/UpdateUserPasswordDto.html":{}},"body":{"classes/UpdateUserPasswordDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserpassworddto})@apiresponse({status",{"_index":971,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadedfile",{"_index":987,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadfile",{"_index":928,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadfile(@uploadedfile",{"_index":1088,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadfile(file",{"_index":976,"title":{},"body":{"controllers/UserController.html":{}}}],["uploads",{"_index":1074,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["urge",{"_index":167,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["urge(@param('id",{"_index":254,"title":{},"body":{"controllers/BookingController.html":{}}}],["urge(id",{"_index":199,"title":{},"body":{"controllers/BookingController.html":{},"injectables/BookingService.html":{}}}],["useclass",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":729,"title":{},"body":{"classes/MeetingRoomUsedCountVo.html":{},"controllers/StatisticController.html":{},"coverage.html":{}}}],["usedcount",{"_index":732,"title":{},"body":{"classes/MeetingRoomUsedCountVo.html":{},"injectables/StatisticService.html":{}}}],["usefactory(configservice",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{}}}],["useinterceptors",{"_index":986,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":45,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"entities/Booking.html":{},"injectables/BookingService.html":{},"classes/BookingVo.html":{},"injectables/EmailService.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"injectables/StatisticService.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserListVo.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.captcha",{"_index":1168,"title":{},"body":{"injectables/UserService.html":{}}}],["user.controller",{"_index":1127,"title":{},"body":{"modules/UserModule.html":{}}}],["user.createtime",{"_index":1051,"title":{},"body":{"controllers/UserController.html":{}}}],["user.createtime.gettime",{"_index":1218,"title":{},"body":{"injectables/UserService.html":{}}}],["user.dto",{"_index":993,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":573,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:15",{"_index":575,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:21",{"_index":884,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:27",{"_index":883,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:6",{"_index":886,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:9",{"_index":576,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":1041,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.headpic",{"_index":1045,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.id",{"_index":1039,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.isadmin",{"_index":1219,"title":{},"body":{"injectables/UserService.html":{}}}],["user.isfrozen",{"_index":1053,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.nickname",{"_index":1049,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":1175,"title":{},"body":{"injectables/UserService.html":{}}}],["user.permissions",{"_index":1093,"title":{},"body":{"controllers/UserController.html":{}}}],["user.phonenumber",{"_index":1047,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.roles",{"_index":1092,"title":{},"body":{"controllers/UserController.html":{}}}],["user.roles.map((item",{"_index":1220,"title":{},"body":{"injectables/UserService.html":{}}}],["user.roles.reduce((arr",{"_index":1222,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":989,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.username",{"_index":1043,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.vo",{"_index":996,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.vo.ts",{"_index":579,"title":{},"body":{"classes/LoginUserVo.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["user.vo.ts:12",{"_index":1117,"title":{},"body":{"classes/UserInfo.html":{}}}],["user.vo.ts:15",{"_index":1112,"title":{},"body":{"classes/UserInfo.html":{}}}],["user.vo.ts:18",{"_index":1113,"title":{},"body":{"classes/UserInfo.html":{}}}],["user.vo.ts:21",{"_index":1119,"title":{},"body":{"classes/UserInfo.html":{}}}],["user.vo.ts:24",{"_index":1116,"title":{},"body":{"classes/UserInfo.html":{}}}],["user.vo.ts:27",{"_index":1115,"title":{},"body":{"classes/UserInfo.html":{}}}],["user.vo.ts:30",{"_index":1111,"title":{},"body":{"classes/UserInfo.html":{}}}],["user.vo.ts:33",{"_index":1120,"title":{},"body":{"classes/UserInfo.html":{}}}],["user.vo.ts:38",{"_index":1118,"title":{},"body":{"classes/UserInfo.html":{}}}],["user.vo.ts:43",{"_index":584,"title":{},"body":{"classes/LoginUserVo.html":{}}}],["user.vo.ts:46",{"_index":582,"title":{},"body":{"classes/LoginUserVo.html":{}}}],["user.vo.ts:49",{"_index":583,"title":{},"body":{"classes/LoginUserVo.html":{}}}],["user.vo.ts:6",{"_index":1114,"title":{},"body":{"classes/UserInfo.html":{}}}],["user.vo.ts:9",{"_index":1121,"title":{},"body":{"classes/UserInfo.html":{}}}],["user/entities/permission.entity",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["user/entities/role.entity",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["user/entities/user.entity",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.module",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["user1",{"_index":295,"title":{},"body":{"injectables/BookingService.html":{},"injectables/UserService.html":{}}}],["user1.email",{"_index":1182,"title":{},"body":{"injectables/UserService.html":{}}}],["user1.isadmin",{"_index":1184,"title":{},"body":{"injectables/UserService.html":{}}}],["user1.nickname",{"_index":1185,"title":{},"body":{"injectables/UserService.html":{}}}],["user1.password",{"_index":1180,"title":{},"body":{"injectables/UserService.html":{}}}],["user1.phonenumber",{"_index":1187,"title":{},"body":{"injectables/UserService.html":{}}}],["user1.roles",{"_index":1206,"title":{},"body":{"injectables/UserService.html":{}}}],["user1.username",{"_index":1179,"title":{},"body":{"injectables/UserService.html":{}}}],["user2",{"_index":298,"title":{},"body":{"injectables/BookingService.html":{},"injectables/UserService.html":{}}}],["user2.email",{"_index":1192,"title":{},"body":{"injectables/UserService.html":{}}}],["user2.nickname",{"_index":1193,"title":{},"body":{"injectables/UserService.html":{}}}],["user2.password",{"_index":1190,"title":{},"body":{"injectables/UserService.html":{}}}],["user2.roles",{"_index":1207,"title":{},"body":{"injectables/UserService.html":{}}}],["user2.username",{"_index":1188,"title":{},"body":{"injectables/UserService.html":{}}}],["user_role",{"_index":906,"title":{},"body":{"entities/User.html":{}}}],["useragent",{"_index":513,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["userbookingcount",{"_index":817,"title":{},"body":{"controllers/StatisticController.html":{},"injectables/StatisticService.html":{}}}],["userbookingcount(starttime",{"_index":822,"title":{},"body":{"controllers/StatisticController.html":{},"injectables/StatisticService.html":{}}}],["userbookingcountvo",{"_index":823,"title":{"classes/UserBookingCountVo.html":{}},"body":{"controllers/StatisticController.html":{},"classes/UserBookingCountVo.html":{},"coverage.html":{}}}],["usercontroller",{"_index":918,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdetailvo",{"_index":997,"title":{"classes/UserDetailVo.html":{}},"body":{"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"coverage.html":{}}}],["userdetailvo})@get('info')@requirelogin",{"_index":951,"title":{},"body":{"controllers/UserController.html":{}}}],["userid",{"_index":537,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"injectables/StatisticService.html":{},"classes/UserBookingCountVo.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userinfo",{"_index":442,"title":{"classes/UserInfo.html":{}},"body":{"controllers/EmailController.html":{},"classes/LoginUserVo.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userinfo('userid",{"_index":1059,"title":{},"body":{"controllers/UserController.html":{}}}],["userlistvo",{"_index":1005,"title":{"classes/UserListVo.html":{}},"body":{"controllers/UserController.html":{},"classes/UserListVo.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userlistvo})@requirelogin()@get('list",{"_index":955,"title":{},"body":{"controllers/UserController.html":{}}}],["userlogin",{"_index":929,"title":{},"body":{"controllers/UserController.html":{}}}],["userlogin(@body",{"_index":1017,"title":{},"body":{"controllers/UserController.html":{}}}],["userlogin(loginuser",{"_index":983,"title":{},"body":{"controllers/UserController.html":{}}}],["usermodule",{"_index":35,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"controllers/BookingController.html":{},"injectables/BookingService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/LoginUserVo.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"injectables/StatisticService.html":{},"classes/UpdateUserPasswordDto.html":{},"entities/User.html":{},"classes/UserBookingCountVo.html":{},"controllers/UserController.html":{},"classes/UserDetailVo.html":{},"classes/UserInfo.html":{},"classes/UserListVo.html":{},"injectables/UserService.html":{}}}],["userrepository",{"_index":1140,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":670,"title":{},"body":{"classes/MeetingRoomListVo.html":{},"classes/UserListVo.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":988,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["validationpipe报错时，message是一个数组，错误的实际存储位置是在response",{"_index":411,"title":{},"body":{"classes/CustomExceptionFilter.html":{}}}],["validator",{"_index":392,"title":{},"body":{"classes/CreateMeetingRoomDto.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateMeetingRoomDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserPasswordDto.html":{},"dependencies.html":{}}}],["value",{"_index":505,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{},"injectables/RedisService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1264,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1380,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1375,"title":{},"body":{"properties.html":{}}}],["vo",{"_index":1018,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["vo.accesstoken",{"_index":1020,"title":{},"body":{"controllers/UserController.html":{}}}],["vo.createtime",{"_index":1050,"title":{},"body":{"controllers/UserController.html":{}}}],["vo.email",{"_index":1040,"title":{},"body":{"controllers/UserController.html":{}}}],["vo.headpic",{"_index":1044,"title":{},"body":{"controllers/UserController.html":{}}}],["vo.id",{"_index":1038,"title":{},"body":{"controllers/UserController.html":{}}}],["vo.isfrozen",{"_index":1052,"title":{},"body":{"controllers/UserController.html":{}}}],["vo.nickname",{"_index":1048,"title":{},"body":{"controllers/UserController.html":{}}}],["vo.phonenumber",{"_index":1046,"title":{},"body":{"controllers/UserController.html":{}}}],["vo.refreshtoken",{"_index":1022,"title":{},"body":{"controllers/UserController.html":{}}}],["vo.totalcount",{"_index":1251,"title":{},"body":{"injectables/UserService.html":{}}}],["vo.userinfo",{"_index":1217,"title":{},"body":{"injectables/UserService.html":{}}}],["vo.username",{"_index":1042,"title":{},"body":{"controllers/UserController.html":{}}}],["vo.users",{"_index":1250,"title":{},"body":{"injectables/UserService.html":{}}}],["vo/booking",{"_index":222,"title":{},"body":{"controllers/BookingController.html":{}}}],["vo/login",{"_index":995,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["vo/meeting",{"_index":646,"title":{},"body":{"controllers/MeetingRoomController.html":{},"controllers/StatisticController.html":{}}}],["vo/refresh",{"_index":1003,"title":{},"body":{"controllers/UserController.html":{}}}],["vo/user",{"_index":828,"title":{},"body":{"controllers/StatisticController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["void",{"_index":404,"title":{},"body":{"classes/CustomExceptionFilter.html":{},"classes/UnloginFilter.html":{}}}],["watch",{"_index":1331,"title":{},"body":{"index.html":{}}}],["website",{"_index":1363,"title":{},"body":{"index.html":{}}}],["where('b.starttime",{"_index":855,"title":{},"body":{"injectables/StatisticService.html":{}}}],["xxx",{"_index":938,"title":{},"body":{"controllers/UserController.html":{}}}],["yes",{"_index":785,"title":{},"body":{"injectables/RedisService.html":{},"classes/UnLoginException.html":{}}}],["you'd",{"_index":1352,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EmailModule.html":{},"modules/MeetingRoomModule.html":{},"modules/RedisModule.html":{},"modules/StatisticModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nBookingModule\n\nBookingModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBookingModule->AppModule\n\n\n\n\n\nEmailModule\n\nEmailModule\n\nAppModule -->\n\nEmailModule->AppModule\n\n\n\n\n\nMeetingRoomModule\n\nMeetingRoomModule\n\nAppModule -->\n\nMeetingRoomModule->AppModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nAppModule -->\n\nRedisModule->AppModule\n\n\n\n\n\nStatisticModule\n\nStatisticModule\n\nAppModule -->\n\nStatisticModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BookingModule\n                        \n                        \n                            EmailModule\n                        \n                        \n                            MeetingRoomModule\n                        \n                        \n                            RedisModule\n                        \n                        \n                            StatisticModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserModule } from './user/user.module';\nimport { User } from './user/entities/user.entity';\nimport { Role } from './user/entities/role.entity';\nimport { Permission } from './user/entities/permission.entity';\nimport { RedisModule } from './redis/redis.module';\nimport { EmailModule } from './email/email.module';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { APP_GUARD } from '@nestjs/core';\nimport { LoginGuard } from './login.guard';\nimport { PermissionGuard } from './permission.guard';\nimport { MeetingRoomModule } from './meeting-room/meeting-room.module';\nimport { MeetingRoom } from './meeting-room/entities/meeting-room.entity';\nimport { BookingModule } from './booking/booking.module';\nimport { Booking } from './booking/entity/booking.entity';\nimport { StatisticModule } from './statistic/statistic.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: `src/.${process.env.NODE_ENV}.env`,\n    }),\n    TypeOrmModule.forRootAsync({\n      useFactory(configService: ConfigService) {\n        return {\n          type: 'mysql',\n          host: configService.get('mysql_server_host'),\n          port: configService.get('mysql_server_port'),\n          username: configService.get('mysql_server_username'),\n          password: configService.get('mysql_server_password'),\n          database: configService.get('mysql_server_database'),\n          entities: [User, Role, Permission, MeetingRoom, Booking],\n          synchronize: true,\n          logging: true,\n          poolSize: 10,\n          connectorPackage: 'mysql2',\n          extra: {\n            authPlugin: 'sha256_password',\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n    UserModule,\n    RedisModule,\n    EmailModule,\n    MeetingRoomModule,\n    BookingModule,\n    StatisticModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    // $ 注册顺序存在有先后顺序,在使用阶段的装饰器没有顺序关系\n    {\n      provide: APP_GUARD,\n      useClass: LoginGuard,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: PermissionGuard,\n    },\n  ],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Booking.html":{"url":"entities/Booking.html","title":"entity - Booking","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Booking\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/booking/entity/booking.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createTime\n                            \n                            \n                                    \n                                endTime\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                notes\n                            \n                            \n                                    \n                                room\n                            \n                            \n                                    \n                                startTime\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updateTime\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({comment: '创建时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/entity/booking.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '会议结束时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/entity/booking.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/entity/booking.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 100, comment: '备注', default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/entity/booking.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        room\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MeetingRoom\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/entity/booking.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '会议开始时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/entity/booking.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BOOKING_STATUE\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 20, comment: '状态(申请中、审批通过、审批驳回、已解除)', default: '申请中'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/entity/booking.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({comment: '更新时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/entity/booking.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/entity/booking.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { MeetingRoom } from 'src/meeting-room/entities/meeting-room.entity';\nimport { User } from 'src/user/entities/user.entity';\n\nexport enum BOOKING_STATUE {\n  APPLYING = '申请中',\n  APPROVED = '审批通过',\n  APPROVED_REJECTED = '审批驳回',\n  DISMISSED = '已解除',\n}\n\n@Entity()\nexport class Booking {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    comment: '会议开始时间',\n  })\n  startTime: Date;\n\n  @Column({\n    comment: '会议结束时间',\n  })\n  endTime: Date;\n\n  @Column({\n    length: 20,\n    comment: '状态(申请中、审批通过、审批驳回、已解除)',\n    default: '申请中',\n  })\n  status: BOOKING_STATUE;\n\n  @Column({\n    length: 100,\n    comment: '备注',\n    default: '',\n  })\n  notes: string;\n\n  // 预定列表多对一。 一个用户申请多个预约\n  @ManyToOne(() => User)\n  user: User;\n\n  @ManyToOne(() => MeetingRoom)\n  room: MeetingRoom;\n\n  @CreateDateColumn({\n    comment: '创建时间',\n  })\n  createTime: Date;\n\n  @UpdateDateColumn({\n    comment: '更新时间',\n  })\n  updateTime: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BookingController.html":{"url":"controllers/BookingController.html","title":"controller - BookingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BookingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/booking/booking.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                booking\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                apply\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                list\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                reject\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                unbind\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                urge\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        apply\n                        \n                    \n                \n            \n            \n                \n                        \n                    apply(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiParam({name: 'id', type: Number, description: '会议室ID'})@ApiResponse({status: undefined, type: String, description: undefined})@RequireLogin()@Get('apply/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/booking/booking.controller.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                        \n                    list(pageNo: number, pageSize: number, username: string, meetingRoomName: string, meetingRoomPosition: string, bookingTimeRangeStart: number, bookingTimeRangeEnd: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiQuery({name: 'pageNo', type: Number, required: false})@ApiQuery({name: 'pageSize', type: Number, required: false})@ApiQuery({name: 'username', type: String, required: false})@ApiQuery({name: 'meetingRoomName', type: String, required: false})@ApiQuery({name: 'meetingRoomPosition', type: String, required: false})@ApiQuery({name: 'bookingTimeRangeStart', type: String, required: false})@ApiQuery({name: 'bookingTimeRangeEnd', type: String, required: false})@ApiResponse({type: BookingListVo})@RequireLogin()@Get('list')\n                \n            \n\n                    \n                        \n                            Defined in src/booking/booking.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pageNo\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                meetingRoomName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                meetingRoomPosition\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bookingTimeRangeStart\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bookingTimeRangeEnd\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        reject\n                        \n                    \n                \n            \n            \n                \n                        \n                    reject(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiParam({name: 'id', type: Number, description: '会议室ID'})@ApiResponse({status: undefined, type: String, description: undefined})@RequireLogin()@Get('reject/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/booking/booking.controller.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        unbind\n                        \n                    \n                \n            \n            \n                \n                        \n                    unbind(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiParam({name: 'id', type: Number, description: '会议室ID'})@ApiResponse({status: undefined, type: String, description: undefined})@RequireLogin()@Get('unbind/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/booking/booking.controller.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        urge\n                        \n                    \n                \n            \n            \n                \n                        \n                    urge(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiParam({name: 'id', type: Number, description: '会议室ID'})@ApiResponse({status: undefined, type: String, description: undefined})@RequireLogin()@Get('urge/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/booking/booking.controller.ts:163\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  DefaultValuePipe,\n  Get,\n  HttpStatus,\n  Param,\n  ParseIntPipe,\n  Query,\n} from '@nestjs/common';\nimport { BookingService } from './booking.service';\nimport { generateParseIntPipe } from 'src/utils';\nimport { BOOKING_STATUE } from './entity/booking.entity';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { RequireLogin } from 'src/custom.decorator';\nimport { BookingListVo } from './vo/booking-list.vo';\n\n@ApiTags('预约模块')\n@Controller('booking')\nexport class BookingController {\n  constructor(private readonly bookingService: BookingService) {}\n\n  @ApiBearerAuth()\n  @ApiQuery({\n    name: 'pageNo',\n    type: Number,\n    required: false,\n  })\n  @ApiQuery({\n    name: 'pageSize',\n    type: Number,\n    required: false,\n  })\n  @ApiQuery({\n    name: 'username',\n    type: String,\n    required: false,\n  })\n  @ApiQuery({\n    name: 'meetingRoomName',\n    type: String,\n    required: false,\n  })\n  @ApiQuery({\n    name: 'meetingRoomPosition',\n    type: String,\n    required: false,\n  })\n  @ApiQuery({\n    name: 'bookingTimeRangeStart',\n    type: String,\n    required: false,\n  })\n  @ApiQuery({\n    name: 'bookingTimeRangeEnd',\n    type: String,\n    required: false,\n  })\n  @ApiResponse({\n    type: BookingListVo,\n  })\n  @RequireLogin()\n  @Get('list')\n  async list(\n    @Query('pageNo', new DefaultValuePipe(1), generateParseIntPipe('pageNo'))\n    pageNo: number,\n    @Query(\n      'pageSize',\n      new DefaultValuePipe(2),\n      generateParseIntPipe('pageSize'),\n    )\n    pageSize: number,\n    @Query('username') username: string,\n    @Query('meetingRoomName') meetingRoomName: string,\n    @Query('meetingRoomPosition') meetingRoomPosition: string,\n    @Query('bookingTimeRangeStart') bookingTimeRangeStart: number,\n    @Query('bookingTimeRangeEnd') bookingTimeRangeEnd: number,\n  ) {\n    return await this.bookingService.list(\n      pageNo,\n      pageSize,\n      username,\n      meetingRoomName,\n      meetingRoomPosition,\n      bookingTimeRangeStart,\n      bookingTimeRangeEnd,\n    );\n  }\n\n  @ApiBearerAuth()\n  @ApiParam({\n    name: 'id',\n    type: Number,\n    description: '会议室ID',\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: String,\n    description: BOOKING_STATUE.APPROVED,\n  })\n  @RequireLogin()\n  @Get('apply/:id')\n  async apply(@Param('id', ParseIntPipe) id: number) {\n    await this.bookingService.apply(id);\n    return BOOKING_STATUE.APPROVED;\n  }\n\n  @ApiBearerAuth()\n  @ApiParam({\n    name: 'id',\n    type: Number,\n    description: '会议室ID',\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: String,\n    description: BOOKING_STATUE.APPROVED_REJECTED,\n  })\n  @RequireLogin()\n  @Get('reject/:id')\n  async reject(@Param('id', ParseIntPipe) id: number) {\n    await this.bookingService.reject(id);\n    return BOOKING_STATUE.APPROVED_REJECTED;\n  }\n\n  @ApiBearerAuth()\n  @ApiParam({\n    name: 'id',\n    type: Number,\n    description: '会议室ID',\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: String,\n    description: BOOKING_STATUE.DISMISSED,\n  })\n  @RequireLogin()\n  @Get('unbind/:id')\n  async unbind(@Param('id', ParseIntPipe) id: number) {\n    await this.bookingService.unbind(id);\n    return BOOKING_STATUE.DISMISSED;\n  }\n\n  @ApiBearerAuth()\n  @ApiParam({\n    name: 'id',\n    type: Number,\n    description: '会议室ID',\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: String,\n    description: BOOKING_STATUE.DISMISSED,\n  })\n  @RequireLogin()\n  @Get('urge/:id')\n  async urge(@Param('id', ParseIntPipe) id: number) {\n    return await this.bookingService.urge(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookingListVo.html":{"url":"classes/BookingListVo.html","title":"class - BookingListVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookingListVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/booking/vo/booking-list.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                bookings\n                            \n                            \n                                    \n                                totalCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bookings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/vo/booking-list.vo.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/vo/booking-list.vo.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { BookingVo } from './booking.vo';\n\nexport class BookingListVo {\n  @ApiProperty({\n    type: [BookingVo],\n  })\n  bookings: Array;\n\n  @ApiProperty()\n  totalCount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookingModule.html":{"url":"modules/BookingModule.html","title":"module - BookingModule","body":"\n                   \n\n\n\n\n    Modules\n    BookingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BookingModule\n\n\n\ncluster_BookingModule_providers\n\n\n\n\nBookingService\n\nBookingService\n\n\n\nBookingModule\n\nBookingModule\n\nBookingModule -->\n\nBookingService->BookingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/booking/booking.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BookingService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BookingController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BookingService } from './booking.service';\nimport { BookingController } from './booking.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Booking } from './entity/booking.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Booking])],\n  controllers: [BookingController],\n  providers: [BookingService],\n})\nexport class BookingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookingService.html":{"url":"injectables/BookingService.html","title":"injectable - BookingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/booking/booking.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                emailService\n                            \n                            \n                                    \n                                    Private\n                                entityManager\n                            \n                            \n                                    \n                                    Private\n                                redisService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                apply\n                            \n                            \n                                    Async\n                                initData\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                reject\n                            \n                            \n                                    Async\n                                unbind\n                            \n                            \n                                    Async\n                                urge\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        apply\n                        \n                    \n                \n            \n            \n                \n                        \n                    apply(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/booking/booking.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initData\n                        \n                    \n                \n            \n            \n                \n                        \n                    initData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/booking/booking.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                        \n                    list(pageNo: number, pageSize: number, username: string, meetingRoomName: string, meetingRoomPosition: string, bookingTimeRangeStart: number, bookingTimeRangeEnd: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/booking/booking.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pageNo\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                meetingRoomName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                meetingRoomPosition\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bookingTimeRangeStart\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bookingTimeRangeEnd\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        reject\n                        \n                    \n                \n            \n            \n                \n                        \n                    reject(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/booking/booking.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        unbind\n                        \n                    \n                \n            \n            \n                \n                        \n                    unbind(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/booking/booking.service.ts:153\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        urge\n                        \n                    \n                \n            \n            \n                \n                        \n                    urge(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/booking/booking.service.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        emailService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EmailService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/booking.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        entityManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EntityManager\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectEntityManager()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/booking.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        redisService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RedisService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(RedisService)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/booking.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Inject, Injectable } from '@nestjs/common';\nimport { InjectEntityManager } from '@nestjs/typeorm';\nimport { MeetingRoom } from 'src/meeting-room/entities/meeting-room.entity';\nimport { User } from 'src/user/entities/user.entity';\nimport { Between, EntityManager, Like } from 'typeorm';\nimport { BOOKING_STATUE, Booking } from './entity/booking.entity';\nimport { RedisService } from 'src/redis/redis.service';\nimport { EmailService } from 'src/email/email.service';\n\n@Injectable()\nexport class BookingService {\n  @InjectEntityManager()\n  private entityManager: EntityManager;\n\n  @Inject(RedisService)\n  private redisService: RedisService;\n\n  @Inject()\n  private emailService: EmailService;\n\n  async initData() {\n    const user1 = await this.entityManager.findOneBy(User, {\n      id: 5,\n    });\n    const user2 = await this.entityManager.findOneBy(User, {\n      id: 6,\n    });\n\n    const room1 = await this.entityManager.findOneBy(MeetingRoom, {\n      id: 1,\n    });\n    const room2 = await this.entityManager.findOneBy(MeetingRoom, {\n      id: 2,\n    });\n\n    const booking1 = new Booking();\n    booking1.room = room1;\n    booking1.user = user1;\n    booking1.startTime = new Date();\n    booking1.endTime = new Date(Date.now() + 1000 * 60 * 60);\n\n    await this.entityManager.save(Booking, booking1);\n\n    const booking2 = new Booking();\n    booking2.room = room2;\n    booking2.user = user2;\n    booking2.startTime = new Date();\n    booking2.endTime = new Date(Date.now() + 1000 * 60 * 60);\n\n    await this.entityManager.save(Booking, booking2);\n\n    const booking3 = new Booking();\n    booking3.room = room1;\n    booking3.user = user2;\n    booking3.startTime = new Date();\n    booking3.endTime = new Date(Date.now() + 1000 * 60 * 60);\n\n    await this.entityManager.save(Booking, booking3);\n\n    const booking4 = new Booking();\n    booking4.room = room2;\n    booking4.user = user1;\n    booking4.startTime = new Date();\n    booking4.endTime = new Date(Date.now() + 1000 * 60 * 60);\n\n    await this.entityManager.save(Booking, booking4);\n  }\n\n  async list(\n    pageNo: number,\n    pageSize: number,\n    username: string,\n    meetingRoomName: string,\n    meetingRoomPosition: string,\n    bookingTimeRangeStart: number,\n    bookingTimeRangeEnd: number,\n  ) {\n    if (pageNo  = {};\n\n    if (username) {\n      condition.user = {\n        username: Like(`%${username}%`),\n      };\n    }\n\n    if (meetingRoomName) {\n      condition.room = {\n        name: Like(`%${meetingRoomName}%`),\n      };\n    }\n\n    if (meetingRoomPosition) {\n      if (!condition.room) {\n        condition.room = {};\n      }\n      condition.room.location = Like(`%${meetingRoomPosition}%`);\n    }\n\n    if (bookingTimeRangeStart) {\n      if (!bookingTimeRangeEnd) {\n        bookingTimeRangeEnd = bookingTimeRangeStart + 60 * 60 * 1000;\n      }\n      condition.startTime = Between(\n        new Date(bookingTimeRangeStart),\n        new Date(bookingTimeRangeEnd),\n      );\n    }\n\n    const [bookings, totalCount] = await this.entityManager.findAndCount(\n      Booking,\n      {\n        skip: skipCount,\n        take: pageSize,\n        where: condition,\n        relations: {\n          user: true,\n          room: true,\n        },\n      },\n    );\n\n    return {\n      bookings: bookings.map((item) => {\n        delete item.user.password;\n        return item;\n      }),\n      totalCount,\n    };\n  }\n\n  async apply(id: number) {\n    return this.entityManager.update(\n      Booking,\n      { id },\n      { status: BOOKING_STATUE.APPROVED },\n    );\n  }\n\n  async reject(id: number) {\n    return this.entityManager.update(\n      Booking,\n      { id },\n      { status: BOOKING_STATUE.APPROVED_REJECTED },\n    );\n  }\n\n  async unbind(id: number) {\n    return this.entityManager.update(\n      Booking,\n      { id },\n      { status: BOOKING_STATUE.DISMISSED },\n    );\n  }\n\n  async urge(id: number) {\n    // $ 半小时只能催办一次\n\n    const flag = await this.redisService.get(`urge_${id}`);\n\n    if (flag) {\n      return '半小时内只能催办一次，请耐心等待';\n    }\n\n    let email = await this.redisService.get('admin_email');\n    if (!email) {\n      const admin = await this.entityManager.findOne(User, {\n        select: {\n          email: true,\n        },\n        where: {\n          isAdmin: true,\n        },\n      });\n\n      email = admin.email;\n      this.redisService.set('admin_email', email);\n    }\n\n    this.emailService.sendMail({\n      to: email,\n      subject: '预定申请催办提醒',\n      // 这里最好附带一个处理申请链接\n      html: `id 为 ${id} 的预定申请正在等待审批`,\n    });\n\n    this.redisService.set('urge_' + id, 1, 60 * 30);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookingVo.html":{"url":"classes/BookingVo.html","title":"class - BookingVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookingVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/booking/vo/booking.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createTime\n                            \n                            \n                                    \n                                endTime\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                notes\n                            \n                            \n                                    \n                                room\n                            \n                            \n                                    \n                                startTime\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updateTime\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/vo/booking.vo.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/vo/booking.vo.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/vo/booking.vo.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/vo/booking.vo.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        room\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MeetingRoom\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/vo/booking.vo.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/vo/booking.vo.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/vo/booking.vo.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/vo/booking.vo.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/booking/vo/booking.vo.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { MeetingRoom } from 'src/meeting-room/entities/meeting-room.entity';\nimport { User } from 'src/user/entities/user.entity';\n\nexport class BookingVo {\n  @ApiProperty()\n  id: number;\n\n  @ApiProperty()\n  startTime: Date;\n\n  @ApiProperty()\n  endTime: Date;\n\n  @ApiProperty()\n  status: string;\n\n  @ApiProperty()\n  notes: string;\n\n  @ApiProperty()\n  user: User;\n\n  @ApiProperty()\n  room: MeetingRoom;\n\n  @ApiProperty()\n  createTime: Date;\n\n  @ApiProperty()\n  updateTime: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMeetingRoomDto.html":{"url":"classes/CreateMeetingRoomDto.html","title":"class - CreateMeetingRoomDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMeetingRoomDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meeting-room/dto/create-meeting-room.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                capacity\n                            \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                equipment\n                            \n                            \n                                    \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        capacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: '容量不能为空'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/dto/create-meeting-room.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: '描述不能为空'})@MaxLength(100, {message: '描述最长为 100 字符'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/dto/create-meeting-room.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        equipment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: '设备不能为空'})@MaxLength(50, {message: '设备最长为 50 字符'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/dto/create-meeting-room.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: '位置不能为空'})@MaxLength(50, {message: '位置最长为 50 字符'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/dto/create-meeting-room.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: '会议室名称不能为空'})@MaxLength(50, {message: '会议室名称最长为 10 字符'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/dto/create-meeting-room.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, MaxLength } from 'class-validator';\n\nexport class CreateMeetingRoomDto {\n  @ApiProperty()\n  @IsNotEmpty({\n    message: '会议室名称不能为空',\n  })\n  @MaxLength(50, {\n    message: '会议室名称最长为 10 字符',\n  })\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty({\n    message: '容量不能为空',\n  })\n  capacity: number;\n\n  @ApiProperty()\n  @IsNotEmpty({\n    message: '位置不能为空',\n  })\n  @MaxLength(50, {\n    message: '位置最长为 50 字符',\n  })\n  location: string;\n\n  @ApiProperty()\n  @IsNotEmpty({\n    message: '设备不能为空',\n  })\n  @MaxLength(50, {\n    message: '设备最长为 50 字符',\n  })\n  equipment: string;\n\n  @ApiProperty()\n  @IsNotEmpty({\n    message: '描述不能为空',\n  })\n  @MaxLength(100, {\n    message: '描述最长为 100 字符',\n  })\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomExceptionFilter.html":{"url":"classes/CustomExceptionFilter.html","title":"class - CustomExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/custom-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/custom-exception.filter.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\n@Catch(HttpException)\nexport class CustomExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const response = host.switchToHttp().getResponse();\n    response.statusCode = exception.getStatus();\n\n    // $ 错误存储的地方 (当ValidationPipe报错时，message是一个数组，错误的实际存储位置是在response字段里)\n    // 断点打印即可\n    const res = exception.getResponse() as { message: string[] };\n\n    response\n      .json({\n        code: exception.getStatus(),\n        message: 'fail',\n        data: res?.message?.join?.(',') || exception.message,\n      })\n      .end();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmailController.html":{"url":"controllers/EmailController.html","title":"controller - EmailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/email.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                email\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                sendEmailCode\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateCaptcha\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                updatePasswordCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        sendEmailCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmailCode(address: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiQuery({name: 'address', type: String, description: '邮箱地址', required: true, example: '1376513637@qq.com'})@ApiResponse({status: undefined, description: '发送成功', type: String})@Get('register-captcha')\n                \n            \n\n                    \n                        \n                            Defined in src/email/email.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        updateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCaptcha(address: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiResponse({status: undefined, description: '发送成功', type: String})@RequireLogin()@Get('update/captcha')\n                \n            \n\n                    \n                        \n                            Defined in src/email/email.controller.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        updatePasswordCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePasswordCaptcha(address: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiQuery({name: 'address', type: String, description: '邮箱地址', required: true, example: '1376513637@qq.com'})@ApiResponse({status: undefined, description: '发送成功', type: String})@Get('update_password/captcha')\n                \n            \n\n                    \n                        \n                            Defined in src/email/email.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpStatus, Inject, Query } from '@nestjs/common';\nimport { EmailService } from './email.service';\nimport { RedisService } from 'src/redis/redis.service';\nimport { ApiBearerAuth, ApiQuery, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { RequireLogin, UserInfo } from 'src/custom.decorator';\n\n@ApiTags('邮箱管理模块')\n@Controller('email')\nexport class EmailController {\n  constructor(private readonly emailService: EmailService) { }\n\n  @Inject()\n  private redisService: RedisService;\n\n  @ApiQuery({\n    name: 'address',\n    type: String,\n    description: '邮箱地址',\n    required: true,\n    example: '1376513637@qq.com',\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: '发送成功',\n    type: String,\n  })\n  @Get('register-captcha')\n  async sendEmailCode(@Query('address') address: string) {\n    const code = Math.random().toString().slice(2, 8);\n    await this.redisService.set(`captcha_${address}`, code, 5 * 60);\n    await this.emailService.sendMail({\n      to: address,\n      subject: '登录验证码',\n      html: `你的验证码是 ${code} `,\n    });\n    return '发送成功';\n  }\n\n  @ApiQuery({\n    name: 'address',\n    type: String,\n    description: '邮箱地址',\n    required: true,\n    example: '1376513637@qq.com',\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: '发送成功',\n    type: String,\n  })\n  @Get('update_password/captcha')\n  async updatePasswordCaptcha(@Query('address') address: string) {\n    const code = Math.random().toString().slice(2, 8);\n    await this.redisService.set(\n      `update_password_captcha_${address}`,\n      code,\n      5 * 60,\n    );\n    await this.emailService.sendMail({\n      to: address,\n      subject: '更改密码验证码',\n      html: `你的验证码是 ${code} `,\n    });\n    return '发送成功';\n  }\n\n  @ApiBearerAuth()\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: '发送成功',\n    type: String,\n  })\n  @RequireLogin()\n  @Get('update/captcha')\n  async updateCaptcha(@UserInfo('email') address: string) {\n    const code = Math.random().toString().slice(2, 8);\n    await this.redisService.set(`update_user_captcha_${address}`, code, 5 * 60);\n    await this.emailService.sendMail({\n      to: address,\n      subject: '更改用户信息验证码',\n      html: `你的验证码是 ${code} `,\n    });\n    return '发送成功';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailModule.html":{"url":"modules/EmailModule.html","title":"module - EmailModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmailModule\n\n\n\ncluster_EmailModule_exports\n\n\n\ncluster_EmailModule_providers\n\n\n\n\nEmailService \n\nEmailService \n\n\n\nEmailModule\n\nEmailModule\n\nEmailService  -->\n\nEmailModule->EmailService \n\n\n\n\n\nEmailService\n\nEmailService\n\nEmailModule -->\n\nEmailService->EmailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/email/email.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EmailController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EmailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { EmailService } from './email.service';\nimport { EmailController } from './email.controller';\n\n@Global()\n@Module({\n  controllers: [EmailController],\n  providers: [EmailService],\n  exports: [EmailService],\n})\nexport class EmailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailService.html":{"url":"injectables/EmailService.html","title":"injectable - EmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/email.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/email/email.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMail(undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/email/email.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        transporter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Transporter\n\n                    \n                \n                    \n                        \n                                Defined in src/email/email.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { createTransport, Transporter } from 'nodemailer';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class EmailService {\n  transporter: Transporter;\n\n  constructor(private configService: ConfigService) {\n    this.transporter = createTransport({\n      host: this.configService.get('nodemailer_host'),\n      port: this.configService.get('nodemailer_port'),\n      secure: true,\n      auth: {\n        user: this.configService.get('nodemailer_auth_user'),\n        pass: this.configService.get('nodemailer_auth_pass'),\n      },\n    });\n  }\n\n  async sendMail({ to, subject, html }) {\n    await this.transporter.sendMail({\n      from: {\n        name: '系统邮件',\n        address: this.configService.get('nodemailer_auth_user'),\n      },\n      to,\n      subject,\n      html,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormatResponseInterceptor.html":{"url":"injectables/FormatResponseInterceptor.html","title":"injectable - FormatResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FormatResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/format-response.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/format-response.interceptor.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Observable, map } from 'rxjs';\nimport { Response } from 'express';\n\n@Injectable()\nexport class FormatResponseInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const response: Response = context.switchToHttp().getResponse();\n    return next.handle().pipe(\n      map((data) => {\n        return {\n          code: response.statusCode,\n          message: 'success',\n          data,\n        };\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InvokeRecordInterceptor.html":{"url":"injectables/InvokeRecordInterceptor.html","title":"injectable - InvokeRecordInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InvokeRecordInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/invoke-record.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/invoke-record.interceptor.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(InvokeRecordInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in src/invoke-record.interceptor.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n  Logger,\n} from '@nestjs/common';\nimport { Observable, tap } from 'rxjs';\nimport { Request, Response } from 'express';\n\n@Injectable()\nexport class InvokeRecordInterceptor implements NestInterceptor {\n  private readonly logger = new Logger(InvokeRecordInterceptor.name);\n\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    // $ 记录访问的ip、userAgent 、请求的controller、method、接口耗时、响应内容、当前登录的用户信息等\n    const request = context.switchToHttp().getRequest();\n    const response = context.switchToHttp().getResponse();\n\n    const userAgent = request.headers['user-agent'];\n\n    const { ip, method, path } = request;\n\n    this.logger.debug(\n      `${method} ${path} ${ip} ${userAgent}: ${context.getClass().name} ${\n        context.getHandler().name\n      } invoked...`,\n    );\n\n    this.logger.debug(\n      `user: ${request.user?.userId}, ${request.user?.username}`,\n    );\n\n    const now = Date.now();\n\n    return next.handle().pipe(\n      tap((data) => {\n        this.logger.debug(\n          `${method} ${path} ${ip} ${userAgent}: ${response.statusCode}: ${\n            Date.now() - now\n          }ms`,\n        );\n        this.logger.debug(`Response: ${JSON.stringify(data)}`);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtUserData.html":{"url":"interfaces/JwtUserData.html","title":"interface - JwtUserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtUserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:         Permission[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Permission[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport { Permission } from './user/entities/permission.entity';\n\ninterface JwtUserData {\n  userId: number;\n  username: string;\n  email: string;\n  roles: string[];\n  permissions: Permission[];\n}\n\ndeclare module 'express' {\n  interface Request {\n    user: JwtUserData;\n  }\n}\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n  @Inject(Reflector)\n  private reflector: Reflector;\n\n  @Inject(JwtService)\n  private jwtService: JwtService;\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request: Request = context.switchToHttp().getRequest();\n    // 获取到class和fn注册的元数据\n    const requireLogin = this.reflector.getAllAndOverride('require-login', [\n      context.getClass(),\n      context.getHandler(),\n    ]);\n\n    if (!requireLogin) {\n      return true;\n    }\n\n    // 判断头部\n    const authorization = request.headers.authorization;\n\n    if (!authorization) {\n      throw new UnauthorizedException('用户未登录');\n    }\n\n    try {\n      const [, token] = authorization.split(' ');\n      const data = await this.jwtService.verify(token);\n\n      request.user = {\n        userId: data.userId,\n        username: data.username,\n        email: data.email,\n        roles: data.roles,\n        permissions: data.permissions,\n      };\n      return true;\n    } catch (error) {\n      throw new UnauthorizedException('token 失效，请重新登录');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoginGuard.html":{"url":"guards/LoginGuard.html","title":"guard - LoginGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoginGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/login.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                jwtService\n                            \n                            \n                                    \n                                    Private\n                                reflector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/login.guard.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport { Permission } from './user/entities/permission.entity';\n\ninterface JwtUserData {\n  userId: number;\n  username: string;\n  email: string;\n  roles: string[];\n  permissions: Permission[];\n}\n\ndeclare module 'express' {\n  interface Request {\n    user: JwtUserData;\n  }\n}\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n  @Inject(Reflector)\n  private reflector: Reflector;\n\n  @Inject(JwtService)\n  private jwtService: JwtService;\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request: Request = context.switchToHttp().getRequest();\n    // 获取到class和fn注册的元数据\n    const requireLogin = this.reflector.getAllAndOverride('require-login', [\n      context.getClass(),\n      context.getHandler(),\n    ]);\n\n    if (!requireLogin) {\n      return true;\n    }\n\n    // 判断头部\n    const authorization = request.headers.authorization;\n\n    if (!authorization) {\n      throw new UnauthorizedException('用户未登录');\n    }\n\n    try {\n      const [, token] = authorization.split(' ');\n      const data = await this.jwtService.verify(token);\n\n      request.user = {\n        userId: data.userId,\n        username: data.username,\n        email: data.email,\n        roles: data.roles,\n        permissions: data.permissions,\n      };\n      return true;\n    } catch (error) {\n      throw new UnauthorizedException('token 失效，请重新登录');\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/login-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '密码不能为空'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/login-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '用户名不能为空'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/login-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class LoginUserDto {\n  @IsNotEmpty({\n    message: '用户名不能为空',\n  })\n  @ApiProperty()\n  username: string;\n\n  @IsNotEmpty({\n    message: '密码不能为空',\n  })\n  @ApiProperty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserVo.html":{"url":"classes/LoginUserVo.html","title":"class - LoginUserVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/vo/login-user.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                userInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/login-user.vo.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/login-user.vo.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/login-user.vo.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Permission } from '../entities/permission.entity';\n\nexport class UserInfo {\n  @ApiProperty()\n  id: number;\n\n  @ApiProperty({ example: 'akclown' })\n  username: string;\n\n  @ApiProperty({ example: '角落里' })\n  nickName: string;\n\n  @ApiProperty({ example: '1376513637@qq.com' })\n  email: string;\n\n  @ApiProperty({ example: 'akclown.jpg' })\n  headPic: string;\n\n  @ApiProperty({ example: '12345678910' })\n  phoneNumber: string;\n\n  @ApiProperty()\n  isFrozen: boolean;\n\n  @ApiProperty()\n  isAdmin: boolean;\n\n  @ApiProperty()\n  createTime: number;\n\n  @ApiProperty({ example: ['管理员'] })\n  roles: string[];\n\n  @ApiProperty({\n    type: [Permission],\n  })\n  permissions: Permission[];\n}\n\nexport class LoginUserVo {\n  @ApiProperty()\n  userInfo: UserInfo;\n\n  @ApiProperty()\n  accessToken: string;\n\n  @ApiProperty()\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MeetingRoom.html":{"url":"entities/MeetingRoom.html","title":"entity - MeetingRoom","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MeetingRoom\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meeting-room/entities/meeting-room.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                capacity\n                            \n                            \n                                    \n                                    \n                                createTime\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                equipment\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                isBooked\n                            \n                            \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                updateTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        capacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({comment: '会议室容量'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/entities/meeting-room.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@CreateDateColumn({comment: '创建时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/entities/meeting-room.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({length: 100, comment: '描述', default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/entities/meeting-room.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        equipment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({length: 50, comment: '设备', default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/entities/meeting-room.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@PrimaryGeneratedColumn({comment: '会议室ID'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/entities/meeting-room.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isBooked\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({comment: '是否被预订', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/entities/meeting-room.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({length: 50, comment: '会议室位置'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/entities/meeting-room.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({length: 50, comment: '会议室名字'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/entities/meeting-room.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@UpdateDateColumn({comment: '更新时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/entities/meeting-room.entity.ts:71\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class MeetingRoom {\n  @ApiProperty()\n  @PrimaryGeneratedColumn({\n    comment: '会议室ID',\n  })\n  id: number;\n\n  @ApiProperty()\n  @Column({\n    length: 50,\n    comment: '会议室名字',\n  })\n  name: string;\n\n  @ApiProperty()\n  @Column({\n    comment: '会议室容量',\n  })\n  capacity: number;\n\n  @ApiProperty()\n  @Column({\n    length: 50,\n    comment: '会议室位置',\n  })\n  location: string;\n\n  @ApiProperty()\n  @Column({\n    length: 50,\n    comment: '设备',\n    default: '',\n  })\n  equipment: string;\n\n  @ApiProperty()\n  @Column({\n    length: 100,\n    comment: '描述',\n    default: '',\n  })\n  description: string;\n\n  @ApiProperty()\n  @Column({\n    comment: '是否被预订',\n    default: false,\n  })\n  isBooked: boolean;\n\n  @ApiProperty()\n  @CreateDateColumn({\n    comment: '创建时间',\n  })\n  createTime: Date;\n\n  @ApiProperty()\n  @UpdateDateColumn({\n    comment: '更新时间',\n  })\n  updateTime: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MeetingRoomController.html":{"url":"controllers/MeetingRoomController.html","title":"controller - MeetingRoomController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MeetingRoomController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meeting-room/meeting-room.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                meeting-room\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findById\n                            \n                            \n                                    \n                                    Async\n                                initData\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                list\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(meetingRoomDto: CreateMeetingRoomDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiBody({type: CreateMeetingRoomDto})@ApiResponse({status: undefined, description: '会议室名称已存在', type: String})@ApiResponse({status: undefined, description: '新增成功', type: String})@RequireLogin()@Post('create')\n                \n            \n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.controller.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meetingRoomDto\n                                            \n                                                            CreateMeetingRoomDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiParam({name: 'id', type: Number, description: '会议室ID'})@ApiResponse({status: undefined, type: String, description: '删除成功'})@RequireLogin()@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.controller.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiParam({name: 'id', type: Number, description: '会议室ID'})@ApiResponse({status: undefined, description: '会议item', type: MeetingRoomVo})@RequireLogin()@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.controller.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        initData\n                        \n                    \n                \n            \n            \n                \n                        \n                    initData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('init-data')\n                \n            \n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                        \n                    list(pageNo: number, pageSize: number, name: string, capacity: number, equipment: string, location: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiQuery({name: 'pageNo', type: Number, required: false})@ApiQuery({name: 'pageSize', type: Number, required: false})@ApiQuery({name: 'name', type: String, required: false})@ApiQuery({name: 'capacity', type: String, required: false})@ApiQuery({name: 'equipment', type: String, required: false})@ApiResponse({type: MeetingRoomListVo})@RequireLogin()@Get('list')\n                \n            \n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.controller.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pageNo\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                capacity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                equipment\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                location\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(meetingRoomDto: UpdateMeetingRoomDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiBody({type: UpdateMeetingRoomDto})@ApiResponse({status: undefined, description: '会议室不存在', type: String})@ApiResponse({status: undefined, description: '更新成功', type: String})@RequireLogin()@Put('update')\n                \n            \n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.controller.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meetingRoomDto\n                                            \n                                                            UpdateMeetingRoomDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  DefaultValuePipe,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Post,\n  Put,\n  Query,\n} from '@nestjs/common';\nimport { MeetingRoomService } from './meeting-room.service';\nimport { generateParseIntPipe } from 'src/utils';\nimport { CreateMeetingRoomDto } from './dto/create-meeting-room.dto';\nimport { UpdateMeetingRoomDto } from './dto/update-meeting-room.dto';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { RequireLogin } from 'src/custom.decorator';\nimport { MeetingRoomVo } from './vo/meeting-room.vo';\nimport { MeetingRoomListVo } from './vo/meeting-room-list.vo';\n\n@ApiTags('会议室模块')\n@Controller('meeting-room')\nexport class MeetingRoomController {\n  constructor(private readonly meetingRoomService: MeetingRoomService) {}\n\n  @Get('init-data')\n  async initData() {\n    // !!! 生成环境不会这么去初始化数据\n    this.meetingRoomService.initData();\n  }\n\n  @ApiBearerAuth()\n  @ApiQuery({\n    name: 'pageNo',\n    type: Number,\n    required: false,\n  })\n  @ApiQuery({\n    name: 'pageSize',\n    type: Number,\n    required: false,\n  })\n  @ApiQuery({\n    name: 'name',\n    type: String,\n    required: false,\n  })\n  @ApiQuery({\n    name: 'capacity',\n    type: String,\n    required: false,\n  })\n  @ApiQuery({\n    name: 'equipment',\n    type: String,\n    required: false,\n  })\n  @ApiResponse({\n    type: MeetingRoomListVo,\n  })\n  @RequireLogin()\n  @Get('list')\n  async list(\n    @Query('pageNo', new DefaultValuePipe(1), generateParseIntPipe('pageNo'))\n    pageNo: number,\n    @Query(\n      'pageSize',\n      new DefaultValuePipe(2),\n      generateParseIntPipe('pageSize'),\n    )\n    pageSize: number,\n    @Query('name') name: string,\n    @Query('capacity') capacity: number,\n    @Query('equipment') equipment: string,\n    @Query('location') location: string,\n  ) {\n    return await this.meetingRoomService.list(\n      pageNo,\n      pageSize,\n      name,\n      capacity,\n      equipment,\n      location,\n    );\n  }\n\n  @ApiBearerAuth()\n  @ApiBody({\n    type: CreateMeetingRoomDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: '会议室名称已存在',\n    type: String,\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: '新增成功',\n    type: String,\n  })\n  @RequireLogin()\n  @Post('create')\n  async create(@Body() meetingRoomDto: CreateMeetingRoomDto) {\n    await this.meetingRoomService.create(meetingRoomDto);\n    return '新增成功';\n  }\n\n  @ApiBearerAuth()\n  @ApiBody({\n    type: UpdateMeetingRoomDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: '会议室不存在',\n    type: String,\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: '更新成功',\n    type: String,\n  })\n  @RequireLogin()\n  @Put('update')\n  async update(@Body() meetingRoomDto: UpdateMeetingRoomDto) {\n    await this.meetingRoomService.update(meetingRoomDto);\n    return '更新成功';\n  }\n\n  @ApiBearerAuth()\n  @ApiParam({\n    name: 'id',\n    type: Number,\n    description: '会议室ID',\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: '会议item',\n    type: MeetingRoomVo,\n  })\n  @RequireLogin()\n  @Get(':id')\n  async findById(@Param('id') id: number) {\n    return await this.meetingRoomService.findById(id);\n  }\n\n  @ApiBearerAuth()\n  @ApiParam({\n    name: 'id',\n    type: Number,\n    description: '会议室ID',\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: String,\n    description: '删除成功',\n  })\n  @RequireLogin()\n  @Delete(':id')\n  async delete(@Param('id') id: number) {\n    await this.meetingRoomService.delete(id);\n    return '删除成功';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MeetingRoomListVo.html":{"url":"classes/MeetingRoomListVo.html","title":"class - MeetingRoomListVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MeetingRoomListVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meeting-room/vo/meeting-room-list.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                totalCount\n                            \n                            \n                                    \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/vo/meeting-room-list.vo.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/vo/meeting-room-list.vo.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { MeetingRoomVo } from './meeting-room.vo';\n\nexport class MeetingRoomListVo {\n  @ApiProperty({\n    type: [MeetingRoomVo],\n  })\n  users: Array;\n\n  @ApiProperty()\n  totalCount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MeetingRoomModule.html":{"url":"modules/MeetingRoomModule.html","title":"module - MeetingRoomModule","body":"\n                   \n\n\n\n\n    Modules\n    MeetingRoomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MeetingRoomModule\n\n\n\ncluster_MeetingRoomModule_providers\n\n\n\n\nMeetingRoomService\n\nMeetingRoomService\n\n\n\nMeetingRoomModule\n\nMeetingRoomModule\n\nMeetingRoomModule -->\n\nMeetingRoomService->MeetingRoomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/meeting-room/meeting-room.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MeetingRoomService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MeetingRoomController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MeetingRoomService } from './meeting-room.service';\nimport { MeetingRoomController } from './meeting-room.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { MeetingRoom } from './entities/meeting-room.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([MeetingRoom])],\n  controllers: [MeetingRoomController],\n  providers: [MeetingRoomService],\n})\nexport class MeetingRoomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeetingRoomService.html":{"url":"injectables/MeetingRoomService.html","title":"injectable - MeetingRoomService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MeetingRoomService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meeting-room/meeting-room.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                repository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                initData\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(meetingRoomDto: CreateMeetingRoomDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meetingRoomDto\n                                            \n                                                            CreateMeetingRoomDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initData\n                        \n                    \n                \n            \n            \n                \n                        \n                    initData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                        \n                    list(pageNo: number, pageSize: number, name: string, capacity: number, equipment: string, location: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pageNo\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                capacity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                equipment\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                location\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(meetingRoomDto: UpdateMeetingRoomDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/meeting-room/meeting-room.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meetingRoomDto\n                                            \n                                                            UpdateMeetingRoomDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        repository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(MeetingRoom)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/meeting-room.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Like, Repository } from 'typeorm';\nimport { MeetingRoom } from './entities/meeting-room.entity';\nimport { CreateMeetingRoomDto } from './dto/create-meeting-room.dto';\nimport { UpdateMeetingRoomDto } from './dto/update-meeting-room.dto';\n\n@Injectable()\nexport class MeetingRoomService {\n  @InjectRepository(MeetingRoom)\n  private repository: Repository;\n\n  async initData() {\n    const room1 = new MeetingRoom();\n    room1.name = '木星';\n    room1.capacity = 10;\n    room1.equipment = '白板';\n    room1.location = '一层西';\n\n    const room2 = new MeetingRoom();\n    room2.name = '金星';\n    room2.capacity = 5;\n    room2.equipment = '';\n    room2.location = '二层东';\n\n    const room3 = new MeetingRoom();\n    room3.name = '天王星';\n    room3.capacity = 30;\n    room3.equipment = '白板，电视';\n    room3.location = '三层东';\n\n    this.repository.insert([room1, room2, room3]);\n  }\n\n  async list(\n    pageNo: number,\n    pageSize: number,\n    name: string,\n    capacity: number,\n    equipment: string,\n    location: string,\n  ) {\n    if (pageNo  = {};\n\n    if (name) {\n      condition.name = Like(`%${name}%`);\n    }\n\n    if (capacity) {\n      condition.capacity = Like(`%${capacity}%`);\n    }\n\n    if (equipment) {\n      condition.equipment = Like(`%${equipment}%`);\n    }\n\n    if (location) {\n      condition.location = Like(`%${location}%`);\n    }\n\n    const [meetingRooms, totalCount] = await this.repository.findAndCount({\n      skip: skipCount,\n      take: pageSize,\n      where: condition,\n    });\n\n    return {\n      meetingRooms,\n      totalCount,\n    };\n  }\n\n  async create(meetingRoomDto: CreateMeetingRoomDto) {\n    const room = await this.repository.findOneBy({ name: meetingRoomDto.name });\n\n    if (room) {\n      throw new BadRequestException('会议室名称已存在');\n    }\n\n    return await this.repository.insert(meetingRoomDto);\n  }\n\n  async update(meetingRoomDto: UpdateMeetingRoomDto) {\n    const meetingRoom = await this.repository.findOneBy({\n      id: meetingRoomDto.id,\n    });\n\n    if (!meetingRoom) {\n      throw new BadRequestException('会议室不存在');\n    }\n\n    meetingRoom.capacity = meetingRoomDto.capacity;\n    meetingRoom.location = meetingRoomDto.location;\n    meetingRoom.name = meetingRoomDto.name;\n\n    if (meetingRoomDto.description) {\n      meetingRoom.description = meetingRoomDto.description;\n    }\n    if (meetingRoomDto.equipment) {\n      meetingRoom.equipment = meetingRoomDto.equipment;\n    }\n\n    return await this.repository.update(meetingRoom.id, meetingRoom);\n  }\n\n  async findById(id: number) {\n    return this.repository.findOneBy({ id });\n  }\n\n  async delete(id: number) {\n    return await this.repository.delete({ id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MeetingRoomUsedCountVo.html":{"url":"classes/MeetingRoomUsedCountVo.html","title":"class - MeetingRoomUsedCountVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MeetingRoomUsedCountVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statistic/vo/meeting-room-used-count.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                meetingRoomId\n                            \n                            \n                                    \n                                meetingRoomName\n                            \n                            \n                                    \n                                usedCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        meetingRoomId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/statistic/vo/meeting-room-used-count.vo.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        meetingRoomName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/statistic/vo/meeting-room-used-count.vo.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usedCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/statistic/vo/meeting-room-used-count.vo.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class MeetingRoomUsedCountVo {\n  @ApiProperty()\n  meetingRoomId: number;\n\n  @ApiProperty()\n  meetingRoomName: string;\n\n  @ApiProperty()\n  usedCount: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MeetingRoomVo.html":{"url":"classes/MeetingRoomVo.html","title":"class - MeetingRoomVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MeetingRoomVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meeting-room/vo/meeting-room.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                capacity\n                            \n                            \n                                    \n                                createTime\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                equipment\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                isBooked\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updateTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        capacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/vo/meeting-room.vo.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/vo/meeting-room.vo.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/vo/meeting-room.vo.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        equipment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/vo/meeting-room.vo.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/vo/meeting-room.vo.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isBooked\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/vo/meeting-room.vo.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/vo/meeting-room.vo.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/vo/meeting-room.vo.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/vo/meeting-room.vo.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class MeetingRoomVo {\n  @ApiProperty()\n  id: number;\n\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  capacity: number;\n\n  @ApiProperty()\n  location: string;\n\n  @ApiProperty()\n  equipment: string;\n\n  @ApiProperty()\n  description: string;\n\n  @ApiProperty()\n  isBooked: boolean;\n\n  @ApiProperty()\n  createTime: Date;\n\n  @ApiProperty()\n  updateTime: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Permission.html":{"url":"entities/Permission.html","title":"entity - Permission","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/permission.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 20, comment: '权限代码'})@ApiProperty({maxLength: 20})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/permission.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 100, comment: '权限描述'})@ApiProperty({maxLength: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/permission.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/permission.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Permission {\n  @PrimaryGeneratedColumn()\n  @ApiProperty()\n  id: number;\n\n  @Column({\n    length: 20,\n    comment: '权限代码',\n  })\n  @ApiProperty({\n    maxLength: 20,\n  })\n  code: string;\n\n  @Column({\n    length: 100,\n    comment: '权限描述',\n  })\n  @ApiProperty({\n    maxLength: 100,\n  })\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/PermissionGuard.html":{"url":"guards/PermissionGuard.html","title":"guard - PermissionGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    PermissionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/permission.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                reflector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permission.guard.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { Reflector } from '@nestjs/core';\n\n@Injectable()\nexport class PermissionGuard implements CanActivate {\n  @Inject(Reflector)\n  private reflector: Reflector;\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request: Request = context.switchToHttp().getRequest();\n    // 没有用户信息直接放行\n    if (!request.user) {\n      return true;\n    }\n\n    const permissions = request.user.permissions;\n\n    const requirePermissions = this.reflector.getAllAndOverride(\n      'require-permission',\n      [context.getClass(), context.getHandler()],\n    );\n\n    if (!requirePermissions) {\n      return true;\n    }\n\n    // $ 需要满足该接口的所有权限要求\n    for (let i = 0; i  item.code === curPermission);\n      if (!found) {\n        throw new UnauthorizedException('您没有访问接口权限');\n      }\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RedisModule.html":{"url":"modules/RedisModule.html","title":"module - RedisModule","body":"\n                   \n\n\n\n\n    Modules\n    RedisModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RedisModule\n\n\n\ncluster_RedisModule_providers\n\n\n\ncluster_RedisModule_exports\n\n\n\n\nRedisService \n\nRedisService \n\n\n\nRedisModule\n\nRedisModule\n\nRedisService  -->\n\nRedisModule->RedisService \n\n\n\n\n\nRedisService\n\nRedisService\n\nRedisModule -->\n\nRedisService->RedisModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/redis/redis.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RedisService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RedisService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { RedisService } from './redis.service';\nimport { createClient } from 'redis';\nimport { ConfigService } from '@nestjs/config';\n\n@Global()\n@Module({\n  providers: [\n    RedisService,\n    {\n      provide: 'REDIS_CLIENT',\n      async useFactory(configService: ConfigService) {\n        const client = createClient({\n          socket: {\n            host: configService.get('redis_server_host'),\n            port: configService.get('redis_server_port'),\n          },\n          // database是命名空间的改变，默认是0\n          database: 1,\n        });\n\n        await client.connect();\n        return client;\n      },\n      inject: [ConfigService],\n    },\n  ],\n  exports: [RedisService],\n})\nexport class RedisModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisService.html":{"url":"injectables/RedisService.html","title":"injectable - RedisService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RedisService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/redis/redis.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                redisClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/redis/redis.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: string | number, ttl?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/redis/redis.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ttl\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        redisClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RedisClientType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject('REDIS_CLIENT')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/redis/redis.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { RedisClientType } from 'redis';\n\n@Injectable()\nexport class RedisService {\n  @Inject('REDIS_CLIENT')\n  private redisClient: RedisClientType;\n\n  async get(key: string) {\n    return await this.redisClient.get(key);\n  }\n\n  async set(key: string, value: string | number, ttl?: number) {\n    await this.redisClient.set(key, value);\n\n    if (ttl) {\n      await this.redisClient.expire(key, ttl);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/register-user-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                captcha\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                nickName\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        captcha\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '验证码不能为空'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/register-user-dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: '不是合法的邮箱格式'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/register-user-dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        nickName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '昵称不能为空'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/register-user-dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(6, {message: '密码不能少于 6 位'})@ApiProperty({minLength: 6})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/register-user-dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '用户名不能为空'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/register-user-dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, MinLength } from 'class-validator';\n\nexport class RegisterUserDto {\n  @IsNotEmpty({\n    message: '用户名不能为空',\n  })\n  @ApiProperty()\n  username: string;\n\n  @IsNotEmpty({\n    message: '昵称不能为空',\n  })\n  @ApiProperty()\n  nickName: string;\n\n  @MinLength(6, {\n    message: '密码不能少于 6 位',\n  })\n  @ApiProperty({\n    minLength: 6,\n  })\n  password: string;\n\n  @IsEmail(\n    {},\n    {\n      message: '不是合法的邮箱格式',\n    },\n  )\n  @ApiProperty()\n  email: string;\n\n  @IsNotEmpty({\n    message: '验证码不能为空',\n  })\n  @ApiProperty()\n  captcha: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         JwtUserData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JwtUserData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport { Permission } from './user/entities/permission.entity';\n\ninterface JwtUserData {\n  userId: number;\n  username: string;\n  email: string;\n  roles: string[];\n  permissions: Permission[];\n}\n\ndeclare module 'express' {\n  interface Request {\n    user: JwtUserData;\n  }\n}\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n  @Inject(Reflector)\n  private reflector: Reflector;\n\n  @Inject(JwtService)\n  private jwtService: JwtService;\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request: Request = context.switchToHttp().getRequest();\n    // 获取到class和fn注册的元数据\n    const requireLogin = this.reflector.getAllAndOverride('require-login', [\n      context.getClass(),\n      context.getHandler(),\n    ]);\n\n    if (!requireLogin) {\n      return true;\n    }\n\n    // 判断头部\n    const authorization = request.headers.authorization;\n\n    if (!authorization) {\n      throw new UnauthorizedException('用户未登录');\n    }\n\n    try {\n      const [, token] = authorization.split(' ');\n      const data = await this.jwtService.verify(token);\n\n      request.user = {\n        userId: data.userId,\n        username: data.username,\n        email: data.email,\n        roles: data.roles,\n        permissions: data.permissions,\n      };\n      return true;\n    } catch (error) {\n      throw new UnauthorizedException('token 失效，请重新登录');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/role.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 20, comment: '角色名'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/role.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable({name: 'role_permission'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/role.entity.ts:25\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  JoinTable,\n  ManyToMany,\n} from 'typeorm';\nimport { Permission } from './permission.entity';\n\n@Entity()\nexport class Role {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 20,\n    comment: '角色名',\n  })\n  name: string;\n\n  @ManyToMany(() => Permission)\n  @JoinTable({\n    name: 'role_permission',\n  })\n  permissions: Permission[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StatisticController.html":{"url":"controllers/StatisticController.html","title":"controller - StatisticController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StatisticController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statistic/statistic.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                statistic\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                meetingRoomUsedCount\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                userBookingCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        meetingRoomUsedCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    meetingRoomUsedCount(startTime: string, endTime: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiQuery({name: 'startTime', type: String, description: '开始时间'})@ApiQuery({name: 'endTime', type: String, description: '结束时间'})@ApiResponse({status: undefined, type: MeetingRoomUsedCountVo, description: '会议室被使用次数数据'})@Get('meetingRoomUsedCount')\n                \n            \n\n                    \n                        \n                            Defined in src/statistic/statistic.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                startTime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endTime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        userBookingCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    userBookingCount(startTime: string, endTime: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiQuery({name: 'startTime', type: String, description: '开始时间'})@ApiQuery({name: 'endTime', type: String, description: '结束时间'})@ApiResponse({status: undefined, type: UserBookingCountVo, description: '用户预约次数数据'})@Get('userBookingCount')\n                \n            \n\n                    \n                        \n                            Defined in src/statistic/statistic.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                startTime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endTime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpStatus, Query } from '@nestjs/common';\nimport { StatisticService } from './statistic.service';\nimport { ApiQuery, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { UserBookingCountVo } from './vo/user-booking-count.vo';\nimport { MeetingRoomUsedCountVo } from './vo/meeting-room-used-count.vo';\n\n@ApiTags('统计模块')\n@Controller('statistic')\nexport class StatisticController {\n  constructor(private readonly statisticService: StatisticService) { }\n\n  @ApiQuery({\n    name: 'startTime',\n    type: String,\n    description: '开始时间',\n  })\n  @ApiQuery({\n    name: 'endTime',\n    type: String,\n    description: '结束时间',\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: UserBookingCountVo,\n    description: '用户预约次数数据',\n  })\n  @Get('userBookingCount')\n  async userBookingCount(\n    @Query('startTime') startTime: string,\n    @Query('endTime') endTime: string,\n  ) {\n    return await this.statisticService.userBookingCount(startTime, endTime);\n  }\n\n  @ApiQuery({\n    name: 'startTime',\n    type: String,\n    description: '开始时间',\n  })\n  @ApiQuery({\n    name: 'endTime',\n    type: String,\n    description: '结束时间',\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: MeetingRoomUsedCountVo,\n    description: '会议室被使用次数数据',\n  })\n  @Get('meetingRoomUsedCount')\n  async meetingRoomUsedCount(\n    @Query('startTime') startTime: string,\n    @Query('endTime') endTime: string,\n  ) {\n    return await this.statisticService.meetingRoomUsedCount(startTime, endTime);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatisticModule.html":{"url":"modules/StatisticModule.html","title":"module - StatisticModule","body":"\n                   \n\n\n\n\n    Modules\n    StatisticModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StatisticModule\n\n\n\ncluster_StatisticModule_providers\n\n\n\n\nStatisticService\n\nStatisticService\n\n\n\nStatisticModule\n\nStatisticModule\n\nStatisticModule -->\n\nStatisticService->StatisticModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/statistic/statistic.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StatisticService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StatisticController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StatisticService } from './statistic.service';\nimport { StatisticController } from './statistic.controller';\n\n@Module({\n  providers: [StatisticService],\n  controllers: [StatisticController]\n})\nexport class StatisticModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatisticService.html":{"url":"injectables/StatisticService.html","title":"injectable - StatisticService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StatisticService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statistic/statistic.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                entityManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                meetingRoomUsedCount\n                            \n                            \n                                    Async\n                                userBookingCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        meetingRoomUsedCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    meetingRoomUsedCount(startTime: string, endTime: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/statistic/statistic.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                startTime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endTime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        userBookingCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    userBookingCount(startTime: string, endTime: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/statistic/statistic.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                startTime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endTime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        entityManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EntityManager\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectEntityManager()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/statistic/statistic.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectEntityManager } from '@nestjs/typeorm';\nimport { Booking } from 'src/booking/entity/booking.entity';\nimport { MeetingRoom } from 'src/meeting-room/entities/meeting-room.entity';\nimport { User } from 'src/user/entities/user.entity';\nimport { EntityManager } from 'typeorm';\n\n@Injectable()\nexport class StatisticService {\n  @InjectEntityManager()\n  private entityManager: EntityManager;\n\n  async userBookingCount(startTime: string, endTime: string) {\n    const res = await this.entityManager\n      .createQueryBuilder(Booking, 'b')\n      .select('u.id', 'userId')\n      .addSelect('u.username', 'username')\n      .leftJoin(User, 'u', 'b.userId = u.id')\n      .addSelect('count(1)', 'bookingCount')\n      .where('b.startTime between :time1 and :time2', {\n        time1: startTime,\n        time2: endTime,\n      })\n      .addGroupBy('b.userId')\n      .getRawMany();\n    return res;\n  }\n\n  async meetingRoomUsedCount(startTime: string, endTime: string) {\n    const res = await this.entityManager\n      .createQueryBuilder(Booking, 'b')\n      .select('m.id', 'meetingRoomId')\n      .addSelect('m.name', 'meetingRoomName')\n      .leftJoin(MeetingRoom, 'm', 'b.roomId = m.id')\n      .addSelect('count(1)', 'usedCount')\n      .where('b.startTime between :time1 and :time2', {\n        time1: startTime,\n        time2: endTime,\n      })\n      .addGroupBy('b.roomId')\n      .getRawMany();\n    return res;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnLoginException.html":{"url":"classes/UnLoginException.html","title":"class - UnLoginException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnLoginException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/unlogin.filter.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in src/unlogin.filter.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/unlogin.filter.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\nexport class UnLoginException {\n  message: string;\n\n  constructor(message?: string) {\n    this.message = message;\n  }\n}\n\n@Catch(UnLoginException)\nexport class UnloginFilter implements ExceptionFilter {\n  catch(exception: UnLoginException, host: ArgumentsHost) {\n    const response = host.switchToHttp().getResponse();\n\n    response\n      .json({\n        code: HttpStatus.UNAUTHORIZED,\n        message: 'fail',\n        data: exception.message || '用户未登录',\n      })\n      .end();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnloginFilter.html":{"url":"classes/UnloginFilter.html","title":"class - UnloginFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnloginFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/unlogin.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: UnLoginException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/unlogin.filter.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            UnLoginException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\nexport class UnLoginException {\n  message: string;\n\n  constructor(message?: string) {\n    this.message = message;\n  }\n}\n\n@Catch(UnLoginException)\nexport class UnloginFilter implements ExceptionFilter {\n  catch(exception: UnLoginException, host: ArgumentsHost) {\n    const response = host.switchToHttp().getResponse();\n\n    response\n      .json({\n        code: HttpStatus.UNAUTHORIZED,\n        message: 'fail',\n        data: exception.message || '用户未登录',\n      })\n      .end();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMeetingRoomDto.html":{"url":"classes/UpdateMeetingRoomDto.html","title":"class - UpdateMeetingRoomDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMeetingRoomDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meeting-room/dto/update-meeting-room.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateMeetingRoomDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: '会议室ID不能为空'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting-room/dto/update-meeting-room.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\nimport { CreateMeetingRoomDto } from './create-meeting-room.dto';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateMeetingRoomDto extends PartialType(CreateMeetingRoomDto) {\n  @ApiProperty()\n  @IsNotEmpty({\n    message: '会议室ID不能为空',\n  })\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/udpate-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                captcha\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                headPic\n                            \n                            \n                                    \n                                nickName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        captcha\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '验证码不能为空'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/udpate-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '邮箱不能为空'})@IsEmail({}, {message: '不是合法的邮箱格式'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/udpate-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        headPic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/udpate-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nickName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/udpate-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class UpdateUserDto {\n  @ApiProperty({ required: false })\n  headPic: string;\n\n  @ApiProperty({ required: false })\n  nickName: string;\n\n  @IsNotEmpty({\n    message: '邮箱不能为空',\n  })\n  @IsEmail(\n    {},\n    {\n      message: '不是合法的邮箱格式',\n    },\n  )\n  @ApiProperty()\n  email: string;\n\n  @IsNotEmpty({\n    message: '验证码不能为空',\n  })\n  @ApiProperty()\n  captcha: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserPasswordDto.html":{"url":"classes/UpdateUserPasswordDto.html","title":"class - UpdateUserPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                captcha\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        captcha\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '验证码不能为空'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user-password.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '邮箱不能为空'})@IsEmail({}, {message: '不是合法的邮箱格式'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user-password.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '密码不能为空'})@MinLength(6, {message: '密码不能少于 6 位'})@ApiProperty({minLength: 6})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user-password.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '用户名不能为空'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user-password.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, MinLength } from 'class-validator';\n\nexport class UpdateUserPasswordDto {\n  @IsNotEmpty({\n    message: '用户名不能为空',\n  })\n  @ApiProperty()\n  username: string;\n\n  @IsNotEmpty({\n    message: '密码不能为空',\n  })\n  @MinLength(6, {\n    message: '密码不能少于 6 位',\n  })\n  @ApiProperty({\n    minLength: 6,\n  })\n  password: string;\n\n  @IsNotEmpty({\n    message: '邮箱不能为空',\n  })\n  @IsEmail(\n    {},\n    {\n      message: '不是合法的邮箱格式',\n    },\n  )\n  @ApiProperty()\n  email: string;\n\n  @IsNotEmpty({\n    message: '验证码不能为空',\n  })\n  @ApiProperty()\n  captcha: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createTime\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                headPic\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                isAdmin\n                            \n                            \n                                    \n                                isFrozen\n                            \n                            \n                                    \n                                nickName\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                updateTime\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({comment: '创建时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '邮箱', length: 50})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        headPic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '头像', length: 100, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({comment: '用户ID'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '是否是管理员', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isFrozen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '是否被冻结', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nickName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '昵称', length: 50})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '密码', length: 50})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '手机号', length: 20, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable({name: 'user_role'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({comment: '更新时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '用户名', length: 50, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  JoinTable,\n  ManyToMany,\n  BeforeInsert,\n} from 'typeorm';\nimport { Role } from './role.entity';\nimport { md5 } from 'src/utils';\n\n@Entity()\nexport class User {\n  @BeforeInsert()\n  encryptPwd() {\n    this.password = md5(this.password);\n  }\n\n  @PrimaryGeneratedColumn({\n    comment: '用户ID',\n  })\n  id: number;\n\n  @Column({\n    comment: '用户名',\n    length: 50,\n    unique: true,\n  })\n  username: string;\n\n  @Column({\n    comment: '密码',\n    length: 50,\n  })\n  password: string;\n\n  @Column({\n    comment: '昵称',\n    length: 50,\n  })\n  nickName: string;\n\n  @Column({\n    comment: '邮箱',\n    length: 50,\n  })\n  email: string;\n\n  @Column({\n    comment: '头像',\n    length: 100,\n    nullable: true,\n  })\n  headPic: string;\n\n  @Column({\n    comment: '手机号',\n    length: 20,\n    nullable: true,\n  })\n  phoneNumber: string;\n\n  @Column({\n    comment: '是否被冻结',\n    default: false,\n  })\n  isFrozen: boolean;\n\n  @Column({\n    comment: '是否是管理员',\n    default: false,\n  })\n  isAdmin: boolean;\n\n  @CreateDateColumn({\n    comment: '创建时间',\n  })\n  createTime: Date;\n\n  @UpdateDateColumn({\n    comment: '更新时间',\n  })\n  updateTime: Date;\n\n  @ManyToMany(() => Role)\n  @JoinTable({\n    name: 'user_role',\n  })\n  roles: Role[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserBookingCountVo.html":{"url":"classes/UserBookingCountVo.html","title":"class - UserBookingCountVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserBookingCountVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statistic/vo/user-booking-count.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                bookingCount\n                            \n                            \n                                    \n                                userId\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bookingCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/statistic/vo/user-booking-count.vo.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/statistic/vo/user-booking-count.vo.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/statistic/vo/user-booking-count.vo.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserBookingCountVo {\n  @ApiProperty()\n  userId: number;\n\n  @ApiProperty()\n  username: string;\n\n  @ApiProperty()\n  bookingCount: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                adminLogin\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                adminRefresh\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                freeze\n                            \n                            \n                                getAccessToken\n                            \n                            \n                                getRefreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                info\n                            \n                            \n                                    \n                                    Async\n                                initData\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                list\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                refresh\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                register\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updatePassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                uploadFile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                userLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        adminLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    adminLogin(loginUser: LoginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: LoginUserDto})@ApiResponse({status: undefined, description: '用户不存在/密码错误', type: String})@ApiResponse({status: undefined, description: '用户信息和token', type: LoginUserVo})@Post('admin/login')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginUser\n                                            \n                                                            LoginUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        adminRefresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    adminRefresh(refreshToken: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiQuery({name: 'refreshToken', description: '刷新 token', example: 'Bearer xxx', required: true, type: String})@ApiResponse({status: undefined, description: 'token已失效，请重新登录', type: String})@ApiResponse({status: undefined, description: '刷新成功', type: refreshTokenVo})@Get('admin/refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        freeze\n                        \n                    \n                \n            \n            \n                \n                        \n                    freeze(userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiQuery({name: 'userId', description: '用户 id', example: '1024', required: true, type: String})@ApiResponse({status: undefined, description: '冻结成功', type: String})@RequireLogin()@Get('freeze')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:265\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAccessToken\n                        \n                    \n                \n            \n            \n                \ngetAccessToken(user: Pick)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.controller.ts:377\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Pick\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRefreshToken\n                        \n                    \n                \n            \n            \n                \ngetRefreshToken(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.controller.ts:398\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        info\n                        \n                    \n                \n            \n            \n                \n                        \n                    info(userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiResponse({status: undefined, description: 'success', type: UserDetailVo})@Get('info')@RequireLogin()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:194\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        initData\n                        \n                    \n                \n            \n            \n                \n                        \n                    initData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('init-data')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                        \n                    list(pageNo: number, pageSize: number, username: string, nickName: string, email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiQuery({name: 'pageNo', description: '第几页', example: 1, type: String})@ApiQuery({name: 'pageSize', description: '每页多少条', example: 10, type: String})@ApiQuery({name: 'username', description: '用户名', example: 'akclown', type: String})@ApiQuery({name: 'nickName', description: '昵称', example: '角落里', type: String})@ApiQuery({name: 'email', description: '邮箱', example: '1376513637@qq.com', type: String})@ApiResponse({status: undefined, description: 'success', type: UserListVo})@RequireLogin()@Get('list')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:308\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pageNo\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                nickName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    refresh(refreshToken: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiQuery({name: 'refreshToken', description: '刷新 token', example: 'Bearer xxx', required: true, type: String})@ApiResponse({status: undefined, description: 'token已失效，请重新登录', type: String})@ApiResponse({status: undefined, description: '刷新成功', type: refreshTokenVo})@Get('refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerUser: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: RegisterUserDto})@ApiResponse({status: undefined, description: '验证码已失效/验证码不正确/用户已存在', type: String})@ApiResponse({status: undefined, description: '注册成功/失败', type: String})@Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUser\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(userId: number, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiBody({type: UpdateUserDto})@ApiResponse({status: undefined, description: '验证码已失效/验证码不正确', type: String})@ApiResponse({status: undefined, description: '用户信息修改成功/失败', type: String})@Post(['update', 'admin/update'])@RequireLogin()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:243\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePassword(passwordDto: UpdateUserPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: UpdateUserPasswordDto})@ApiResponse({status: undefined, description: '验证码已失效/验证码不正确/邮箱不正确', type: String})@ApiResponse({status: undefined, description: '密码修改成功/失败', type: String})@Post(['update_password', 'admin/update_password'])\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:223\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                passwordDto\n                                            \n                                                            UpdateUserPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiConsumes('multipart/form-data')@ApiBody({schema: undefined})@ApiResponse({status: undefined, description: '文件路径', type: String})@Post('upload')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:368\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        userLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    userLogin(loginUser: LoginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: LoginUserDto})@ApiResponse({status: undefined, description: '用户不存在/密码错误', type: String})@ApiResponse({status: undefined, description: '用户信息和token', type: LoginUserVo})@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginUser\n                                            \n                                                            LoginUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  Get,\n  Inject,\n  Query,\n  UnauthorizedException,\n  DefaultValuePipe,\n  HttpStatus,\n  UseInterceptors,\n  UploadedFile,\n  BadRequestException,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { RegisterUserDto } from './dto/register-user-dto';\nimport { LoginUserDto } from './dto/login-user.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { UserInfo as IUserInfo, LoginUserVo } from './vo/login-user.vo';\nimport { RequireLogin, UserInfo } from 'src/custom.decorator';\nimport { UserDetailVo } from './vo/user-info.vo';\nimport { UpdateUserPasswordDto } from './dto/update-user-password.dto';\nimport { UpdateUserDto } from './dto/udpate-user.dto';\nimport { generateParseIntPipe } from 'src/utils';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiConsumes,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { refreshTokenVo } from './vo/refresh-token.vo';\nimport { UserListVo } from './vo/user-list.vo';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport * as path from 'path';\nimport { storage } from 'src/my-file-storage';\n\n@ApiTags('用户管理模块')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) { }\n\n  @Inject(JwtService)\n  private jwtService: JwtService;\n\n  @Inject(ConfigService)\n  private configService: ConfigService;\n\n  @Get('init-data')\n  async initData() {\n    // !!! 生成环境不会这么去初始化数据\n    await this.userService.initData();\n    return '初始化数据成功';\n  }\n\n  @ApiBody({ type: RegisterUserDto })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: '验证码已失效/验证码不正确/用户已存在',\n    type: String,\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: '注册成功/失败',\n    type: String,\n  })\n  @Post('register')\n  async register(@Body() registerUser: RegisterUserDto) {\n    return await this.userService.register(registerUser);\n  }\n\n  @ApiBody({ type: LoginUserDto })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: '用户不存在/密码错误',\n    type: String,\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: '用户信息和token',\n    type: LoginUserVo,\n  })\n  @Post('login')\n  async userLogin(@Body() loginUser: LoginUserDto) {\n    const vo = await this.userService.login(loginUser, false);\n    vo.accessToken = this.getAccessToken(vo.userInfo);\n    vo.refreshToken = this.getRefreshToken(vo.userInfo.id);\n    return vo;\n  }\n\n  @ApiBody({ type: LoginUserDto })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: '用户不存在/密码错误',\n    type: String,\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: '用户信息和token',\n    type: LoginUserVo,\n  })\n  @Post('admin/login')\n  async adminLogin(@Body() loginUser: LoginUserDto) {\n    const vo = await this.userService.login(loginUser, true);\n    vo.accessToken = this.getAccessToken(vo.userInfo);\n\n    vo.refreshToken = this.getRefreshToken(vo.userInfo.id);\n    return vo;\n  }\n\n  @ApiQuery({\n    name: 'refreshToken',\n    description: '刷新 token',\n    example: 'Bearer xxx',\n    required: true,\n    type: String,\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'token已失效，请重新登录',\n    type: String,\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: '刷新成功',\n    type: refreshTokenVo,\n  })\n  @Get('refresh')\n  async refresh(@Query('refreshToken') refreshToken: string) {\n    try {\n      const data = this.jwtService.verify(refreshToken);\n      const user = await this.userService.findUserById(data.userId, false);\n\n      const accessToken = this.getAccessToken(user);\n\n      const newRefreshToken = this.getRefreshToken(user.id);\n\n      const vo = new refreshTokenVo();\n      vo.accessToken = accessToken;\n      vo.refreshToken = newRefreshToken;\n\n      return vo;\n    } catch (error) {\n      throw new UnauthorizedException('token已失效，请重新登录');\n    }\n  }\n\n  @ApiQuery({\n    name: 'refreshToken',\n    description: '刷新 token',\n    example: 'Bearer xxx',\n    required: true,\n    type: String,\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'token已失效，请重新登录',\n    type: String,\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: '刷新成功',\n    type: refreshTokenVo,\n  })\n  @Get('admin/refresh')\n  async adminRefresh(@Query('refreshToken') refreshToken: string) {\n    try {\n      const data = this.jwtService.verify(refreshToken);\n      const user = await this.userService.findUserById(data.userId, true);\n\n      const accessToken = this.getAccessToken(user);\n      const newRefreshToken = this.getRefreshToken(user.id);\n\n      const vo = new refreshTokenVo();\n      vo.accessToken = accessToken;\n      vo.refreshToken = newRefreshToken;\n\n      return vo;\n    } catch (error) {\n      throw new UnauthorizedException('token已失效，请重新登录');\n    }\n  }\n\n  @ApiBearerAuth()\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'success',\n    type: UserDetailVo,\n  })\n  @Get('info')\n  @RequireLogin()\n  async info(@UserInfo('userId') userId: number) {\n    const user = await this.userService.findUserDetailById(userId);\n    const vo = new UserDetailVo();\n    vo.id = user.id;\n    vo.email = user.email;\n    vo.username = user.username;\n    vo.headPic = user.headPic;\n    vo.phoneNumber = user.phoneNumber;\n    vo.nickName = user.nickName;\n    vo.createTime = user.createTime;\n    vo.isFrozen = user.isFrozen;\n\n    return vo;\n  }\n\n  @ApiBody({\n    type: UpdateUserPasswordDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: '验证码已失效/验证码不正确/邮箱不正确',\n    type: String,\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: '密码修改成功/失败',\n    type: String,\n  })\n  @Post(['update_password', 'admin/update_password'])\n  async updatePassword(@Body() passwordDto: UpdateUserPasswordDto) {\n    return await this.userService.updatePassword(passwordDto);\n  }\n\n  @ApiBearerAuth()\n  @ApiBody({\n    type: UpdateUserDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: '验证码已失效/验证码不正确',\n    type: String,\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: '用户信息修改成功/失败',\n    type: String,\n  })\n  @Post(['update', 'admin/update'])\n  @RequireLogin()\n  async update(\n    @UserInfo('userId') userId: number,\n    @Body() updateUserDto: UpdateUserDto,\n  ) {\n    return await this.userService.update(userId, updateUserDto);\n  }\n\n  @ApiBearerAuth()\n  @ApiQuery({\n    name: 'userId',\n    description: '用户 id',\n    example: '1024',\n    required: true,\n    type: String,\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: '冻结成功',\n    type: String,\n  })\n  @RequireLogin()\n  @Get('freeze')\n  async freeze(@Query('id') userId: number) {\n    await this.userService.freeze(userId);\n    return '冻结成功';\n  }\n\n  @ApiBearerAuth()\n  @ApiQuery({\n    name: 'pageNo',\n    description: '第几页',\n    example: 1,\n    type: String,\n  })\n  @ApiQuery({\n    name: 'pageSize',\n    description: '每页多少条',\n    example: 10,\n    type: String,\n  })\n  @ApiQuery({\n    name: 'username',\n    description: '用户名',\n    example: 'akclown',\n    type: String,\n  })\n  @ApiQuery({\n    name: 'nickName',\n    description: '昵称',\n    example: '角落里',\n    type: String,\n  })\n  @ApiQuery({\n    name: 'email',\n    description: '邮箱',\n    example: '1376513637@qq.com',\n    type: String,\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'success',\n    type: UserListVo,\n  })\n  @RequireLogin()\n  @Get('list')\n  async list(\n    @Query('pageNo', new DefaultValuePipe(1), generateParseIntPipe('pageNo'))\n    pageNo: number,\n    @Query(\n      'pageSize',\n      new DefaultValuePipe(2),\n      generateParseIntPipe('pageSize'),\n    )\n    pageSize: number,\n    @Query('username') username: string,\n    @Query('nickName') nickName: string,\n    @Query('email') email: string,\n  ) {\n    return await this.userService.findUsersByPage(\n      username,\n      nickName,\n      email,\n      pageNo,\n      pageSize,\n    );\n  }\n\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        file: {\n          type: 'string',\n          format: 'binary',\n        },\n      },\n    },\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: '文件路径',\n    type: String,\n  })\n  @Post('upload')\n  @UseInterceptors(\n    FileInterceptor('file', {\n      dest: 'uploads',\n      // 自定义存储，一般线上都是直接存入到文件系统里\n      storage: storage,\n      limits: {\n        fileSize: 1024 * 1024 * 3,\n      },\n      // $ 限制只能上传图片\n      fileFilter(req, file, callback) {\n        const extname = path.extname(file.originalname);\n        if (['.png', '.jpg', '.jpeg', '.gif'].includes(extname)) {\n          // 第一个参数为error，第二个参数为是否接收文件\n          callback(null, true);\n        } else {\n          callback(new BadRequestException('只能上传图片'), false);\n        }\n      },\n    }),\n  )\n  uploadFile(@UploadedFile() file: Express.Multer.File) {\n    console.log('file: ', file);\n    return file.path;\n  }\n\n  // *********************\n  // Create Token\n  // *********************\n\n  getAccessToken(\n    user: Pick,\n  ) {\n    return this.jwtService.sign(\n      {\n        userId: user.id,\n        username: user.username,\n        email: user.email,\n        roles: user.roles,\n        permissions: user.permissions,\n      },\n      {\n        expiresIn:\n          this.configService.get('jwt_access_token_expires_time') || '30m',\n      },\n    );\n  }\n\n  getRefreshToken(id: number) {\n    return this.jwtService.sign(\n      {\n        userId: id,\n      },\n      {\n        expiresIn:\n          this.configService.get('jwt_refresh_token_expires_time') || '7d',\n      },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDetailVo.html":{"url":"classes/UserDetailVo.html","title":"class - UserDetailVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDetailVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/vo/user-info.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createTime\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                headPic\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                isFrozen\n                            \n                            \n                                    \n                                nickName\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/user-info.vo.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1376513637@qq.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/user-info.vo.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        headPic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'akclown.png'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/user-info.vo.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/user-info.vo.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isFrozen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/user-info.vo.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nickName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '角落里'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/user-info.vo.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '12345678910'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/user-info.vo.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'akclown'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/user-info.vo.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class UserDetailVo {\n  @ApiProperty()\n  id: number;\n\n  @ApiProperty({ example: 'akclown' })\n  username: string;\n\n  @ApiProperty({ example: '角落里' })\n  nickName: string;\n\n  @ApiProperty({ example: '1376513637@qq.com' })\n  email: string;\n\n  @ApiProperty({ example: 'akclown.png' })\n  headPic: string;\n\n  @ApiProperty({ example: '12345678910' })\n  phoneNumber: string;\n\n  @ApiProperty({ example: false })\n  isFrozen: boolean;\n\n  @ApiProperty()\n  createTime: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfo.html":{"url":"classes/UserInfo.html","title":"class - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/vo/login-user.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createTime\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                headPic\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                isAdmin\n                            \n                            \n                                    \n                                isFrozen\n                            \n                            \n                                    \n                                nickName\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                roles\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/login-user.vo.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1376513637@qq.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/login-user.vo.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        headPic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'akclown.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/login-user.vo.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/login-user.vo.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/login-user.vo.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isFrozen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/login-user.vo.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nickName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '角落里'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/login-user.vo.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/login-user.vo.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '12345678910'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/login-user.vo.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/login-user.vo.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'akclown'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/login-user.vo.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Permission } from '../entities/permission.entity';\n\nexport class UserInfo {\n  @ApiProperty()\n  id: number;\n\n  @ApiProperty({ example: 'akclown' })\n  username: string;\n\n  @ApiProperty({ example: '角落里' })\n  nickName: string;\n\n  @ApiProperty({ example: '1376513637@qq.com' })\n  email: string;\n\n  @ApiProperty({ example: 'akclown.jpg' })\n  headPic: string;\n\n  @ApiProperty({ example: '12345678910' })\n  phoneNumber: string;\n\n  @ApiProperty()\n  isFrozen: boolean;\n\n  @ApiProperty()\n  isAdmin: boolean;\n\n  @ApiProperty()\n  createTime: number;\n\n  @ApiProperty({ example: ['管理员'] })\n  roles: string[];\n\n  @ApiProperty({\n    type: [Permission],\n  })\n  permissions: Permission[];\n}\n\nexport class LoginUserVo {\n  @ApiProperty()\n  userInfo: UserInfo;\n\n  @ApiProperty()\n  accessToken: string;\n\n  @ApiProperty()\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserListVo.html":{"url":"classes/UserListVo.html","title":"class - UserListVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserListVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/vo/user-list.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                totalCount\n                            \n                            \n                                    \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/user-list.vo.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/user-list.vo.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nclass User {\n  @ApiProperty()\n  id: number;\n\n  @ApiProperty()\n  username: string;\n\n  @ApiProperty()\n  nickName: string;\n\n  @ApiProperty()\n  email: string;\n\n  @ApiProperty()\n  phoneNumber: string;\n\n  @ApiProperty()\n  isFrozen: boolean;\n\n  @ApiProperty()\n  headPic: string;\n\n  @ApiProperty()\n  createTime: Date;\n}\n\nexport class UserListVo {\n  @ApiProperty({\n    type: [User],\n  })\n  users: User[];\n\n  @ApiProperty()\n  totalCount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { Role } from './entities/role.entity';\nimport { Permission } from './entities/permission.entity';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigService } from '@nestjs/config';\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User, Role, Permission]),\n    JwtModule.registerAsync({\n      global: true,\n      useFactory(configService: ConfigService) {\n        return {\n          secret: configService.get('jwt_secret'),\n          signOptions: {\n            // https://github.com/vercel/ms#examples 过期时间写法\n            expiresIn: '30m', // 默认 30 分钟\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                            \n                                    \n                                    Private\n                                permissionRepository\n                            \n                            \n                                    \n                                    Private\n                                redisService\n                            \n                            \n                                    \n                                    Private\n                                roleRepository\n                            \n                            \n                                    \n                                    Private\n                                userRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findUserById\n                            \n                            \n                                    Async\n                                findUserDetailById\n                            \n                            \n                                    Async\n                                findUsersByPage\n                            \n                            \n                                    Async\n                                freeze\n                            \n                            \n                                    Async\n                                initData\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserById(userId: number, isAdmin: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isAdmin\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserDetailById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserDetailById(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUsersByPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUsersByPage(username: string, nickName: string, email: string, pageNo: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:253\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                nickName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageNo\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        freeze\n                        \n                    \n                \n            \n            \n                \n                        \n                    freeze(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:249\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initData\n                        \n                    \n                \n            \n            \n                \n                        \n                    initData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginUserDto: LoginUserDto, isAdmin: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginUserDto\n                                            \n                                                            LoginUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isAdmin\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(user: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(userId: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:217\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePassword(passwordDto: UpdateUserPasswordDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                passwordDto\n                                            \n                                                            UpdateUserPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UserService.name)\n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        permissionRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(Permission)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        redisService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RedisService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(RedisService)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        roleRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(Role)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        userRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(User)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpException,\n  HttpStatus,\n  Inject,\n  Injectable,\n  Logger,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { RegisterUserDto } from './dto/register-user-dto';\nimport { RedisService } from 'src/redis/redis.service';\nimport { Like, Repository } from 'typeorm';\nimport { Permission } from './entities/permission.entity';\nimport { Role } from './entities/role.entity';\nimport { LoginUserDto } from './dto/login-user.dto';\nimport { md5 } from 'src/utils';\nimport { LoginUserVo } from './vo/login-user.vo';\nimport { UpdateUserPasswordDto } from './dto/update-user-password.dto';\nimport { UpdateUserDto } from './dto/udpate-user.dto';\nimport { UserListVo } from './vo/user-list.vo';\n\n@Injectable()\nexport class UserService {\n  private logger = new Logger(UserService.name);\n\n  @Inject(RedisService)\n  private redisService: RedisService;\n\n  @InjectRepository(User)\n  private userRepository: Repository;\n\n  @InjectRepository(Role)\n  private roleRepository: Repository;\n\n  @InjectRepository(Permission)\n  private permissionRepository: Repository;\n\n  async register(user: RegisterUserDto) {\n    const captcha = await this.redisService.get(`captcha_${user.email}`);\n\n    if (!captcha) {\n      throw new HttpException('验证码已失效', HttpStatus.BAD_REQUEST);\n    }\n\n    if (captcha !== user.captcha) {\n      throw new HttpException('验证码不正确', HttpStatus.BAD_REQUEST);\n    }\n\n    const foundUser = await this.userRepository.findOneBy({\n      username: user.username,\n    });\n\n    if (foundUser) {\n      throw new HttpException('用户已存在', HttpStatus.BAD_REQUEST);\n    }\n\n    const newUser = new User();\n    newUser.username = user.username;\n    newUser.email = user.email;\n    newUser.password = user.password;\n    newUser.nickName = user.nickName;\n\n    try {\n      await this.userRepository.save(newUser);\n      return '注册成功';\n    } catch (error) {\n      this.logger.error(error);\n      return '注册失败';\n    }\n  }\n\n  async initData() {\n    const user1 = new User();\n    user1.username = 'akclown';\n    user1.password = '123456';\n    user1.email = '1097986280@qq.com';\n    user1.isAdmin = true;\n    user1.nickName = 'akak';\n    user1.phoneNumber = '12345678910';\n\n    const user2 = new User();\n    user2.username = 'lisa';\n    user2.password = '456789';\n    user2.email = '1376513637@qq.com';\n    user2.nickName = 'lisa';\n\n    const role1 = new Role();\n    role1.name = '管理员';\n\n    const role2 = new Role();\n    role2.name = '普通用户';\n\n    const permission1 = new Permission();\n    permission1.code = 'ccc';\n    permission1.description = '访问 ccc 接口';\n\n    const permission2 = new Permission();\n    permission2.code = 'ddd';\n    permission2.description = '访问 ddd 接口';\n\n    user1.roles = [role1];\n    user2.roles = [role2];\n\n    role1.permissions = [permission1, permission2];\n    role2.permissions = [permission1];\n\n    await this.permissionRepository.save([permission1, permission2]);\n    await this.roleRepository.save([role1, role2]);\n    await this.userRepository.save([user1, user2]);\n  }\n\n  async login(loginUserDto: LoginUserDto, isAdmin: boolean) {\n    const user = await this.userRepository.findOne({\n      where: {\n        username: loginUserDto.username,\n        isAdmin,\n      },\n      relations: ['roles', 'roles.permissions'],\n    });\n\n    if (!user) {\n      throw new HttpException('用户不存在', HttpStatus.BAD_REQUEST);\n    }\n\n    if (user.password !== md5(loginUserDto.password)) {\n      throw new HttpException('密码错误', HttpStatus.BAD_REQUEST);\n    }\n\n    const vo = new LoginUserVo();\n    vo.userInfo = {\n      id: user.id,\n      username: user.username,\n      nickName: user.nickName,\n      email: user.email,\n      phoneNumber: user.phoneNumber,\n      headPic: user.headPic,\n      createTime: user.createTime.getTime(),\n      isFrozen: user.isFrozen,\n      isAdmin: user.isAdmin,\n      roles: user.roles.map((item) => item.name),\n      permissions: user.roles.reduce((arr, item) => {\n        item.permissions.forEach((permission) => {\n          if (arr.indexOf(permission) === -1) {\n            arr.push(permission);\n          }\n        });\n        return arr;\n      }, []),\n    };\n\n    return vo;\n  }\n\n  async findUserById(userId: number, isAdmin: boolean) {\n    const user = await this.userRepository.findOne({\n      where: { id: userId, isAdmin },\n      relations: ['roles', 'roles.permissions'],\n    });\n    return {\n      id: user.id,\n      username: user.username,\n      email: user.email,\n      roles: user.roles.map((item) => item.name),\n      permissions: user.roles.reduce((arr, item) => {\n        item.permissions.forEach((permission) => {\n          if (arr.indexOf(permission) === -1) {\n            arr.push(permission);\n          }\n        });\n        return arr;\n      }, []),\n    };\n  }\n\n  async findUserDetailById(userId: number) {\n    const user = await this.userRepository.findOne({\n      where: {\n        id: userId,\n      },\n    });\n\n    return user;\n  }\n\n  async updatePassword(passwordDto: UpdateUserPasswordDto) {\n    const captcha = await this.redisService.get(\n      `update_password_captcha_${passwordDto.email}`,\n    );\n\n    if (!captcha) {\n      throw new HttpException('验证码已失效', HttpStatus.BAD_REQUEST);\n    }\n\n    if (captcha !== passwordDto.captcha) {\n      throw new HttpException('验证码不正确', HttpStatus.BAD_REQUEST);\n    }\n\n    const foundUser = await this.userRepository.findOneBy({\n      username: passwordDto.username,\n    });\n\n    if (foundUser.email !== passwordDto.email) {\n      throw new HttpException('邮箱不正确', HttpStatus.BAD_REQUEST);\n    }\n\n    foundUser.password = md5(passwordDto.password);\n\n    try {\n      await this.userRepository.save(foundUser);\n      return '密码修改成功';\n    } catch (error) {\n      this.logger.error(error);\n      return '密码修改失败';\n    }\n  }\n\n  async update(userId: number, updateUserDto: UpdateUserDto) {\n    const captcha = await this.redisService.get(\n      `update_user_captcha_${updateUserDto.email}`,\n    );\n    if (!captcha) {\n      throw new HttpException('验证码已失效', HttpStatus.BAD_REQUEST);\n    }\n\n    if (captcha !== updateUserDto.captcha) {\n      throw new HttpException('验证码不正确', HttpStatus.BAD_REQUEST);\n    }\n\n    const foundUser = await this.userRepository.findOneBy({\n      id: userId,\n    });\n\n    if (updateUserDto.nickName) {\n      foundUser.nickName = updateUserDto.nickName;\n    }\n    if (updateUserDto.headPic) {\n      foundUser.headPic = updateUserDto.headPic;\n    }\n\n    try {\n      await this.userRepository.save(foundUser);\n      return '用户信息修改成功';\n    } catch (error) {\n      this.logger.error(error);\n      return '用户信息修改失败';\n    }\n  }\n\n  async freeze(userId: number) {\n    return await this.userRepository.update(userId, { isFrozen: true });\n  }\n\n  async findUsersByPage(\n    username: string,\n    nickName: string,\n    email: string,\n    pageNo: number,\n    pageSize: number,\n  ) {\n    // 计算出当前页码跳过多少条记录，取多少条记录就好了\n    const skipCount = (pageNo - 1) * pageSize;\n\n    // 搜索条件\n    const condition: Record = {};\n\n    if (username) {\n      condition.username = Like(`%${username}%`);\n    }\n\n    if (nickName) {\n      condition.nickName = Like(`%${nickName}%`);\n    }\n\n    if (email) {\n      condition.email = Like(`%${email}%`);\n    }\n\n    const [users, totalCount] = await this.userRepository.findAndCount({\n      select: [\n        'id',\n        'username',\n        'nickName',\n        'email',\n        'phoneNumber',\n        'isFrozen',\n        'headPic',\n        'createTime',\n      ],\n      skip: skipCount,\n      take: pageSize,\n      where: condition,\n    });\n\n    const vo = new UserListVo();\n    vo.users = users;\n    vo.totalCount = totalCount;\n\n    return vo;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                repl.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/booking/booking.controller.ts\n            \n            controller\n            BookingController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/booking/booking.service.ts\n            \n            injectable\n            BookingService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/booking/entity/booking.entity.ts\n            \n            entity\n            Booking\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/booking/vo/booking-list.vo.ts\n            \n            class\n            BookingListVo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/booking/vo/booking.vo.ts\n            \n            class\n            BookingVo\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/custom-exception.filter.ts\n            \n            class\n            CustomExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/custom.decorator.ts\n            \n            variable\n            RequireLogin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/custom.decorator.ts\n            \n            variable\n            RequirePermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/custom.decorator.ts\n            \n            variable\n            UserInfo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/email/email.controller.ts\n            \n            controller\n            EmailController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/email/email.service.ts\n            \n            injectable\n            EmailService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/format-response.interceptor.ts\n            \n            injectable\n            FormatResponseInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/invoke-record.interceptor.ts\n            \n            injectable\n            InvokeRecordInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/login.guard.ts\n            \n            interface\n            JwtUserData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/login.guard.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/login.guard.ts\n            \n            guard\n            LoginGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/meeting-room/dto/create-meeting-room.dto.ts\n            \n            class\n            CreateMeetingRoomDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/meeting-room/dto/update-meeting-room.dto.ts\n            \n            class\n            UpdateMeetingRoomDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/meeting-room/entities/meeting-room.entity.ts\n            \n            entity\n            MeetingRoom\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/meeting-room/meeting-room.controller.ts\n            \n            controller\n            MeetingRoomController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/meeting-room/meeting-room.service.ts\n            \n            injectable\n            MeetingRoomService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/meeting-room/vo/meeting-room-list.vo.ts\n            \n            class\n            MeetingRoomListVo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/meeting-room/vo/meeting-room.vo.ts\n            \n            class\n            MeetingRoomVo\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/my-file-storage.ts\n            \n            variable\n            storage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permission.guard.ts\n            \n            guard\n            PermissionGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/redis/redis.service.ts\n            \n            injectable\n            RedisService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/statistic/statistic.controller.ts\n            \n            controller\n            StatisticController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/statistic/statistic.service.ts\n            \n            injectable\n            StatisticService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/statistic/vo/meeting-room-used-count.vo.ts\n            \n            class\n            MeetingRoomUsedCountVo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/statistic/vo/user-booking-count.vo.ts\n            \n            class\n            UserBookingCountVo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/unlogin.filter.ts\n            \n            class\n            UnLoginException\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/unlogin.filter.ts\n            \n            class\n            UnloginFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/register-user-dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dto/udpate-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/dto/update-user-password.dto.ts\n            \n            class\n            UpdateUserPasswordDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/entities/permission.entity.ts\n            \n            entity\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/user/vo/login-user.vo.ts\n            \n            class\n            LoginUserVo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/vo/login-user.vo.ts\n            \n            class\n            UserInfo\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/user/vo/refresh-token.vo.ts\n            \n            class\n            refreshTokenVo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/vo/user-info.vo.ts\n            \n            class\n            UserDetailVo\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/user/vo/user-list.vo.ts\n            \n            class\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/user/vo/user-list.vo.ts\n            \n            class\n            UserListVo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            generateParseIntPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            function\n            md5\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.1.16\n        \n            @nestjs/typeorm : ^10.0.1\n        \n            @types/multer : ^1.4.11\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            mysql2 : ^3.6.5\n        \n            nodemailer : ^6.9.7\n        \n            redis : ^4.6.11\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BOOKING_STATUE   (src/.../booking.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/booking/entity/booking.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        BOOKING_STATUE\n                    \n                \n                        \n                            \n                                 APPLYING\n                            \n                        \n                        \n                            \n                                Value : 申请中\n                            \n                        \n                        \n                            \n                                 APPROVED\n                            \n                        \n                        \n                            \n                                Value : 审批通过\n                            \n                        \n                        \n                            \n                                 APPROVED_REJECTED\n                            \n                        \n                        \n                            \n                                Value : 审批驳回\n                            \n                        \n                        \n                            \n                                 DISMISSED\n                            \n                        \n                        \n                            \n                                Value : 已解除\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (repl.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            generateParseIntPipe   (src/.../utils.ts)\n                        \n                        \n                            md5   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    repl.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateParseIntPipe\n                        \n                    \n                \n            \n            \n                \ngenerateParseIntPipe(name)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        md5\n                        \n                    \n                \n            \n            \n                \nmd5(str)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ pnpm installRunning the app\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MeetingRoomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RedisModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatisticModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_BookingModule\n\n\n\ncluster_BookingModule_providers\n\n\n\ncluster_EmailModule\n\n\n\ncluster_EmailModule_exports\n\n\n\ncluster_EmailModule_providers\n\n\n\ncluster_MeetingRoomModule\n\n\n\ncluster_MeetingRoomModule_providers\n\n\n\ncluster_RedisModule\n\n\n\ncluster_RedisModule_exports\n\n\n\ncluster_RedisModule_providers\n\n\n\ncluster_StatisticModule\n\n\n\ncluster_StatisticModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nBookingModule\n\nBookingModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBookingModule->AppModule\n\n\n\n\n\nEmailModule\n\nEmailModule\n\nAppModule -->\n\nEmailModule->AppModule\n\n\n\n\n\nEmailService \n\nEmailService \n\nEmailService  -->\n\nEmailModule->EmailService \n\n\n\n\n\nMeetingRoomModule\n\nMeetingRoomModule\n\nAppModule -->\n\nMeetingRoomModule->AppModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nAppModule -->\n\nRedisModule->AppModule\n\n\n\n\n\nRedisService \n\nRedisService \n\nRedisService  -->\n\nRedisModule->RedisService \n\n\n\n\n\nStatisticModule\n\nStatisticModule\n\nAppModule -->\n\nStatisticModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nBookingService\n\nBookingService\n\nBookingModule -->\n\nBookingService->BookingModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nEmailModule -->\n\nEmailService->EmailModule\n\n\n\n\n\nMeetingRoomService\n\nMeetingRoomService\n\nMeetingRoomModule -->\n\nMeetingRoomService->MeetingRoomModule\n\n\n\n\n\nRedisService\n\nRedisService\n\nRedisModule -->\n\nRedisService->RedisModule\n\n\n\n\n\nStatisticService\n\nStatisticService\n\nStatisticModule -->\n\nStatisticService->StatisticModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    21 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/refreshTokenVo.html":{"url":"classes/refreshTokenVo.html","title":"class - refreshTokenVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  refreshTokenVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/vo/refresh-token.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/refresh-token.vo.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/vo/refresh-token.vo.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class refreshTokenVo {\n  @ApiProperty()\n  accessToken: string;\n\n  @ApiProperty()\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RequireLogin   (src/.../custom.decorator.ts)\n                        \n                        \n                            RequirePermission   (src/.../custom.decorator.ts)\n                        \n                        \n                            storage   (src/.../my-file-storage.ts)\n                        \n                        \n                            UserInfo   (src/.../custom.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/custom.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RequireLogin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata('require-login', true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RequirePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...permissions: string[]) =>\n  SetMetadata('require-permission', permissions)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    if (!request.user) {\n      return null;\n    }\n\n    return data ? request.user[data] : request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/my-file-storage.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : multer.diskStorage({\n  destination: function (req, file, cb) {\n    try {\n      fs.mkdirSync('uploads');\n    } catch (e) { }\n    cb(null, 'uploads');\n  },\n  filename: function (req, file, cb) {\n    const uniqueSuffix =\n      Date.now() +\n      '-' +\n      Math.round(Math.random() * 1e9) +\n      '-' +\n      file.originalname;\n    cb(null, uniqueSuffix);\n  },\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
